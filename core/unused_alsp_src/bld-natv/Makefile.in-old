#
# Makefile.in is the Makefile template for alspro.
# Makefile is generated from Makefile.in by running configure.
#

systype = natv
srcdir = @srcdir@/..
VPATH  = @srcdir@/../generic:@srcdir@/../@ARCH@:..

ARCH		= @ARCH@
OS		= @OS@

CC		= @CC@
LINK		= $(CC)
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
LN_S		= @LN_S@
SHELL		= /bin/sh

CFLAGS		= -O -g -Wall -Wshadow -Wconversion -Wstrict-prototypes -Wmissing-prototypes
LDFLAGS		= 
LIBS		= @LIBS@

X_CFLAGS	= @X_CFLAGS@
X_LIBS		= @X_LIBS@
X_EXTRA_LIBS	= @X_EXTRA_LIBS@

prefix		= /usr/local
exec_prefix	= $(prefix)

PROLOG		= ../bld-port/alspro

#include $(srcdir)/generic/mh-generic
#include $(srcdir)/$(ARCH)/mh-$(ARCH)
#include $(srcdir)/$(ARCH)/$(OS)/mh-$(OS)

include $(srcdir)/generic/generic.mkf
include $(srcdir)/$(ARCH)/$(ARCH).mkf
include $(srcdir)/$(ARCH)/$(OS)/$(OS).mkf

objects = $(gfiles_o) $(afiles_o)

setup: pi_cfg.h pi_init.c
	echo setup done > setup

pi_cfg.h: $(srcdir)/generic/pi_cfg.h.proto 
	cp $(srcdir)/generic/pi_cfg.h.proto pi_cfg.h

pi_init.c: $(srcdir)/generic/pi_init.c
	cp $(srcdir)/generic/pi_init.c  pi_init.c

alspro.a: setup $(objects)
	ar ruv alspro.a $(objects)
	-ranlib alspro.a

alspro_basis: pimain.o alspro.a 
	$(CC) -o alspro_basis $^ $(LDFLAGS) $(LIBS)

IMGOPTS = select_lib([debugger])

alspro: alspro_basis
	alspro_basis -obp -g 'save_image(alspro,[$(IMGOPTS)])'

testdir	= $(srcdir)/tests

testrun: alspro
	alspro -b $(testdir)/autotest $(testdir)/autotest_db -g run_tests -p -srcdir $(srcdir)

atrans: $(srcdir)/generate/atrans
	if [ ! -d atrans ]; then		\
		rm -rf atrans;			\
		mkdir atrans;			\
	fi
	if [ `echo $(srcdir) | sed -e 's/^\(.\).*/\1/'` = "/" ]; then	\
		$(LN_S) $(srcdir)/generate/atrans/*.pro atrans;		\
		$(LN_S) $(srcdir)/$(ARCH)/atr_*.pro atrans;		\
		$(LN_S) $(srcdir)/$(ARCH)/$(OS)/atr_*.pro atrans;	\
	else								\
	    (	cd atrans; 						\
		$(LN_S) ../$(srcdir)/generate/atrans/*.pro . ;		\
		$(LN_S) ../$(srcdir)/$(ARCH)/atr_*.pro . ;		\
		$(LN_S) ../$(srcdir)/$(ARCH)/$(OS)/atr_*.pro . ;	\
	    );								\
	fi

$(asrcext).s :
	ALSPATH=atrans; export ALSPATH;					\
	$(PROLOG) -b atrans atr_inst atr_args atr_out -g atrans -p $< -I$(srcdir)/$(ARCH) -I$(srcdir)/generic -I.. -o $@

.SUFFIXES:	$(asrcext)

cleanup:
	-rm *.o
	-rm *.obp
	-rm core

super_clean:
	-rm *.o
	-rm *.h
	-rm *.obp
	-rm core
	-rm alsmics
	-rm -r atrans
	-rm -r alsdir
