NAME

     $$int86/9   -- issue the given DOS interrupt with given registers
     $$int86/10  -- issue the given DOS interrupt with given registers
     $$int86/16  -- issue the given DOS interrupt with given registers
   

FORMS

     $$int86(IntNum,AX,BX,CX,DX,RetAX,RetBX,RetCX,RetDX)
     $$int86(IntNum,AX,BX,CX,DX,RetAX,RetBX,RetCX,RetDX,RetEFlags)
     $$int86(IntNum,EAX,EBX,ECX,EDX,EBP,ESI,EDI,
             RetEAX,RetEBX,RetECX,RetEDX,RetEBP,RetESI,RetEDI,RetEFlags)


DESCRIPTION

     These three predicates issue the interrupt whose number is given
     in the first argument with given register values. The first
     argument must be an integer and a valid interrupt number. 
     In first two predicates $$int86/9 and $$int86/10, arguments AX, BX
     CX and DX must be integers and hold values of word registers AX, BX, 
     CX and DX before the interrupt is issued. Arguments RetAX, RetBX,
     RetCX and RetDX will be bound values of word registers AX, BX, CX
     and DX after the interrupt is executed, and their types will be
     integer. The argument RetEFlags is bound to value of EFlags register
     after the interrupt is executed (only lower 18 flags are returned).   

     In the predicate $$int86/16, input arguments must hold values of
     32-bit long word registers EAX, EBX, ECX, EDX, EBP, ESI and EDI.
     A register input argument can be an integer, a double number, a symbol
     or an UIA. If it is a number, that number will be put into the
     corresponding register before the interrupt is issued. If it is 
     a symbol, that symbol will be copied into a temporary buffer,
     and a pointer to that temporary buffer will be put into the
     corresponding buffer. On the other hand, if it is an UIA, a pointer
     to the first byte of that UIA will be put into the corresponding
     register (NOTE: you may destroy Prolog heap, when the argument is an UIA).
     Register output arguments will be unified with values of 32-bit long
     word registers EAX, EBX, ECX, EDX, EBP, ESI and EDI after the
     interrupt is executed. A return register argument will be unified
     with the number in the corresponding register, if corresponding
     input argument is not an UIA. If the corresponding input register
     is an UIA, the return register will be unified with that input argument.
     

NOTES

     Although these three predicates allow you execute most of DOS interrupts 
     from Prolog level, you may not be able to execute all of them.




