
$icode(ServiceNumber,Arg1,Arg2,Arg3,Arg4)


Negative icode Services 	(in 386 system)
=======================


 No 	Instruction 			Arg1 		Arg2 		Arg3 		Arg4
 ==		=========== 			==== 		==== 		==== 		====
 -1 	init_codebuffer 		n/a 		n/a 		n/a 		n/a
 -2 	end_clause 				Pred 		Arity 		n/a 		n/a
 -3 	asserta  				n/a 		n/a 		n/a 		n/a
 -4 	assertz 				n/a 		n/a 		n/a 		n/a
 -5 	exec_query 				n/a 		n/a 		n/a 		n/a
 -6 	exec_command 			n/a 		n/a 		n/a 		n/a
 -7 	NOT USED
 -8 	add_use 				Module 		n/a 		n/a 		n/a
 -9 	end_module 				n/a 		n/a 		n/a 		n/a
-10 	new_module 				Module 		n/a 		n/a 		n/a
-11 	export_pred 			Pred 		Arity 		n/a 		n/a
-12 	first_arg 				Type 		Func  		Arity 		Val
-13 	begin_macro 			n/a 		n/a 		n/a 		n/a
-14 	end_macro				KeepFlag 	n/a 		n/a 		n/a
-15 	put_macro				LastFlag 	n/a 		n/a 		n/a
-16 	NOT USED
-17 	NOT USED
-18 	reset_obp				n/a 		n/a 		n/a 		n/a
-19 	NOT USED
-20 	NOT USED 
-21 	addto_autouse 			Module 		n/a 		n/a 		n/a
-22 	addto_autoname 			Pred 		Arity 		n/a 		n/a
-23 	NOT USED 
-24 	cremodclosure 			Pred1 		Arity 		Pred2 		n/a
-25 	begin_alloc 			n/a 		n/a 		n/a 		n/a
-26 	end_alloc 				n/a 		n/a 		n/a 		n/a




where

	Pred 		A symbol representing predicate name.
	Arity 		An integer representing predicate arity.
	Module 		A symbol representing module name.
	Type 
	Func
	Val 		An integer
	KeepFlag 	0 or 1
	LastFlag 	0 or 1
	
Notes:

	I think that the current version of $icode/5 cannot support 
	"first_arg" service from Prolog level. 

	To use some of negative icode services without using positive 
	icode services doesn't make a sense. For example, "begin_macro"
	and "end_macro" should be used together with postive icodes.

