# 
#	        generic.mkf
#	    Copyright (c) 1994-95 Applied Logic Systems, Inc.
#	  
#	Makefile fragment to be included by each Makefile 
#	 
#	For building ALS-Prolog on >>mac<<
#	  
#	Generated by abs2make from generic.abs: 95/10/12 - 20:33:10
# 

# 
#	How to build everything
# 

macall Ä  generated mpw_alspro_b_ppc mpw_alspro_b_68k sioux_alspro_b_68k sioux_alspro_b_ppc mpw_alspro_b sioux_alspro_b alspro_b alstest

# 
#	Define CPPFLAGS and the default rule for translating
#	C source files to object files
# 

CPPFLAGS =   -i : -i :: -i {srcdir}generic: -i {srcdir}generic:generate:tok.h: -i {srcdir}{ARCH} -i {srcdir}{ARCH}:{SOS} -D HAVE_CONFIG_H

.68k.o Ä .c
	{CC68k} -o {TargDir}{Default}.68k.o {CPPFLAGS} {CFLAGS} {CFLAGS68k} {DepDir}{Default}.c


.ppc.o Ä .c
	{CCppc} -o {TargDir}{Default}.ppc.o {CPPFLAGS} {CFLAGS} {CFLAGSppc} {DepDir}{Default}.c


.mpw_ppc.o Ä .c
	{CCppc} -o {TargDir}{Default}.mpw_ppc.o {CPPFLAGS} {CFLAGS} {CFLAGSppc} {MPWPPCFLAGS} {DepDir}{Default}.c


# 
#	C-defined files making up common part of system
# 

gforfiles_68k_o =  

gpckgfiles_68k_o =  	nopckg.68k.o


glibfiles_68k_o =  	alloc.68k.o ¶
	arith.68k.o ¶
	bcinter.68k.o ¶
	bdb.68k.o ¶
	bdbg.68k.o ¶
	bgv.68k.o ¶
	bio.68k.o ¶
	bmeta.68k.o ¶
	bmisc.68k.o ¶
	bos.68k.o ¶
	bparser.68k.o ¶
	bpckg.68k.o ¶
	bsio.68k.o ¶
	bsystem.68k.o ¶
	built.68k.o ¶
	butil.68k.o ¶
	cinterf.68k.o ¶
	compile.68k.o ¶
	compmath.68k.o ¶
	cutmacro.68k.o ¶
	expand.68k.o ¶
	fatal.68k.o ¶
	fileio.68k.o ¶
	foreign.68k.o ¶
	freeze.68k.o ¶
	fsdos.68k.o ¶
	fsmac.68k.o ¶
	fsunix.68k.o ¶
	fsvms.68k.o ¶
	gc.68k.o ¶
	gv.68k.o ¶
	index.68k.o ¶
	intaux.68k.o ¶
	intrv.68k.o ¶
	lexan.68k.o ¶
	lforeign.68k.o ¶
	loadfile.68k.o ¶
	main.68k.o ¶
	mapsym.68k.o ¶
	mem.68k.o ¶
	module.68k.o ¶
	parser.68k.o ¶
	pckgcoff.68k.o ¶
	pckgload.68k.o ¶
	pckgmake.68k.o ¶
	pi_init.68k.o ¶
	rinfo.68k.o ¶
	sig.68k.o ¶
	symtab.68k.o ¶
	varproc.68k.o ¶
	vprintf.68k.o ¶
	wdisp.68k.o ¶
	wintcode.68k.o ¶
	winter.68k.o


gfiles_68k_o =   {gforfiles_68k_o} {gpckgfiles_68k_o} {glibfiles_68k_o}

gforfiles_ppc_o =  

gpckgfiles_ppc_o =  	nopckg.ppc.o


glibfiles_ppc_o =  	alloc.ppc.o ¶
	arith.ppc.o ¶
	bcinter.ppc.o ¶
	bdb.ppc.o ¶
	bdbg.ppc.o ¶
	bgv.ppc.o ¶
	bio.ppc.o ¶
	bmeta.ppc.o ¶
	bmisc.ppc.o ¶
	bos.ppc.o ¶
	bparser.ppc.o ¶
	bpckg.ppc.o ¶
	bsio.ppc.o ¶
	bsystem.ppc.o ¶
	built.ppc.o ¶
	butil.ppc.o ¶
	cinterf.ppc.o ¶
	compile.ppc.o ¶
	compmath.ppc.o ¶
	cutmacro.ppc.o ¶
	expand.ppc.o ¶
	fatal.ppc.o ¶
	fileio.ppc.o ¶
	foreign.ppc.o ¶
	freeze.ppc.o ¶
	fsdos.ppc.o ¶
	fsmac.ppc.o ¶
	fsunix.ppc.o ¶
	fsvms.ppc.o ¶
	gc.ppc.o ¶
	gv.ppc.o ¶
	index.ppc.o ¶
	intaux.ppc.o ¶
	intrv.ppc.o ¶
	lexan.ppc.o ¶
	lforeign.ppc.o ¶
	loadfile.ppc.o ¶
	main.ppc.o ¶
	mapsym.ppc.o ¶
	mem.ppc.o ¶
	module.ppc.o ¶
	parser.ppc.o ¶
	pckgcoff.ppc.o ¶
	pckgload.ppc.o ¶
	pckgmake.ppc.o ¶
	pi_init.ppc.o ¶
	rinfo.ppc.o ¶
	sig.ppc.o ¶
	symtab.ppc.o ¶
	varproc.ppc.o ¶
	vprintf.ppc.o ¶
	wdisp.ppc.o ¶
	wintcode.ppc.o ¶
	winter.ppc.o


gfiles_ppc_o =   {gforfiles_ppc_o} {gpckgfiles_ppc_o} {glibfiles_ppc_o}

gforfiles_mpw_ppc_o =  

gpckgfiles_mpw_ppc_o =  	nopckg.mpw_ppc.o


glibfiles_mpw_ppc_o =  	alloc.mpw_ppc.o ¶
	arith.mpw_ppc.o ¶
	bcinter.mpw_ppc.o ¶
	bdb.mpw_ppc.o ¶
	bdbg.mpw_ppc.o ¶
	bgv.mpw_ppc.o ¶
	bio.mpw_ppc.o ¶
	bmeta.mpw_ppc.o ¶
	bmisc.mpw_ppc.o ¶
	bos.mpw_ppc.o ¶
	bparser.mpw_ppc.o ¶
	bpckg.mpw_ppc.o ¶
	bsio.mpw_ppc.o ¶
	bsystem.mpw_ppc.o ¶
	built.mpw_ppc.o ¶
	butil.mpw_ppc.o ¶
	cinterf.mpw_ppc.o ¶
	compile.mpw_ppc.o ¶
	compmath.mpw_ppc.o ¶
	cutmacro.mpw_ppc.o ¶
	expand.mpw_ppc.o ¶
	fatal.mpw_ppc.o ¶
	fileio.mpw_ppc.o ¶
	foreign.mpw_ppc.o ¶
	freeze.mpw_ppc.o ¶
	fsdos.mpw_ppc.o ¶
	fsmac.mpw_ppc.o ¶
	fsunix.mpw_ppc.o ¶
	fsvms.mpw_ppc.o ¶
	gc.mpw_ppc.o ¶
	gv.mpw_ppc.o ¶
	index.mpw_ppc.o ¶
	intaux.mpw_ppc.o ¶
	intrv.mpw_ppc.o ¶
	lexan.mpw_ppc.o ¶
	lforeign.mpw_ppc.o ¶
	loadfile.mpw_ppc.o ¶
	main.mpw_ppc.o ¶
	mapsym.mpw_ppc.o ¶
	mem.mpw_ppc.o ¶
	module.mpw_ppc.o ¶
	parser.mpw_ppc.o ¶
	pckgcoff.mpw_ppc.o ¶
	pckgload.mpw_ppc.o ¶
	pckgmake.mpw_ppc.o ¶
	pi_init.mpw_ppc.o ¶
	rinfo.mpw_ppc.o ¶
	sig.mpw_ppc.o ¶
	symtab.mpw_ppc.o ¶
	varproc.mpw_ppc.o ¶
	vprintf.mpw_ppc.o ¶
	wdisp.mpw_ppc.o ¶
	wintcode.mpw_ppc.o ¶
	winter.mpw_ppc.o


gfiles_mpw_ppc_o =   {gforfiles_mpw_ppc_o} {gpckgfiles_mpw_ppc_o} {glibfiles_mpw_ppc_o}

gfiles_h =  	alloc.h ¶
	alsmem.h ¶
	alspi.h ¶
	alssig.h ¶
	bsio.h ¶
	built.h ¶
	chpt.h ¶
	cinterf.h ¶
	coerce.h ¶
	compile.h ¶
	cutmacro.h ¶
	defs.h ¶
	fatal.h ¶
	fileio.h ¶
	hztypes.h ¶
	icodedef.h ¶
	icodegen.h ¶
	icom.h ¶
	intrv.h ¶
	intrv_pr.h ¶
	istr.h ¶
	lexan.h ¶
	lexinit.h ¶
	main.h ¶
	missing.h ¶
	module.h ¶
	mvarargs.h ¶
	parser.h ¶
	parsstak.h ¶
	pckg.h ¶
	pckgcoff.h ¶
	pckgmake.h ¶
	rinfo.h ¶
	sig.h ¶
	siolex.h ¶
	tokens.h ¶
	tokini.h ¶
	tokini2.h ¶
	alstypes.h ¶
	varproc.h ¶
	version.h ¶
	wamops.h ¶
	wamops0.h ¶
	wci.h ¶
	wd_size.h ¶
	wintcode.h ¶
	winter.h ¶
	wintidx.h ¶
	wntbl.h


OTHERFILES =   alsglue.c

# 
#	These items must generate themselves from other files
# 

GENFILES =   magic.h

generated Ä  {GENFILES}

MAGICRUN =   magic

magic Ä  {srcdir}generic:generate:magic.c {srcdir}generic:defs.h {srcdir}{ARCH}:aconfig.h {srcdir}{ARCH}:{SOS}:oconfig.h {srcdir}{ARCH}:{SOS}:config.h tconfig.h
	{CC68k} -o magic.o {CPPFLAGS} {CFLAGS} {CFLAGS68K} {srcdir}generic:generate:magic.c
	{LINK68K} -o magic {TOOLLINKFLAGS} {MPWINITLIBS68K} magic.o {MPWLIBS68K}


magic.h Ä  magic
	{MAGICRUN}


# 
#	generic dependencies
#	 
#	At present, these are hand generated because I've got a feeling that it
#	is now somewhat simpler to do it this way than it was in the past.
# 

defs_h =  	aconfig.h ¶
	alloc.h ¶
	alspi.h ¶
	alssig.h ¶
	built.h ¶
	chpt.h ¶
	config.h ¶
	defs.h ¶
	dfltsys.h ¶
	fatal.h ¶
	fileio.h ¶
	lexan.h ¶
	missing.h ¶
	mtypes.h ¶
	parser.h ¶
	tconfig.h ¶
	tokens.h ¶
	alstypes.h ¶
	wamops.h ¶
	wamops0.h ¶
	winter.h ¶
	wintidx.h


alstest Ä  alspro_b
	echo >> nrev_rcd
	alspro_b -obp {srcdir}tests:snrev -g snrev >> nrev_rcd
	catenate nrev_rcd


