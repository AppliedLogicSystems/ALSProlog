#!/bin/sh

# Check for correct number of arguments
if test $# -lt 2
then
    echo 'Usage: unix_setup source_dir os [flags...]' 1>&2
    echo 'Example:' 1>&2
    echo '    unix_setup ../alsp_src hpux' 1>&2
    exit 2
fi


# Extract arguments
source_dir=$1
os=$2
proc=port
shift 2
flags=$*

# Check for relative source directory
if echo $source_dir | grep -s '^/'
then
    echo "Invalid source directory ($source_dir)" 1>&2
    echo "Source directory must be relative" 1>&2
    exit 2
fi

# Install the link to the source directory (for windows and mac builds):
ln -s $source_dir .

# Check for correct OS
case $os in
aix|hpux|sunos|solaris|linux|irix|cygwin32|all) ;;
*) echo "Unknown OS ($os)" 1>&2; exit 2;;
esac

# Check for correct processor
case $proc in
port) ;;
*) echo "Unknown Processor ($proc)" 1>&2; exit 2;;
esac

setup () {
    os=$1
    proc=$2
    flags=$3

    if test ! -d $os
    then
        mkdir $os
    fi

    echo "SOURCE_DIR=../$source_dir" > $os/Makefile
    echo "OS=unix" >> $os/Makefile
    echo "SUBOS=$os" >> $os/Makefile
    echo "PROC=$proc" >> $os/Makefile
    echo "BUILD_FLAGS=$flags" >> $os/Makefile
    echo 'include $(SOURCE_DIR)/generic/gnu_makefile' >> $os/Makefile
}


os_list='aix hpux sunos solaris linux irix cygwin32'

if test $os = all
then
    for i in $os_list
    do
	setup $i $proc "$flags"
    done
else
    setup $os $proc "$flags"
fi


