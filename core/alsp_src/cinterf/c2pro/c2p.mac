
%--- c2p defStruct Macros ---

define_macro((accessC2P(inFile,_A,_B) => arg(1,_A,_B))).
define_macro((setC2P(inFile,_A,_B) => mangle(1,_A,_B))).

define_macro((accessC2P(inStream,_A,_B) => arg(2,_A,_B))).
define_macro((setC2P(inStream,_A,_B) => mangle(2,_A,_B))).

define_macro((accessC2P(curLine,_A,_B) => arg(3,_A,_B))).
define_macro((setC2P(curLine,_A,_B) => mangle(3,_A,_B))).

define_macro((accessC2P(curLineNum,_A,_B) => arg(4,_A,_B))).
define_macro((setC2P(curLineNum,_A,_B) => mangle(4,_A,_B))).

define_macro((accessC2P(ifdef_stack,_A,_B) => arg(5,_A,_B))).
define_macro((setC2P(ifdef_stack,_A,_B) => mangle(5,_A,_B))).

define_macro((accessC2P(fd_stack,_A,_B) => arg(6,_A,_B))).
define_macro((setC2P(fd_stack,_A,_B) => mangle(6,_A,_B))).

define_macro((accessC2P(tgt_os,_A,_B) => arg(7,_A,_B))).
define_macro((setC2P(tgt_os,_A,_B) => mangle(7,_A,_B))).

define_macro((accessC2P(info_table,_A,_B) => arg(8,_A,_B))).
define_macro((setC2P(info_table,_A,_B) => mangle(8,_A,_B))).

define_macro((accessC2P(fcn_filter,_A,_B) => arg(9,_A,_B))).
define_macro((setC2P(fcn_filter,_A,_B) => mangle(9,_A,_B))).

define_macro((accessC2P(outFile,_A,_B) => arg(10,_A,_B))).
define_macro((setC2P(outFile,_A,_B) => mangle(10,_A,_B))).

define_macro((accessC2P(outStream,_A,_B) => arg(11,_A,_B))).
define_macro((setC2P(outStream,_A,_B) => mangle(11,_A,_B))).

define_macro((
    makeC2P(_A) => _A=..[c2p,nil,nil,nil,0,[[]],[],unix,[],all,nil,nil])).

define_macro((
    makeC2P(_A,_B) =>
            struct_lookup_subst(
                [inFile,inStream,curLine,curLineNum,ifdef_stack,fd_stack,
                    tgt_os,info_table,fcn_filter,outFile,outStream],
                [nil,nil,nil,0,[[]],[],unix,[],all,nil,nil],_B,_C),
            _A=..[c2p|_C])).

