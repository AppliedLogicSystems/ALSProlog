/*================================================================
          x.src
          --Generated from: ./x.spc
          Date: 94/9/8   Time: 15:17:22
 *===============================================================*/


/* Open file ./x.spc */


/* Open file x.h */


/* Open file /usr/include/X11/Xlib.h */


/* Open file /usr/include/X11/X.h */

als_const('X_PROTOCOL',int).
als_const('X_PROTOCOL_REVISION',int).

als_type('XID',[unsigned_long]).

als_type('Window',[unsigned_long]).

als_type('Drawable',[unsigned_long]).

als_type('Font',[unsigned_long]).

als_type('Pixmap',[unsigned_long]).

als_type('Cursor',[unsigned_long]).

als_type('Colormap',[unsigned_long]).

als_type('GContext',[unsigned_long]).

als_type('KeySym',[unsigned_long]).

als_type('Mask',[unsigned_long]).

als_type('Atom',[unsigned_long]).

als_type('VisualID',[unsigned_long]).

als_type('Time',[unsigned_long]).

als_type('KeyCode',[unsigned_char]).
als_const('None',int).
als_const('ParentRelative',int).
als_const('CopyFromParent',int).
als_const('PointerWindow',int).
als_const('InputFocus',int).
als_const('PointerRoot',int).
als_const('AnyPropertyType',int).
als_const('AnyKey',int).
als_const('AnyButton',int).
als_const('AllTemporary',int).
als_const('CurrentTime',int).
als_const('NoSymbol',int).
als_const('NoEventMask',int).
als_const('KeyPressMask',int).
als_const('KeyReleaseMask',int).
als_const('ButtonPressMask',int).
als_const('ButtonReleaseMask',int).
als_const('EnterWindowMask',int).
als_const('LeaveWindowMask',int).
als_const('PointerMotionMask',int).
als_const('PointerMotionHintMask',int).
als_const('Button1MotionMask',int).
als_const('Button2MotionMask',int).
als_const('Button3MotionMask',int).
als_const('Button4MotionMask',int).
als_const('Button5MotionMask',int).
als_const('ButtonMotionMask',int).
als_const('KeymapStateMask',int).
als_const('ExposureMask',int).
als_const('VisibilityChangeMask',int).
als_const('StructureNotifyMask',int).
als_const('ResizeRedirectMask',int).
als_const('SubstructureNotifyMask',int).
als_const('SubstructureRedirectMask',int).
als_const('FocusChangeMask',int).
als_const('PropertyChangeMask',int).
als_const('ColormapChangeMask',int).
als_const('OwnerGrabButtonMask',int).
als_const('KeyPress',int).
als_const('KeyRelease',int).
als_const('ButtonPress',int).
als_const('ButtonRelease',int).
als_const('MotionNotify',int).
als_const('EnterNotify',int).
als_const('LeaveNotify',int).
als_const('FocusIn',int).
als_const('FocusOut',int).
als_const('KeymapNotify',int).
als_const('Expose',int).
als_const('GraphicsExpose',int).
als_const('NoExpose',int).
als_const('VisibilityNotify',int).
als_const('CreateNotify',int).
als_const('DestroyNotify',int).
als_const('UnmapNotify',int).
als_const('MapNotify',int).
als_const('MapRequest',int).
als_const('ReparentNotify',int).
als_const('ConfigureNotify',int).
als_const('ConfigureRequest',int).
als_const('GravityNotify',int).
als_const('ResizeRequest',int).
als_const('CirculateNotify',int).
als_const('CirculateRequest',int).
als_const('PropertyNotify',int).
als_const('SelectionClear',int).
als_const('SelectionRequest',int).
als_const('SelectionNotify',int).
als_const('ColormapNotify',int).
als_const('ClientMessage',int).
als_const('MappingNotify',int).
als_const('LASTEvent',int).
als_const('ShiftMask',int).
als_const('LockMask',int).
als_const('ControlMask',int).
als_const('Mod1Mask',int).
als_const('Mod2Mask',int).
als_const('Mod3Mask',int).
als_const('Mod4Mask',int).
als_const('Mod5Mask',int).
als_const('ShiftMapIndex',int).
als_const('LockMapIndex',int).
als_const('ControlMapIndex',int).
als_const('Mod1MapIndex',int).
als_const('Mod2MapIndex',int).
als_const('Mod3MapIndex',int).
als_const('Mod4MapIndex',int).
als_const('Mod5MapIndex',int).
als_const('Button1Mask',int).
als_const('Button2Mask',int).
als_const('Button3Mask',int).
als_const('Button4Mask',int).
als_const('Button5Mask',int).
als_const('AnyModifier',int).
als_const('Button1',int).
als_const('Button2',int).
als_const('Button3',int).
als_const('Button4',int).
als_const('Button5',int).
als_const('NotifyNormal',int).
als_const('NotifyGrab',int).
als_const('NotifyUngrab',int).
als_const('NotifyWhileGrabbed',int).
als_const('NotifyHint',int).
als_const('NotifyAncestor',int).
als_const('NotifyVirtual',int).
als_const('NotifyInferior',int).
als_const('NotifyNonlinear',int).
als_const('NotifyNonlinearVirtual',int).
als_const('NotifyPointer',int).
als_const('NotifyPointerRoot',int).
als_const('NotifyDetailNone',int).
als_const('VisibilityUnobscured',int).
als_const('VisibilityPartiallyObscured',int).
als_const('VisibilityFullyObscured',int).
als_const('PlaceOnTop',int).
als_const('PlaceOnBottom',int).
als_const('FamilyInternet',int).
als_const('FamilyDECnet',int).
als_const('FamilyChaos',int).
als_const('PropertyNewValue',int).
als_const('PropertyDelete',int).
als_const('ColormapUninstalled',int).
als_const('ColormapInstalled',int).
als_const('GrabModeSync',int).
als_const('GrabModeAsync',int).
als_const('GrabSuccess',int).
als_const('AlreadyGrabbed',int).
als_const('GrabInvalidTime',int).
als_const('GrabNotViewable',int).
als_const('GrabFrozen',int).
als_const('AsyncPointer',int).
als_const('SyncPointer',int).
als_const('ReplayPointer',int).
als_const('AsyncKeyboard',int).
als_const('SyncKeyboard',int).
als_const('ReplayKeyboard',int).
als_const('AsyncBoth',int).
als_const('SyncBoth',int).
als_const('RevertToNone',int).
als_const('RevertToPointerRoot',int).
als_const('RevertToParent',int).
als_const('Success',int).
als_const('BadRequest',int).
als_const('BadValue',int).
als_const('BadWindow',int).
als_const('BadPixmap',int).
als_const('BadAtom',int).
als_const('BadCursor',int).
als_const('BadFont',int).
als_const('BadMatch',int).
als_const('BadDrawable',int).
als_const('BadAccess',int).
als_const('BadAlloc',int).
als_const('BadColor',int).
als_const('BadGC',int).
als_const('BadIDChoice',int).
als_const('BadName',int).
als_const('BadLength',int).
als_const('BadImplementation',int).
als_const('FirstExtensionError',int).
als_const('LastExtensionError',int).
als_const('InputOutput',int).
als_const('InputOnly',int).
als_const('CWBackPixmap',int).
als_const('CWBackPixel',int).
als_const('CWBorderPixmap',int).
als_const('CWBorderPixel',int).
als_const('CWBitGravity',int).
als_const('CWWinGravity',int).
als_const('CWBackingStore',int).
als_const('CWBackingPlanes',int).
als_const('CWBackingPixel',int).
als_const('CWOverrideRedirect',int).
als_const('CWSaveUnder',int).
als_const('CWEventMask',int).
als_const('CWDontPropagate',int).
als_const('CWColormap',int).
als_const('CWCursor',int).
als_const('CWX',int).
als_const('CWY',int).
als_const('CWWidth',int).
als_const('CWHeight',int).
als_const('CWBorderWidth',int).
als_const('CWSibling',int).
als_const('CWStackMode',int).
als_const('ForgetGravity',int).
als_const('NorthWestGravity',int).
als_const('NorthGravity',int).
als_const('NorthEastGravity',int).
als_const('WestGravity',int).
als_const('CenterGravity',int).
als_const('EastGravity',int).
als_const('SouthWestGravity',int).
als_const('SouthGravity',int).
als_const('SouthEastGravity',int).
als_const('StaticGravity',int).
als_const('UnmapGravity',int).
als_const('NotUseful',int).
als_const('WhenMapped',int).
als_const('Always',int).
als_const('IsUnmapped',int).
als_const('IsUnviewable',int).
als_const('IsViewable',int).
als_const('SetModeInsert',int).
als_const('SetModeDelete',int).
als_const('DestroyAll',int).
als_const('RetainPermanent',int).
als_const('RetainTemporary',int).
als_const('Above',int).
als_const('Below',int).
als_const('TopIf',int).
als_const('BottomIf',int).
als_const('Opposite',int).
als_const('RaiseLowest',int).
als_const('LowerHighest',int).
als_const('PropModeReplace',int).
als_const('PropModePrepend',int).
als_const('PropModeAppend',int).
als_const('GXclear',int).
als_const('GXand',int).
als_const('GXandReverse',int).
als_const('GXcopy',int).
als_const('GXandInverted',int).
als_const('GXnoop',int).
als_const('GXxor',int).
als_const('GXor',int).
als_const('GXnor',int).
als_const('GXequiv',int).
als_const('GXinvert',int).
als_const('GXorReverse',int).
als_const('GXcopyInverted',int).
als_const('GXorInverted',int).
als_const('GXnand',int).
als_const('GXset',int).
als_const('LineSolid',int).
als_const('LineOnOffDash',int).
als_const('LineDoubleDash',int).
als_const('CapNotLast',int).
als_const('CapButt',int).
als_const('CapRound',int).
als_const('CapProjecting',int).
als_const('JoinMiter',int).
als_const('JoinRound',int).
als_const('JoinBevel',int).
als_const('FillSolid',int).
als_const('FillTiled',int).
als_const('FillStippled',int).
als_const('FillOpaqueStippled',int).
als_const('EvenOddRule',int).
als_const('WindingRule',int).
als_const('ClipByChildren',int).
als_const('IncludeInferiors',int).
als_const('Unsorted',int).
als_const('YSorted',int).
als_const('YXSorted',int).
als_const('YXBanded',int).
als_const('CoordModeOrigin',int).
als_const('CoordModePrevious',int).
als_const('Complex',int).
als_const('Nonconvex',int).
als_const('Convex',int).
als_const('ArcChord',int).
als_const('ArcPieSlice',int).
als_const('GCFunction',int).
als_const('GCPlaneMask',int).
als_const('GCForeground',int).
als_const('GCBackground',int).
als_const('GCLineWidth',int).
als_const('GCLineStyle',int).
als_const('GCCapStyle',int).
als_const('GCJoinStyle',int).
als_const('GCFillStyle',int).
als_const('GCFillRule',int).
als_const('GCTile',int).
als_const('GCStipple',int).
als_const('GCTileStipXOrigin',int).
als_const('GCTileStipYOrigin',int).
als_const('GCFont',int).
als_const('GCSubwindowMode',int).
als_const('GCGraphicsExposures',int).
als_const('GCClipXOrigin',int).
als_const('GCClipYOrigin',int).
als_const('GCClipMask',int).
als_const('GCDashOffset',int).
als_const('GCDashList',int).
als_const('GCArcMode',int).
als_const('GCLastBit',int).
als_const('FontLeftToRight',int).
als_const('FontRightToLeft',int).
als_const('FontChange',int).
als_const('XYBitmap',int).
als_const('XYPixmap',int).
als_const('ZPixmap',int).
als_const('AllocNone',int).
als_const('AllocAll',int).
als_const('DoRed',int).
als_const('DoGreen',int).
als_const('DoBlue',int).
als_const('CursorShape',int).
als_const('TileShape',int).
als_const('StippleShape',int).
als_const('AutoRepeatModeOff',int).
als_const('AutoRepeatModeOn',int).
als_const('AutoRepeatModeDefault',int).
als_const('LedModeOff',int).
als_const('LedModeOn',int).
als_const('KBKeyClickPercent',int).
als_const('KBBellPercent',int).
als_const('KBBellPitch',int).
als_const('KBBellDuration',int).
als_const('KBLed',int).
als_const('KBLedMode',int).
als_const('KBKey',int).
als_const('KBAutoRepeatMode',int).
als_const('MappingSuccess',int).
als_const('MappingBusy',int).
als_const('MappingFailed',int).
als_const('MappingModifier',int).
als_const('MappingKeyboard',int).
als_const('MappingPointer',int).
als_const('DontPreferBlanking',int).
als_const('PreferBlanking',int).
als_const('DefaultBlanking',int).
als_const('DisableScreenSaver',int).
als_const('DisableScreenInterval',int).
als_const('DontAllowExposures',int).
als_const('AllowExposures',int).
als_const('DefaultExposures',int).
als_const('ScreenSaverReset',int).
als_const('ScreenSaverActive',int).
als_const('HostInsert',int).
als_const('HostDelete',int).
als_const('EnableAccess',int).
als_const('DisableAccess',int).
als_const('StaticGray',int).
als_const('GrayScale',int).
als_const('StaticColor',int).
als_const('PseudoColor',int).
als_const('TrueColor',int).
als_const('DirectColor',int).
als_const('LSBFirst',int).
als_const('MSBFirst',int).

/* Close file /usr/include/X11/X.h */

als_const('NeedWidePrototypes',int).
als_const('True',int).
als_const('False',int).
als_const('QueuedAlready',int).
als_const('QueuedAfterReading',int).
als_const('QueuedAfterFlush',int).
als_macro('ConnectionNumber').
als_macro('RootWindow').
als_macro('DefaultScreen').
als_macro('DefaultRootWindow').
als_macro('DefaultVisual').
als_macro('DefaultGC').
als_macro('BlackPixel').
als_macro('WhitePixel').
als_const('AllPlanes',int).
als_macro('QLength').
als_macro('DisplayWidth').
als_macro('DisplayHeight').
als_macro('DisplayWidthMM').
als_macro('DisplayHeightMM').
als_macro('DisplayPlanes').
als_macro('DisplayCells').
als_macro('ScreenCount').
als_macro('ServerVendor').
als_macro('ProtocolVersion').
als_macro('ProtocolRevision').
als_macro('VendorRelease').
als_macro('DisplayString').
als_macro('DefaultDepth').
als_macro('DefaultColormap').
als_macro('BitmapUnit').
als_macro('BitmapBitOrder').
als_macro('BitmapPad').
als_macro('ImageByteOrder').
als_macro('NextRequest').
als_macro('LastKnownRequestProcessed').
als_macro('ScreenOfDisplay').
als_macro('DefaultScreenOfDisplay').
als_macro('DisplayOfScreen').
als_macro('RootWindowOfScreen').
als_macro('BlackPixelOfScreen').
als_macro('WhitePixelOfScreen').
als_macro('DefaultColormapOfScreen').
als_macro('DefaultDepthOfScreen').
als_macro('DefaultGCOfScreen').
als_macro('DefaultVisualOfScreen').
als_macro('WidthOfScreen').
als_macro('HeightOfScreen').
als_macro('WidthMMOfScreen').
als_macro('HeightMMOfScreen').
als_macro('PlanesOfScreen').
als_macro('CellsOfScreen').
als_macro('MinCmapsOfScreen').
als_macro('MaxCmapsOfScreen').
als_macro('DoesSaveUnders').
als_macro('DoesBackingStore').
als_macro('EventMaskOfScreen').

als_struct('XExtData',['number'=[int],
'next'=[ptr,'struct _XExtData'],
'free_private'=[ptr,func,int],
'private_data'=[ptr,char]]).

als_struct('XExtCodes',['extension'=[int],
'major_opcode'=[int],
'first_event'=[int],
'first_error'=[int]]).

als_struct('_XExtension',['next'=[ptr,'struct _XExten'],
'codes'=['XExtCodes'],
'create_GC'=[ptr,func,int],
'copy_GC'=[ptr,func,int],
'flush_GC'=[ptr,func,int],
'free_GC'=[ptr,func,int],
'create_Font'=[ptr,func,int],
'free_Font'=[ptr,func,int],
'close_display'=[ptr,func,int],
'error'=[ptr,func,int],
'error_string'=[ptr,func,ptr,char],
'name'=[ptr,char]]).

als_struct('XPixmapFormatValues',['depth'=[int],
'bits_per_pixel'=[int],
'scanline_pad'=[int]]).

als_struct('XGCValues',['function'=[int],
'plane_mask'=[unsigned_long],
'foreground'=[unsigned_long],
'background'=[unsigned_long],
'line_width'=[int],
'line_style'=[int],
'cap_style'=[int],
'join_style'=[int],
'fill_style'=[int],
'fill_rule'=[int],
'arc_mode'=[int],
'tile'=[unsigned_long],
'stipple'=[unsigned_long],
'ts_x_origin'=[int],
'ts_y_origin'=[int],
'font'=[unsigned_long],
'subwindow_mode'=[int],
'graphics_exposures'=[int],
'clip_x_origin'=[int],
'clip_y_origin'=[int],
'clip_mask'=[unsigned_long],
'dash_offset'=[int],
'dashes'=[char]]).

als_type('GC',[ptr,struct]).

als_struct('Visual',['ext_data'=[ptr,'XExtData'],
'visualid'=[unsigned_long],
'class'=[int],
'red_mask'=[unsigned_long],
'green_mask'=[unsigned_long],
'blue_mask'=[unsigned_long],
'bits_per_rgb'=[int],
'map_entries'=[int]]).

als_struct('Depth',['depth'=[int],
'nvisuals'=[int],
'visuals'=[ptr,'Visual']]).

als_struct('Screen',['ext_data'=[ptr,'XExtData'],
'display'=[ptr,'struct _XDisplay'],
'root'=[unsigned_long],
'width'=[int],
'height'=[int],
'mwidth'=[int],
'mheight'=[int],
'ndepths'=[int],
'depths'=[ptr,'Depth'],
'root_depth'=[int],
'root_visual'=[ptr,'Visual'],
'default_gc'=[ptr,'GC'],
'cmap'=[unsigned_long],
'white_pixel'=[unsigned_long],
'black_pixel'=[unsigned_long],
'max_maps'=[int],
'min_maps'=[int],
'backing_store'=[int],
'save_unders'=[int],
'root_input_mask'=[long]]).

als_struct('ScreenFormat',['ext_data'=[ptr,'XExtData'],
'depth'=[int],
'bits_per_pixel'=[int],
'scanline_pad'=[int]]).

als_struct('XSetWindowAttributes',['background_pixmap'=[unsigned_long],
'background_pixel'=[unsigned_long],
'border_pixmap'=[unsigned_long],
'border_pixel'=[unsigned_long],
'bit_gravity'=[int],
'win_gravity'=[int],
'backing_store'=[int],
'backing_planes'=[unsigned_long],
'backing_pixel'=[unsigned_long],
'save_under'=[int],
'event_mask'=[long],
'do_not_propagate_mask'=[long],
'override_redirect'=[int],
'colormap'=[unsigned_long],
'cursor'=[unsigned_long]]).

als_struct('XWindowAttributes',['x'=[int],
'y'=[int],
'width'=[int],
'height'=[int],
'border_width'=[int],
'depth'=[int],
'visual'=[ptr,'Visual'],
'root'=[unsigned_long],
'class'=[int],
'bit_gravity'=[int],
'win_gravity'=[int],
'backing_store'=[int],
'backing_planes'=[unsigned_long],
'backing_pixel'=[unsigned_long],
'save_under'=[int],
'colormap'=[unsigned_long],
'map_installed'=[int],
'map_state'=[int],
'all_event_masks'=[long],
'your_event_mask'=[long],
'do_not_propagate_mask'=[long],
'override_redirect'=[int],
'screen'=[ptr,'Screen']]).

als_struct('XHostAddress',['family'=[int],
'length'=[int],
'address'=[ptr,char]]).

als_struct('XImage',['width'=[int],
'height'=[int],
'xoffset'=[int],
'format'=[int],
'data'=[ptr,char],
'byte_order'=[int],
'bitmap_unit'=[int],
'bitmap_bit_order'=[int],
'bitmap_pad'=[int],
'depth'=[int],
'bytes_per_line'=[int],
'bits_per_pixel'=[int],
'red_mask'=[unsigned_long],
'green_mask'=[unsigned_long],
'blue_mask'=[unsigned_long],
'obdata'=[ptr,char],
'f.create_image'=[ptr,func,ptr,'struct _XImage'],
'f.destroy_image'=[ptr,func,int],
'f.get_pixel'=[ptr,func,unsigned_long],
'f.put_pixel'=[ptr,func,int],
'f.sub_image'=[ptr,func,ptr,'struct _XImage'],
'f.add_pixel'=[ptr,func,int]]).

als_struct('XWindowChanges',['x'=[int],
'y'=[int],
'width'=[int],
'height'=[int],
'border_width'=[int],
'sibling'=[unsigned_long],
'stack_mode'=[int]]).

als_struct('XColor',['pixel'=[unsigned_long],
'red'=[unsigned_short],
'green'=[unsigned_short],
'blue'=[unsigned_short],
'flags'=[char],
'pad'=[char]]).

als_struct('XSegment',['x1'=[short],
'y1'=[short],
'x2'=[short],
'y2'=[short]]).

als_struct('XPoint',['x'=[short],
'y'=[short]]).

als_struct('XRectangle',['x'=[short],
'y'=[short],
'width'=[unsigned_short],
'height'=[unsigned_short]]).

als_struct('XArc',['x'=[short],
'y'=[short],
'width'=[unsigned_short],
'height'=[unsigned_short],
'angle1'=[short],
'angle2'=[short]]).

als_struct('XKeyboardControl',['key_click_percent'=[int],
'bell_percent'=[int],
'bell_pitch'=[int],
'bell_duration'=[int],
'led'=[int],
'led_mode'=[int],
'key'=[int],
'auto_repeat_mode'=[int]]).

als_struct('XKeyboardState',['key_click_percent'=[int],
'bell_percent'=[int],
'bell_pitch'=[unsigned_int],
'bell_duration'=[unsigned_int],
'led_mask'=[unsigned_long],
'global_auto_repeat'=[int],
'auto_repeats'=[array(32),char]]).

als_struct('XTimeCoord',['time'=[unsigned_long],
'x'=[short],
'y'=[short]]).

als_struct('XModifierKeymap',['max_keypermod'=[int],
'modifiermap'=[ptr,unsigned_char]]).

als_struct('solBufStruct',['buffer'=[ptr,char],
'bufptr'=[ptr,char],
'bufmax'=[ptr,char],
'ReqCode'=[int],
'first_error'=[int],
'extension'=[int]]).

als_struct('Display',['ext_data'=[ptr,'XExtData'],
'next'=[ptr,'struct _XDisplay'],
'fd'=[int],
'lock'=[int],
'proto_major_version'=[int],
'proto_minor_version'=[int],
'vendor'=[ptr,char],
'resource_base'=[long],
'resource_mask'=[long],
'resource_id'=[long],
'resource_shift'=[int],
'resource_alloc'=[ptr,func,unsigned_long],
'byte_order'=[int],
'bitmap_unit'=[int],
'bitmap_pad'=[int],
'bitmap_bit_order'=[int],
'nformats'=[int],
'pixmap_format'=[ptr,'ScreenFormat'],
'vnumber'=[int],
'release'=[int],
'head'=[ptr,'struct _XSQEvent'],
'tail'=[ptr,'struct _XSQEvent'],
'qlen'=[int],
'last_request_read'=[unsigned_long],
'request'=[unsigned_long],
'last_req'=[ptr,char],
'buffer'=[ptr,char],
'bufptr'=[ptr,char],
'bufmax'=[ptr,char],
'max_request_size'=[unsigned_int],
'db'=[ptr,'struct _XrmHashBucketRec'],
'synchandler'=[ptr,func,int],
'display_name'=[ptr,char],
'default_screen'=[int],
'nscreens'=[int],
'screens'=[ptr,'Screen'],
'motion_buffer'=[unsigned_long],
'current'=[unsigned_long],
'min_keycode'=[int],
'max_keycode'=[int],
'keysyms'=[ptr,unsigned_long],
'modifiermap'=[ptr,'XModifierKeymap'],
'keysyms_per_keycode'=[int],
'xdefaults'=[ptr,char],
'scratch_buffer'=[ptr,char],
'scratch_length'=[unsigned_long],
'ext_number'=[int],
'ext_procs'=[ptr,'_XExtension'],
'event_vec'=[array(128),ptr,func,int],
'wire_vec'=[array(128),ptr,func,int],
'lock_meaning'=[unsigned_long],
'key_bindings'=[ptr,'struct XKeytrans'],
'cursor_font'=[unsigned_long],
'atoms'=[ptr,'struct _DisplayAtoms'],
'reconfigure_wm_window.sequence_number'=[long],
'reconfigure_wm_window.old_handler'=[ptr,func,int],
'reconfigure_wm_window.succeeded'=[int],
'flags'=[unsigned_long],
'mode_switch'=[unsigned_int],
'onunlockhandler'=[ptr,func,int],
'solShMemptr'=[ptr,'solBufStruct'],
'semid'=[int]]).

als_struct('XKeyEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'keycode'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XKeyPressedEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'keycode'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XKeyReleasedEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'keycode'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XButtonEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'button'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XButtonPressedEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'button'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XButtonReleasedEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'button'=[unsigned_int],
'same_screen'=[int]]).

als_struct('XMotionEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'is_hint'=[char],
'same_screen'=[int]]).

als_struct('XPointerMovedEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'state'=[unsigned_int],
'is_hint'=[char],
'same_screen'=[int]]).

als_struct('XCrossingEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'mode'=[int],
'detail'=[int],
'same_screen'=[int],
'focus'=[int],
'state'=[unsigned_int]]).

als_struct('XEnterWindowEvent',['type'=[int],
'serial'=[unsigned_long],
'send_event'=[int],
'display'=[ptr,'Display'],
'window'=[unsigned_long],
'root'=[unsigned_long],
'subwindow'=[unsigned_long],
'time'=[unsigned_long],
'x'=[int],
'y'=[int],
'x_root'=[int],
'y_root'=[int],
'mode'=[int],
'detail'=[int],
'same_screen'=[int],
'focus'=[int],
'state'=[unsigned_int]]).

al