#!/bin/sh
# Check for proper function of command line arguments and general
# unix shell functionality.

echo "Starting Command Line Tests"

prolog=/apache/choupt/builds/hp/bld-port/alspro
#prolog=alspro

# test success/fail return value for -b -g options

echo "$prolog -q -b -g true"
$prolog -q -b -g true
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -q -b -g fail"
$prolog -q -b -g fail
case $? in
    1) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

# currently only tests error handling for -heap and -stack options

echo "$prolog -heap 2> /dev/null"
$prolog -heap 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -stack 2> /dev/null"
$prolog -stack 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -heap -stack 2> /dev/null"
$prolog -heap -stack 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -stack -heap 2> /dev/null"
$prolog -stack -heap 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -heap xxx 2> /dev/null"
$prolog -heap xxx 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -stack xxx 2> /dev/null"
$prolog -stack xxx 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -heap xxx -stack 1000 2> /dev/null"
$prolog -heap xxx -stack 1000 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -heap 10000 -stack xxx 2> /dev/null"
$prolog -heap 10000 -stack xxx 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -stack 1000 -heap xxx 2> /dev/null"
$prolog -stack 1000 -heap xxx 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

echo "$prolog -stack xxx -heap 1000 2> /dev/null"
$prolog -stack xxx -heap 1000 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac

# Check error handling of out-of-range -heap and -stack values

extreme_values='-10000000 -1000000 -100000 -10000 -1000 -100 -10 -1 0
		1 2 3 4 5 6 7 8 9 10 5000000 10000000'

echo $extreme_values
for i in $extreme_values
do
echo "$prolog -heap $i  2> /dev/null"
$prolog -heap $i 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac
done

for i in $extreme_values
do
echo "$prolog -stack $i  2> /dev/null"
$prolog -stack $i  2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac
done

for i in $extreme_values
do
for j in $extreme_values
do
echo "$prolog -heap $i -stack $j  2> /dev/null"
$prolog -heap $i -stack $j 2> /dev/null
case $? in
    2) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status."; exit 1
esac
done
done

# Check the correct fuctioning of -heap and -stack

echo "$prolog -heap 1000 -b -q -g 'statistics([_,_,heap(_,_,_,_,1024000),_])'"
$prolog -heap 1000 -b -q -g 'statistics([_,_,heap(_,_,_,_,1024000),_])'
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status"; exit 1
esac

echo "$prolog -heap 2000 -b -q -g 'statistics([_,_,heap(_,_,_,_,2048000),_])'"
$prolog -heap 2000 -b -q -g 'statistics([_,_,heap(_,_,_,_,2048000),_])'
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status"; exit 1
esac

echo "$prolog -stack 1000 -b -q -g 'statistics([_,stack(_,_,1024000),_,_])'"
$prolog -stack 1000 -b -q -g 'statistics([_,stack(_,_,1024000),_,_])'
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status"; exit 1
esac

echo "$prolog -stack 2000 -b -q -g 'statistics([_,stack(_,_,2048000),_,_])'"
$prolog -stack 2000 -b -q -g 'statistics([_,stack(_,_,2048000),_,_])'
case $? in
    0) echo "Test Successful." ;;
    1) echo "Command Line Test Error: unexpected failure." ;;
esac

echo "$prolog -heap 2000 -stack 1000 -b -q -g 'statistics([_,stack(_,_,1024000),heap(_,_,_,_,2048000),_])'"
$prolog -heap 2000 -stack 1000 -b -q -g 'statistics([_,stack(_,_,1024000),heap(_,_,_,_,2048000),_])'
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status"; exit 1
esac

echo "$prolog -heap 1000 -stack 2000 -b -q -g 'statistics([_,stack(_,_,2048000),heap(_,_,_,_,1024000),_])'"
$prolog -heap 1000 -stack 2000 -b -q -g 'statistics([_,stack(_,_,2048000),heap(_,_,_,_,1024000),_])'
case $? in
    0) echo "Test Successful." ;;
    *) echo "Command Line Test Error: unexpected exit status"; exit 1
esac

echo "Finished Command Line Tests"



