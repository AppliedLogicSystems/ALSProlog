Macintosh ALS Prolog Build Instructions
=======================================
Author: Chuck Houpt Date: 14-Oct-1997

These instructions assume that the ALS Prolog source directory exists,
and all of its generated files are up to date (for example: generated
makefiles, headers, etc).  The ALS Prolog source directory is refered to
as {srcdir} in this document.

Build Materials:
----------------

- Macintosh (68k or PowerPC) with at least 20 MB of available memory and at
least 150 MB of available disk space.

- Metrowerk's Code Warrior Gold 8 with the following options and modifications:

    - Code Warrior Grand Unified Socket Interface Library (CWGUSI) 1.7
       Freeware by Matthias Neeracher (neeri@iis.ee.ethz.ch) Available
       from http://www.iis.ee.ethz.ch/~neeri

- Unix system
    
Build Instructions:
-------------------

1. From Unix, run the mac_setup shell script to create a directory named
   macos for the build. The mac_setup script take two arguments:
       - source directory
       - C preprocessor define
       
   Example: % ../alsp_src/macos/mac_setup ../alsp_src "#define INTCONSTR"
	
2. On the Mac, decode and extract the project files in the build directory
using Stuffit Expander.  The following projects need expanding:

	alspro_lib.proj.sit.hqx
	alspro_b.proj.sit.hqx
	alspro_slib.proj.sit.hqx
	alspro.proj.sit.hqx
	Build_MacOS.sit.hqx
	
3. On the Mac, run the AppleScript Application "Build_MacOS" to build
all the projects.

The script will build "ALS Prolog Base" and ask you to locate it, and
wait until it has finished launching (builtins .obp files).

Each project may need to have its access paths adjusted.
The projects assume that the alsp_src directory is sibling of the build
directory.

Testing
-------

Currently run test programs by hand.

Files generated:
----------------

Static embedable prolog engine libraries:

    alspro.ppc.lib
    alspro.68k.lib

Dynamic embedable prolog engine libraries:

    ALS Prolog Library

Stand alone TTY applications:

    ALS Prolog 2xxx

Programming Eve3 Hardware Keys
------------------------------

Simple keys do not need to be programmed, because key are
shipped from the factory with all-zero registers.

30-Day Demo keys can be created by using the Eve3 Editor
and the "{srcdir}bin:Eve 30-Day Demo Setup" file.


Building Standard ALS Prolog Installer
--------------------------------------

Set up the files with the following organization:

ALS Prolog X.X Folder
	Read Me
	ALS Prolog X.X
	ALS Prolog Library
	alsdir
		builtins
		libraries
		shared
			<tcltk files>
			<odbc files>
			<macos interface files>
	Manual
	Examples
	Foreign Interface SDK

Position all the files and folders to present a neat and consistent appearance.

Make a copy of the installer template (from alsp_src/macos/installer_template.hqx)
Add the "ALS Prolog X.X Folder" to the installer template.

Build both a network (single file) installer and high density disk size
segmented installer. Place the segments on a series of disks named:

ALS Prolog Installer Disk 1
ALS Prolog Installer Disk 2
ALS Prolog Installer Disk 3
...etc...

Make sure that disk 1 is always open when mounted.  The open disk 1 window
should be positioned in the upper left-hand corner of the screen.  The window
size should be just large enough to display the title and the installer icon.
The installer icon should be located in the middle of the window.

The rest of the disk should be closed when mounted.

Archive the disks as Read Only disk images.

The utility "Disk Copy" can be used to create disk images without using real
disks.
