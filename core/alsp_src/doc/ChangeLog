Mon Sep 12 20:09:11 1994 Ken Bowen

	* Added a command line switch (left of -p) '-obp' which
	calls obp_in_cur/0 [blt_io.pro], causing obp files to be
	stored in the current directory. [Doesn't work for 
	builtins yet.]

Mon Sep 12 19:13:13 1994 Ken Bowen

	* builtins/sio_rt.pro: 
	Introduced an addition option for read_term/3: line_info(S,E)
	should designate the start and finish line numbers of the term
	read;  however, the modification only gets E instatiated; at
	present, there seems to be no inexpensive, pleasant way to get
	the start line. 
	* Modifications: add 5th arg to read_term/4 [define "new"
	read_term/4 in terms of read_term/5]; new arg is the
	list of unconsumed tokens in the token list after the
	fullstop token; normally only the lineinfo token;
	* Similarly add 5th arg to rt_readclause and pp_rt_readclause;
	* Add 2nd arg to rt_fullstop -- this actually retrieves
	the unconsumed tokens & passes them back.
	* Changes in body of read_term/3 to actually manage the
	option, in rt_defaults/1, and add a new clause for
	check_rt_option/6.

Fri Sep  2 12:14:31 1994  Kevin Buettner

	* cinterf/pro2intf/pro2intf (gen_gv_cfunc_header/2): Make sure
	that emitted argType and retType are properly declared.

	* wins/build/motif/Makefile.in (XDEFINES): Defined.

	* cinterf/c2pro/cparse (enum_exp_opt): Fixed typo which was causing
	definitions in table to be lost.

	* cinterf/c2pro/ctoken (pop_context/1):  Restore the context on the
	ifdef_stack too.

	* cinterf/c2pro/cmacro (endif_else_or_elif/2): Added cut to prevent
	backtracking into clause which prints error message.  We were getting
	bogus error messages printed out this way.

Thurs Sep  1  Ken Bowen

	* Merged .../wins/build/:  x/Makefile.in and motif/Makefile.in
	  into a common make file; named this file mf-cmn.in, placed
	  it it .../wins/build/ , and linked both x/Makefile.in and
	  motif/Makefile.in to it (symbolic).

Wed Aug 24 13:36:37 MST 1994 Kevin Buettner

	* generic/sig.c (setitimer): Removed declaration.  Already declared
	in missing.h.

	* generic/mem.c (STACKSTART, CODESTART): Ifdef'd to work for AIX.
	This is an interim solution.  See the code for a suggestion on how
	to do it right.

	* cinterf/pro2intf/pro2intf (gen_compact_func_interf/3): Set
	cmpctFCnt in the state structure so that output of the initialization
	functions will work properly.

Tue Aug 23 09:05:32 1994  Kevin Buettner
	
	* cinterf/pro2intf/pro2intf (switchToProFile): Write out 
	"module builtins.\n\n" to the newly opened stream.

Mon Aug 22 11:40:38 1994  Kevin Buettner

	* wins/src/motif.spc (XtCreateApplicationContext, XtGetErrorDatabase,
	XtGetSelectionTimeout, XtMainLoop, XtPending, XtToolkitInitialize):
	Declare these nullary functions with void instead of empty parameter
	list.  They were getting omitted otherwise.

	* builtins/fsunix.pro (exists_file/1): Rewritten.
	(directory/3): Don't call exists_path/3.  It should not be necessary.
	If it is, we will want to find out exactly why and DOCUMENT it!!!

	* generic/pi_cfg.h (EXP_DATE): Commented out.

	* generic/bsio.c (window_insert_pos, set_window_insert_pos): Nuked
	unused variable insertPos.

	* wins/build/{x,motif}/Makefile.img.in (CC): Nuked this make variable.
	(CLIBS): Changed to LIBS.   Also added X_EXTRA_LIBS and X_LIBS to the
	$(IMAGE)0 target.

	* pconfig.pro (LIBS): Renamed from CLIBS.
	(CC, X_CFLAGS, X_LIBS, X_EXTRA_LIBS): Handle these make variables also.

	* configure.in: Always call AC_FIND_XTRA and also look for additional
	X_CFLAGS.

	* pconfig/pconfig.pro (xtr_cfg_info/2): Get LIBS makefile var also.
	(grl_vars): Cause CLIBS to be defined in terms of LIBS.

	* wins/build/motif/Makefile.img.in, wins/build/x/Makefile.img.in
	(CLIBS): Deleted, should be provided from pconfig.pro.

	* generic/mh-generic (alstest): Write test results to alstest and
	cat the results out after the test is complete.  This will prevent
	the test from being run over and over again in the event that make
	didn't work quite right the first time around.  Also saves the
	results for later perusal.

Mon 21 Aug 94 Ken Bowen

	- consolidated the clauses for consult/2 by adding two
	new subsidiary predicates: consult_nature/3, and
	source_debug_record/1.
	- changed prepend_current_consult_directory/3 to 4 args,
	by changing the compound 3rd arg (NewDrive+NewPath) to two
	args (3 & 4): NewDrive, NewPath
	- Added the basic capability for the user to control where
	the obp files for consulted sources live.  The current approach
	writes the obp file in the same directory as the source (.pro) file.
	The modification was made simply by changing the 4th clause
	of load3/4. 
	[In the following, I'll use the Unix '/' separator, but
	the discussion applies to DOS and other systems too.] 
	This concern applies to the situation in which the user did
	not use any extension (.pro or .obp) in the consult request;
	So at this point we have a path Path/File with no .pro or .obp,
	where Path came from one of the searchdirs, etc.  The here
	is what happens:
	*  If there is a fact builtins:obpLocation(Path,DirExpr),
	   then:
		- if DirExpr is absolute, use 
			DirExpr/File.obp

		- if DirExpr is relative, use
			Cur/DirExpr/File.obp
		where Cur is the current working directory.
	*  Otherwise, proceed as at present (store with the .pro file)

	Thus, if there is a fact obpLocation(_,'.') as the only such clause,
	all obp files will be stored in the current working directory; if
	the fact obpLocation(_,'obpdir') were present, all obp files would
	be stored in the subdirectory 'obpdir' of the current directory;
	[handling the existence of the 'obpdir' subdir is not dealt with
	 here  -- see comments below];
	- Added two exported builtins for users' convenience:
	obp_with_pro/0 and obp_in_cur/0; the first abolishes all the
	obpLocation/2 clauses, effectively setting the present policy;
	the second abolishes all the obpLocation/2 clauses, and then
	asserts obpLocation(_,'.'), thus setting the 'in current dir'
	policy;  we could add others, such as one setting the
	'in obpdir subdir' policy with compound rules for obpLocation
	which checked the existence of the subdir, and created it if
	it didn't exist.

	[NOTE: This does not deal with the obp's for builtins files,
	 since they are loaded using the old C-based '$load' and
	 parser;  This has to be dealt with separately, and should be
	 done by at least starting the "shrinking" of this code down
	 to the minimal necessary core.]

Fri Aug 19 17:20:19 1994  Kevin Buettner

	* generic/cinterf.h (CI_STRUCT):  Added typecast for fourth argument
	to prevent compiler warnings.

	* cinterf/pro2intf/pro2intf (disp_gen_type_interf2): Added clause to
	handle case where array(0) was being passed in.  This was later
	causing the C compiler to bomb on XrmSearchList in x2_init() of
	x1.c.

	* cinterf/pro2intf/pro2intf: Changed the types of arguments which
	are getting output to avoid C compiler warnings.

	* wins/build/motif/Makefile.in (CFLAGS): Removed extra equal sign.

Thurs 18 Aug 94 Ken Bowen

	Consolidated exists_file/1 from fsunix.pro and exists from
	blt_io.pro: Removed exists_file/1 from fsunix.pro, and renamed
	exists/1 of blt_io.pro to exists_file/1 (kept exists/1 code)

Wed 10 August 94 Ken Bowen

	Split blt_sys.pro into blt_sys.pro and blt_shl.pro; blt_shl.pro 
	contains the code running (both the tty and gui) versions
	of the interactive shell.

Mon 8 August 94 Ken Bowen

Overall system directory structure:
	Changed system so that it looks for builtins files in the
	directory  ..../alsidr/builtins   and so that it looks for
	library files in the directory ..../alsdir/library.

Sun 7 August 94 Ken Bowen

- Library: filemisc.pro:
	Added a number of routines for copy/moving/linking files
	from one location to another.

Sat 6 August 94 Ken Bowen

- fsunix.c: Changed mkdir/1 to mkdir/2 to allow user to control 
	permissions when creating a file; added make_dir/2 to
	fsunix.pro, and modified the previous make_dir/1 to call
	make_dir/2 with a default permission.

Sat Jul 30 1994 Ken Bowen

Changes to builtins files:

- blt_ctl.pro:
	* export get_vars/3. (line 235)

- builtins.pro:
	* added functor(_,P,0) goal to definition(s) of dynamic
	  to correct bug when P is a non-symbol UIA (line 292 ff)

- cutils.pro:
	* added missing basis case (Values=[]) clause for c_create_arglist/3

- blt_msg.pro:
	* added flush_output(error_stream) goals in a variety of
	  places to force timely appearance of error messages.

- sio_rt.pro:
	* modified lines the blocking(...) cases of check_rt_option/6
	  to improve stream blocking behavior; [left old code, commented out]
	* removed module user from call on EvTerm in tp_eval_if/2;

- blt_pckg.pro:
	* changed check_default/4 to check_default0/4 [to avoid a
	  conflict]

- xconsult.pro & blt_db.pro:
	* moved several meta-level predicates from xconsult to blt_db
	  and made them visible to users: doexport/1, douse/1; added
	  create_new_module/1 in blt_db.pro [note: the standard will
	  almost certainly say that M:assert(C) should create M if it
	  does not already exist.]

- sio.pro:
	* added stream_blocking slot to the stream data structure:
	  stream_blocking/2, set_stream_blocking/2, etc
	* added default_snr/2 to provide more flexibility in get_option/4
	  [see end of initialize_stream/4]
	* added data_ready/1 and various modifications to code for
	  supporting windows (follows open_atom_stream/4)
	  to support correct window streams following Kevin's 
	  consolidation/cleanup work;
	* corrected get_byte/2 to call get_code/2 (not get_code/1);
	* added clauses to get_failure_read_snr/5 to handle blocking
	  for window streams; 
	* added get_code/3, get_code(Stream_or_alias, Code, Options),
	  primarily to allow option for blocking
	* modified/added read_buffer/2 clauses for window streams;
	* commented out read_window/1 - not used - 
	* modified 2nd clause of move_lines_to_buffer/7 - 
	* modified write_buffer/2 (clause 1) for windows case - 
	* added flush_output call to definition of nl/1.

- debugtty.pro, debugwin.pro, debugger.pro:
	* consolidated debugtty.pro, debugwin.pro into a single
	  file, debugger.pro; primarily just structural modifications
	  to make this clean; see internal comments.

- fsunix.pro:
	* added several date and time predicates:
	  valid_date/1, valid_date/3, datetime_less/2
	* added make_subdir/2
	* modified exists_file and exists_subdir to correctly deal with
	  the case in which the input item has a path prefix; added
	  exists_path_and_file/2 to support this;
	* fixed bug in set_date_pattern/1
	* modified the 4th clause of directory/3 so that it handles
	  the case in which a pattern has a path prefix.  

- blt_sys.pro:
	* added force_libload_all/2 to allow controlling the directory
	  where files are sought
	* moved loading of the debugger into the library hash table
	  (libhide) from a stand-alone goal (:-...) [commented out]
	  to part of the shell start-up predicate start_shell/1 
	* added a slot to the clinfo structure for
	  controlling which debugger to set up (tty vs windows).
	* added a comand-line switch (-d) to specify the tty debugger
	* added a clause to print_banner/1 for the windows case.
	* restructured prolog_shell/[0,2] to support both the tty
	  model and the GUI-callback/action model;  see the internal
	  comment: "The Main Loop"
	* added arg: changed  do_shell_query2/1 to do_shell_query2/2, 
	  the new (1st) argument being the module in which to invoke the Goal;
	  also exported it for use by the debugger;
	* added flush_out in showanswers/4;
	* converted the tail of the main clause of showanswers/4 into
	  a separate predicate sa_cont/3 with disp_sa_cont/4 to
	  handle blocking/non-blocking issues;

- blt_lib.pro:
	* Additions to reflect additions to various library files,
	  as well as addition of new library files, as described
	  below;

- blt_io.pro:
	* Added atomread/[2,3] analogous to bufread/[2,3]

## Library changes:

- misc_io.pro:
	add: gen_file_header/3,gen_file_header/4

- listutl3.pro:
	add: output_prolog_list/4, mangle_change_tagged/3,
		subst_tagged/4, merge_in_list/3
- misc_db.pro:
	add: abolish_list/1, abolish_list/2

- objs_run.pro: 
	add: send_each/2, queue_oop_event/1, insert_oop_event_request/2,
	 inherit/3, send_self/2, 

## New library files:

- cmdline.pro: get_cmdline_vals/1,cmdline_vals/2

- sock_misc.pro: bread/1,bread/2, bread/3, bread_term/3, bread_term/4

- strctutl.pro: locate_struct/3, delete_struct/3, delete_struct/4


Change in fsunix.c: 
	Line 133: Was:

     || !getstring((UCHAR **)&pattern, v1, t1))

	Changed to:

     || !getstring((UCHAR **)&pattern, v2, t2))


Tue Jul 12 11:59:12 1994  Kevin Buettner

	* alloc.h, alloc.c: Changed most ints to longs for DEC Alpha.

	* defs.h (load_foreign): Declare this prototype whether DynamicForeign
	is defined or not.

Mon Jul 11 09:44:25 1994  Kevin Buettner

	* m88k/disassem.c (print_rest): Added coercions to prevent warnings
	from printf statements.

	* Generic/mem.c (allocate_prolog_heap_and_stack): Use long instead
	of int to perform coercion when checking to see if fatal_error should
	be called or not.
	(ss_restore_state): Use long instead of int when checking for error
	from malloc().

Wed Jul  6 17:11:44 1994  Kevin Buettner

	* build-native/Makefile.in: Search .. when running assembly language
	translator.

	* m68k/domath.68k (config.h): Include this file.

	* configure.in: Added support for M68881 fpu.

Tue Jul  5 16:05:27 1994  Kevin Buettner

	* utilities/coff-mics.c (main): Deal with the n_numaux field when
	reading symbol table entries.  We were formerly ignoring this field
	which had the effect of also ignoring auxiliary symbol table entries.
	These auxiliary symbol table entries _must_ not be treated in the
	same manner as the ordinary entries.
	(main): Look for symbols both with and without leading underscore.

Thu Jun 30 10:19:29 1994  Kevin Buettner

	* sparc/cmp.c (cpm_gettokstring, cmp_int_double, cmp_double_double): 
	Prototypes.

	* Generic/mh-generic (OTHERFILES): exp_date.c removed from this list.

	* Generic/{display.c, exp_date.c, mvarargs.h}: Deleted.

	* Cinterf/{M68k, M88k, SPARC}: Deleted these directories and their
	contents.

Wed Jun 29 10:37:49 1994  Kevin Buettner

	* m68k/cmp.c (cmp_gettokstring): Return type changed from uchar *
	to UCHAR *.
	(cmp_gettokstring, cmp_int_double, cmp_double_double): Prototypes.

	* m68k/{macos, nextstep, sunos4, sysv}: New directories.  Populated
	with the appropriate makefile fragments, fixasm script, and
	assembly language translator files (atr_out.pro).

	* m68k/disassem.c (wm_g_uia, wm_p_uia, wm_unify, wm_docut, wm_overflow,
	wm_resolve_ref, wm_execute_builtin, wm_try_me, wm_retry_me,
	wm_trust_me, wm_fail): Prototypes.
	(EAstr): Nuked non-prototyped declaration.

	* m68k/machinst.h, icode1.c, icode2.c (FAIL): Name changed to DoFail
	due to name conflict in built.h.

	* m68k/icmath.c: Include icodedef.h with ICODE() defined in a
	manner appropriate for declaring the functions defined in this file.

	* m68k/icmath.c (ic_mth_init1, ic_mth_init2, ic_mth_fin, ic_mth_eq,
	ic_mth_lt, ic_mth_gt, ic_mth_le, ic_mth_ge, ic_mth_ne,
	ic_mth_getval, ic_mth_getnum, ic_mth_putnum, ic_mth_pushdbl,
	ic_mth_pushint, ic_mth_add, ic_mth_addi, ic_mth_sub, ic_mth_subi,
	ic_mth_mul, ic_mth_div, ic_mth_fdiv, ic_mth_mod, ic_mth_neg,
	ic_mth_band, ic_mth_bor, ic_mth_bxor, ic_mth_not, ic_mth_lshft,
	ic_mth_rshft, ic_mth_power, ic_mth_abs, ic_mth_sin, ic_mth_cos,
	ic_mth_tan,ic_mth_tan, ic_mth_asin, ic_mth_acos, ic_mth_atan,
	ic_mth_sqrt, ic_mth_exp, ic_mth_exp10, ic_mth_log, ic_mth_log10,
	ic_mth_floor, ic_mth_round, ic_mth_trunc, ic_mth_heapused,
	ic_mth_cputime, ic_mth_realtime, ic_mth_random, ic_mth_callout_init,
	ic_mth_callout, ic_mth_sinh, ic_mth_cosh, ic_mth_tanh, ic_mth_ceil,
	ic_mth_erf, ic_mth_erfc, ic_mth_gamma, ic_mth_j0, ic_mth_j1,
	ic_mth_y0, ic_mth_y1, ic_mth_atan2, ic_mth_fmod, ic_mth_hypot,
	ic_mth_jn, ic_mth_yn): Fixed incorrectly declared (non-prototype
	matching) parameters in these.

	* m68k/machinst.h (wm_unify, wm_docut, wm_g_uia, wm_p_uia, wm_g_sym,
	wm_g_dbl, wm_u_lval, wm_p_unsafe, wm_u_sym, wm_u_int, wm_g_int,
	cmp_sym_uia, wm_overflow): Declare these using prototypes.

	* m68k/icode1.c (wm_g_uia, wm_p_uia, wm_g_int, wm_g_sym, cmp_sym_uia,
	wm_u_lval, wm_p_unsafe): Removed these extern declarations.

	* m68k/icode1.c (ic_illegal, ic_drf1fix): Removed this dead code.

	* m68k/icode1.c (ic_backpatch, ic_deref1, ic_begin_macro,
	ic_end_macro): Declared these using prototypes.
	(icode): Fixed usages of ic_begin_macro and ic_end_macro to correspond
	to declaration.

	* m68k/machinst.h (wintcode.h, icodegen.h): Include these files.

	* m68k/icode2.c (wm_try_me, wm_retry_me, dbg_spycheck, dbg_decr_icount,
	wm_nciadc, wm_try, wm_retry, wm_trust, wm_execute_builtin,
	wm_resolve_ref): Declared these using prototypes.
	(ic_install_jmp, ic_install_switch_on_term, ic_install_builtin, 
	ic_install_call, ic_install_try_me, ic_install_trust_me): Corrected
	the number and types of parameters to these functions.
	(ic_install_gc): Deleted this dead code.

	* m68k/assembly.68k (mconfig.h): Removed this include.

	* m68k/int.c (int_get_goal_tokid, int_get_module): Declared using
	prototypes.

	* m68k/uia.c (cmp_sym_uia, cmp_uia_uia, cmp_obj_str): Declared using
	prototypes.
	
	* Generic/wintcode.c (makerunable): Test for NeXT instead of
	NeXTOS.  Note that NeXT should be predefined by the C compiler.
	We probably ought to be doing something else here.

	* Generic/missing.h (times): Corrected prototyped declaration.
	(malloc, free, getenv, access, unlink, close, pipe, fork, setpgrp,
	dup2, execl, lseek, write, read, stat, rmdir, mkdir, getcwd, realloc,
	getpid, atoi): Added prototyped declarations.
	(setpgrp): Account for differences between bsd and sysv.

	* Generic/defs.h (sys/times.h, sys/stat.h): Include these files.

	* Generic/arith.c (sys/times.h): Removed include.

	* configure.in (getenv, setpgrp, dup2, lseek, stat, rmdir, getcwd):
	Added to the list of functions to check for missing prototypes.
	(AC_MODE_T, AC_OFF_T, AC_PID_T): Call these macros to make sure
	that the corresponding types are defined in sys/types.h.

	* Generic/{bsio.c, fsunix.c, loadfile.c} (sys/types.h, sys/stat.h):
	Removed includes of these files.  They are already included from
	defs.h.

	* sig.c (sys/wait.h): Test to make sure this file exists before
	including it.
	(burychild): Make sure that WNOHANG is defined before using either
	waitpid() or wait3().

Tue Jun 28 17:57:35 1994  Kevin Buettner
	
	* m68k: New directory copied from M68k.

Tue Jun 28 11:14:47 1994  Kevin Buettner

	* Generic/wintcode.c (wm_g_uia, wm_p_uia, mth_pushdbl0): Prototypes
	for sparc's copy_code procedure.

	* sparc/disassem.c (wm_unify, wm_docut, wm_g_uia, wm_p_uia,
	wm_overflow0, wm_overflow1, wm_overflow2, wm_overflow3, wm_resolve_ref,
	wm_try0, wm_try1, wm_try2, wm_try3, wm_retry_u0, wm_retry_u1,
	wm_retry_u2, wm_retry_u3, wm_retry0, wm_retry1, wm_retry2, wm_retry3,
	wm_trust_u0, wm_trust_u1, wm_trust_u2, wm_trust_u3, wm_trust0,
	wm_trust1, wm_trust2, wm_trust3, wm_exec_builtin0, wm_exec_builtin1,
	wm_exec_builtin2, wm_exec_builtin3, wm_g_sym, wm_u_sym, mth_pushdbl0,
	wm_p_unsafe, wm_u_lval, wm_u_int): Added prototypes.

	* sparc/icmath.c (mth_base, dcmp_base, mth_aftercall, mth_eq,
	mth_lt, mth_gt, mth_le, mth_ge, mth_ne, mth_putnum, mth_getnum,
	mth_getnum0, mth_push, mth_pushdbl0, mth_pushint, mth_pushint0,
	mth_add, mth_addi, mth_sub, mth_subi, mth_mul, mth_div, mth_fdiv,
	mth_mod, mth_neg, mth_band, mth_bor, mth_bxor, mth_not, mth_lshft,
	mth_rshft, mth_power, mth_abs, mth_sin, mth_cos, mth_tan, mth_asin,
	mth_acos, mth_atan, mth_sqrt, mth_exp, mth_exp10, mth_log,
	mth_log10, mth_floor, mth_round, mth_trunc, mth_heapused,
	mth_cputime, mth_realtime, mth_random, mth_callout_init,
	mth_callout, mth_atan2, mth_fmod, mth_hypot, mth_jn, mth_yn,
	mth_ceil, mth_cosh, mth_erf, mth_erfc, mth_gamma, mth_j0, mth_j1,
	mth_sinh, mth_tanh, mth_y0, mth_y1): Added prototypes.
	
	* sparc/icmath.c: Include icodedef.h with ICODE() defined in a
	manner appropriate for declaring the functions defined in this file.

	* sparc/machinst.h (wm_unify, wm_docut, wm_g_uia, wm_p_uia, wm_g_sym,
	wm_g_dbl, wm_u_lval, wm_p_unsafe, wm_u_sym, wm_u_int, wm_g_int):
	Declare these using prototypes.

	* sparc/icode1.c (wm_g_uia, wm_p_uia, wm_g_sym, wm_g_int, wm_unify,
	wm_u_sym, wm_u_int, wm_u_lval, wm_p_unsafe, wm_docut): Removed these
	extern declarations.

	* sparc/icode2.c (wm_overflow0, wm_overflow1, wm_overflow2,
	wm_overflow3, dbg_spycheck, dbg_decr_icount, wm_try0, wm_try1,
	wm_try2, wm_try3, wm_exec_builtin0, wm_exec_builtin1,
	wm_exec_builtin2, wm_exec_builtin3, wm_nciadc, wm_retry_u0,
	wm_retry_u1, wm_retry_u2, wm_retry_u3, wm_retry0, wm_retry1,
	wm_retry2, wm_retry3, wm_trust_u0, wm_trust_u1, wm_trust_u2,
	wm_trust_u3, wm_trust0, wm_trust1, wm_trust2, wm_trust3,
	ic_install_emask, get_target_instruction): Declared these using
	prototypes.

	* sparc/int.c (int_get_goal_tokid, int_get_module): Declared these
	functions using prototypes.

Tue Jun 28 09:58:46 1994  Kevin Buettner

	* configure.in (MACH_OS): Deleted.
	(OS): Nuke "dot" and anything after it...this gets rid of the minor
	operating system release numbers.  Thus "solaris2.2" becomes
	"solaris2".

	* sparc: New directory mostly copied from old SPARC directory.

	* sparc/solaris2, sparc/sunos4: New directories.

	* sparc/solaris2/atr_out.pro: Copied from SPARC/Solaris/atr_out.pro.
	
	* sparc/sunos4/atr_out.pro: Copied from SPARC/Sun/atr_out.pro.

	* sparc/solaris2/fixasm: Copied from SPARC/Solaris/fixasm.

	* sparc/solaris2/mh-solaris2: New file.

	* sparc/sunos4/mh-sunos4: New file.

	* M88k: This directory deleted.  m88k now takes its place.

Wed Jun 22 12:58:04 1994  Kevin Buettner

	* build-native/Makefile.in: New stuff for handling als-mics.
	
	* utilties/{unknown-mics.c, which-exe.c}: New files.

	* Port/wam.c (run_wam):  Changed code so that top choice points are
	cut away before returning.  Also removed the untrail flag argument.

Tue Jun 21 10:57:46 1994  Kevin A. Buettner

	* m88k/icode2.c (ic_install_normal_exec_entry, ic_install_spy,
	ic_install_decr_icount):  Use preprocessor test HAVE_MMAP instead of
	SysVR4.

	* m88k/sysv4/mh-sysv4, m88k/sysv3/mh-sysv3, m88k/Makefile.in: Added
	alsmics support.

Mon Jun 20 16:10:17 1994  Kevin A. Buettner

	* Generic/mem.c (STACKSTART, CODESTART): Changed these value back
	to what they used to be for the m88k.

	* m88k/overflow.88k (wm_overflow0): Commented out code which checks
	for stack overflow... I think that this is handled elsewhere. 

	* Generate/atrans/aparse.pro:  Rewritten to handle one file at a
	time.  Will now also take a -o option for output files and -I for
	to add a file to the include search path list.

	* Generate/atrans/aparse.pro (incdir/1, find_include_file/2): New
	procedures.
	(include/4): Modified to call find_include_files/2.

Tue Jun 14 11:16:40 1994  Kevin A. Buettner

	* Builtins/blt_sys.pro (ss_parse_command_line): Don't accumulate
	files in reverse order.

	* build-native/Makefile.in (atrans): Changed this target so that
	it will use Generate/atrans instead of atrans.

	* atrans: Removed this directory and the files in it.  This was a
	duplicate of Generate/atrans.  (The latter was actually more up to
	date also).

	* m88k/int.c (int_get_goal_tokid, int_get_module): Added prototyped
	declarations.

	* m88k/icode2.c (wm_overflow0, wm_overflow1, wm_overflow2,
	wm_overflow3, dbg_spycheck, dbg_decr_icount, wm_resolve_ref0,
	wm_resolve_ref1, wm_resolve_ref2, wm_resolve_ref3, wm_try0, wm_try1,
	wm_try2, wm_try3, wm_exec_builtin0, wm_exec_builtin1,
	wm_exec_builtin2, wm_exec_builtin3, wm_nciadc, wm_retry_u0,
	wm_retry_u1, wm_retry_u2, wm_retry_u3, wm_retry0, wm_retry1,
	wm_retry2, wm_retry3, wm_trust_u0, wm_trust_u1, wm_trust_u2,
	wm_trust_u3, wm_trust0, wm_trust1, wm_trust2, wm_trust3): Added
	prototypes for these extern decls.
	(ic_install_libbreak): Added typecast to first arg in call to
	move_const().

	* m88k/icode1.c (ic_deref): Declared static and with prototype.

	* m88k/machinst.h (wm_unify, wm_docut, wm_g_uia, wm_p_uia, wm_g_sym,
	wm_g_dbl, wm_u_lval, wm_p_unsafe, wm_u_sym, wm_u_int): Declare these
	using prototypes.

	* m88k/icmath.c (mth_base, dcmp_base, mth_aftercall, mth_eq, mth_lt,
	mth_gt, mth_le, mth_ge, mth_ne, mth_putnum, mth_getnum, mth_getnum0,
	mth_push, mth_pushdbl0, mth_pushint, mth_pushint0, mth_add,
	mth_addi, mth_sub, mth_subi, mth_mul, mth_div, mth_fdiv, mth_mod,
	mth_neg, mth_band, mth_bor, mth_bxor, mth_not, mth_lshft, mth_rshft,
	mth_power, mth_abs, mth_sin, mth_cos, mth_tan, mth_asin, mth_acos,
	mth_atan, mth_sqrt, mth_exp, mth_exp10, mth_log, mth_log10,
	mth_floor, mth_round, mth_trunc, mth_heapused, mth_cputime,
	mth_realtime, mth_random, mth_callout_init, mth_callout, mth_sinh,
	mth_cosh, mth_tanh, mth_ceil, mth_erf, mth_erfc, mth_gamma, mth_j0,
	mth_j1, mth_y0, mth_y1, mth_atan2, mth_fmod, mth_hypot, mth_jn,
	mth_yn):  Added prototypes for these externs.
	(icodedef.h):  Include this file with "ICODE" defined properly in
	order to declare the functions defined in this file with prototypes.
	(move_const): Cast the first argument to unsigned in calls to this
	function.

	* m88k/disassem.c (wm_unify, wm_docut, wm_g_uia, wm_p_uia,
	wm_overflow0, wm_overflow1, wm_overflow2, wm_overflow3,
	wm_resolve_ref0, wm_resolve_ref1, wm_resolve_ref2, wm_resolve_ref3,
	wm_try0, wm_try1, wm_try2, wm_try3, wm_retry_u0, wm_retry_u1,
	wm_retry_u2, wm_retry_u3, wm_retry0, wm_retry1, wm_retry2, wm_retry3,
	wm_trust_u0, wm_trust_u1, wm_trust_u2, wm_trust_u3, wm_trust0,
	wm_trust1, wm_trust2, wm_trust3, wm_exec_builtin0, wm_exec_builtin1,
	wm_exec_builtin2, wm_exec_builtin3, wm_g_sym, wm_u_sym, wm_p_unsafe,
	wm_u_lval, wm_u_int): Added prototypes for these extern decls.
	(struct nstruct): Added prototype to function declaration inside
	of structure declaration.

	* m88k/config.h.templ: Deleted.

	* index.c (wm_sw_const, wm_sw_struct): Added prototypes for extern
	declarations.

	* wintcode.c (makerunable, makewritable): Added size_t cast in calls
	to mprotect().
	(wm_g_uia, wm_p_uia, mth_pushdbl0): Added prototypes for extern decls.

	* expand.c (cvt_walk_dbl): Fixed first parameter so that it matches
	the prototype.

	* mh-generic (icode.h): Added this target.

	* Generic/icode.h:  Removed this file.  This file should be generated
	as needed.

Mon Jun 13 14:12:42 1994  Kevin A. Buettner

	* winter.h (wm_resolve_ref, wm_unify, wm_overflow,
	wm_execute_builtin, wm_docut): Deleted from here since it is not
	referred to by Generic code anywhere (except in the old packaging
	stuff which I'll nuke someday soon anyway.)
	(wm_fail, wm_trust_fail): Added prototypes.

	* m88k/aconfig.h (MOTIFWINS): Removed.  This did not below here.

	* built.c ( padd, psub, pmul, pdiv, pmac, eiexp, psin, pcos, ptan,
	psinh, pcosh, ptanh, pasin, pacos, patan, plog10, plog, pexp, psqrt,
	pfloor, pceil, pfabs, pgamma, ppow, pfmod, patan2, phypot, perf,
	perfc, pc_add, pc_sub, pc_mul, pcj_mul, pc_mac, pc_mag2, pc_mag,
	pc_conj, pc_rec, pc_div, prc_mul, prc_mac, make_vector, vrr_add,
	vrr_sub, vrr_mul, vrr_div, vrr_dot, varg, varg_first, varg_last,
	vlength, vr_sum, vrs_scale, vr_mag2, vr_neg, vrsr_mul, vr_select,
	vcc_add, vcc_sub, vcc_mul, vcc_div, vcc_dot, vrc_mul, vcjc_dot,
	vc_conj, vc_neg, vc_sum, vcsc_mul, vcsr_mul, vc_cmag2, vrc_mul,
	vc_select, lrr_dot, lrr_mul, lcc_dot, lcc_add, lcc_sub, lcc_mul,
	lsplit2, wm_sio_pbyte, wm_sio_gbyte): Added prototypes.


Tue Jun  7 11:02:51 1994  Kevin A. Buettner

	* configure.in (mprotect): Check to see if extern declaration is
	missing.  Also check existence.

	* defs.h (HAVE_SIGACTION): Don't undef this if HAVE_SIGVEC is
	defined -- only if sigaction interface is immature.

	* mem.c, wintcode.c (mprotect): Don't declare this as extern unless
	missing.

Mon Jun  6 16:26:24 1994  Kevin A. Buettner

	* configure.in (netdb.h, sys/socket.h): Check for these include files.

	* defs.h (MACH_SUBSTRATE, HAVE_MMAP):  Define MACH_SUBSTRATE if the
	right conditions are met and undefine HAVE_MMAP.

	* mem.c (MACH_SUBSTRATE): Moved the code which sets this to defs.h.

Fri Jun  3 16:57:39 1994  Kevin A. Buettner

	* mem.c (STACKSTART, CODESTART): Define these differently for non-m88k
	systems.  AIX complained about the addresses which I was using.

	* alloc.c (stdio.h): Removed include.
	(math.h): Moved this include after include of defs.h.

	* fatal.c (stdio.h): Removed include.

	* module.c (stdio.h): Removed include.

	* parser.c (setjmp.h): Moved include after include of defs.h.

	* Port/disassem.c (stdio.h): Removed include.

	* winter.c (w_rungoal): Renamed stat variable to status to avoid
	shadowing the system call of the same name.

	* expand.c (stdio.h): Removed include.

Thu Jun  2 15:43:54 1994  Kevin A. Buettner

	* aclocal.m4, configure.in (HAVE_LDFCN_H, <ldfcn.h>): Check for this
	header file.  Extend missing check to use this header file.

	* cinterf.c (index): Changed the name of this local variable to
	idx in order to avoid shadowing index().

	* lforeign.c, configure.in (ldopen): Check if this is missing and
	declare it if so.
	(TraverseSectionsImage): Added size_t cast in call to ss_fmalloc().

	* lforeign.c (fatal, CreateImage, DestroyImage, DestroyImages,
	TraverseSections, FindSymbolValue, GetSectionStart,
	xtext_and_xdata_strings, GenerateCoffFile, CreateSymbolTable,
	CreateEnvironment, Load):  Declare these using prototypes.

	* bdb.c, bdbg.c, bio.c, foreign.c (stat): Changed name of local
	variable in certain functions to avoid shadowing stat() function.

	* bsio.c, configure.in (socket, bind, connect, listen, gethostname,
	getsockname, select, accept, rexec, sendto, recvfrom, shutdown):
	Make sure that these have extern declarations.

	* bsio.c: (HAVE_SYS_SELECT_H): Check for this feature and include
	<sys/select.h> if defined.

	* built.h, parser.h, types.h, winter.h, bcinter.c, bio.c, bmisc.c,
	bos.c, bparser.c, bsio.c, butil.c, fsdos.c, fsmac.c, fsunix.c, 
	parser.c, symtab.c, winter.c, M68k/cmp.c, Port/wam.c: Changed uchar
	to UCHAR.  This apparently conflicts with uchar on AIX which is
	located in /usr/include/sys/types.h.

	* lexan.c (next_token): Changed name of local variable which was giving
	shadow warnings.

	* configure.in (sigstack): See if this function is missing an extern
	declaration.

	* module.c (resolve_reference): Added cast in call to copy_code().

	* Port/icode1.c, Port/disassem.c: Fixed "aggregate has a partly
	bracketed initializer" warning.

Wed Jun  1 14:56:17 1994  Kevin A. Buettner

	* configure.in (sigaltstack): See if this function is available

	* defs.h (HAVE_SIGACTION): Undefine this under certain circumstances


Wed Jun  1 10:22:24 1994  Kevin A. Buettner

	* pimain.c (defs.h):  Include this file instead of config.h.

	* missing.h (fread, fwrite): Modified prototypes slightly to avoid
	warnings.
	(re_exec): Changed return type to be int.
	(setitimer): Added extern declaration.
	(brk): Return type was wrong.

	* loadfile.c (obp_close, f_load): Added casts to certain calls to
	fread and fwrite to avoid warnings.

	* configure.in (setitimer): Check for missing extern declaration.
	(getpagesize): Ditto.
	(AC_MMAP): Don't use this since it wasn't getting SunOS right.
	(mmap): Check for existence in the normal way.  (I will probably
	end up having to write my own macro which tests for mmap.)
	

	* main.c (autoload): Changed name of stat variable to status in order
	to avoid shadowing stat function.

Tue May 31 13:34:15 1994  Kevin A. Buettner

	* missing.h (sbrk, brk): Fixed missing extern decls.
	(_filbuf, _flsbuf, bzero, fclose, fflush, fprintf, fputc, fread,
	fseek, fwrite, gethostname, getwd, perror, printf, readlink, regcmp,
	regex, re_comp, re_exec, rewind, sbrk, select, setvbuf, symlink,
	system, time, times, vfprintf, vsprintf):  Added declarations.

	* configure.in (ioctl, setbuf, setbuffer): Removed checks for missing
	functions.
	(sys/times.h): Check for presence of this header file.
	(_filbuf, rewind, vfprintf): Added check to see if these are missing.

	* defs.h (sys/time.h, stdio.h): Include these files prior to including
	missing.h.
	(string.h, memory.h, strings.h): Rewrote code including these files
	to follow GNU recommendations.

	* bdb.c (pbi_listasm_ntblentry): Added cast so that proper type of
	argument gets passed to list_asm.

Fri May 27 16:01:08 1994  Kevin A. Buettner

	* defs.h (sys/types.h, unistd.h signal.h missing.h): Move includes
	of these files to before includes of generic prolog header files.
	Reason: size_t needs to be defined by (usually) sys/types.h.

	* Generic/Generate/lexinit.c (defs.h): Include this file so things
	like PARAMS get defined.

	* configure.in (sys/param.h, machine/param.h): Check for these header
	files.

	* arith.c (sys/param.h, machine/param.h): Include these files as
	so determined by the configuration script.

	* configure.in (times): See if this function is missing.

	* defs.h (HAVE_LIBC_H): Fixed typo which was preventing libc.h from
	being included.

	* bsio.c (MAXHOSTNAMELEN): Define this if it isn't pulled in through
	the system include files.

	* fsunix.c (stat_with_timeout stuff): Changed the ifdef somewhat
	so that more than just itimers are needed to compile in the stat
	with the timeout.

	* bparser.c (pbi_atom_concat): Added another size_t cast.

	* configure.in (AC_MMAP): Call this macro as it ascertains whether
	or not mmap works correctly.  The NeXT was saying that it had mmap.
	Perhaps it now does, but I can not find any documentation on it.

	* winter.h, mem.c (allocate_prolog_heap_and_stack): Changed type of
	size parameter to size_t.

	* configure.in (symlink): See if this is missing.
	(strcspn, strdup, strspn, strtok): See if these exist.
	
	* defs.h (DynamicForeign): Define this based upon certain parameters
	that the configuration script might have defined.

	* main.c, defs.h (strcspn, strdup, strspn, strtok): Put ifndefs around
	each of these individually.

	* lforeign.c (HAVE_LIBLD): Test for this instead of SysVR3.

	* configure.in (-lPW): Check for this library.

Fri May 27 14:10:49 1994  Kevin A. Buettner

	* missing.h:  Removed all #includes from this file.

	* mh-generic: Added hand generated dependencies.

	* symtab.c (find_token): Fixed small (core dump causing) problem
	created by the use of size_t.  Comparison of signed with unsigned
	quantities results in an unsigned comparison which is not always
	what you want.

	* alsglue.c (alspi.h): Deleted this include as it is included from
	defs.h.

	* defs.h (built.h): Include built.h from defs.h.

	* arith.c, bcinter.c, bdb.c, bdbg.c, bgv.c, bio.c, bmeta.c, bmisc.c, 
	bos.c, bparser.c, bpckg.c, bsio.c, bsystem.c, built.c, butil.c,
	expand.c, foreign.c, fsunix.c, main.c, module.c, sig.c, wdisp.c,
	wintcode.c (built.h): Removed this include.

	* cinterf.c, fatal.c, foreign.c, fsunix.c (alspi.h): Nuked include
	since it is already obtained via defs.h.

Thu May 26 10:50:02 1994  Kevin A. Buettner

	* sig.h, mem.c, sig.c (HAVE_UCONTEXT_H): Check this feature instead
	  of for SVR4 for inclusion of the corresponding include file,
	  ucontext.h.  Also rearranged ifdefs to not check for other OS's
	  either.

	* configure.in (ucontext.h, sigvec, sigaction): Check for the
	existence of these.

	* missing.h (brk, sbrk): Declare these if missing.
	(sigvec): Make sure HAVE_SIGVEC is defined prior to declaring it.
	Also removed include of signal.h.

	* configure.in (brk, sbrk): Check to see if the extern declarations
	are missing for these.

	* defs.h (missing.h): Added a new section at the end of the file which
	includes missing.h so that it need not be included separately in
	a number of different files.  Also include files which missing.h will
	need for its types.

	* main.c, lforeign.c fsunix.c bsio.c: Removed include of missing.h.

	* mem.c (brk, sbrk): Removed declarations of these since they are
	now in missing.h.

	* configure.in (getpagesize, vm_allocate, vm_protect): Check for the
	existence of these functions.

	* mem.c (mprotect): Added cast for second argument.
	(alloc_big_block_size): Declare prototype.  Changed type of size
	parameter to size_t.  Propogated type changes or casts throughout
	mem.c.

	* defs.h, mem.c (ss_fmalloc, ss_malloc, ss_pmalloc): Changed type of
	size parameter from long to size_t.

	* module.c (w_nameprobe, adduse, resolve_ref): Removed non-prototype
	declarations.

	* mh-generic (paction.c): Removed from glibfiles_c list.

	* parser.h (bld_strl): Removed non-prototype declaration.
	(read_loop): Prototype for rdfunc parameter.

	* pckgload.c (pckg.h): Moved this include so that it will be
	included whether PACKAGE is defined or not.

	* sig.c (built.h): Include this file in order to get prototypes for
	pbi_alarm, etal.
	(deathwatch):  Removed non-prototype declaration.
	(burychild): Declare with prototype.  Add parameter so it may be
	be used as parameter to signal.

	* symtab.c (new_string_space): Changed type of request parameter to
	size_t.
	(lookup): Type of len parameter changed size_t *.
	(find_token): Type of len parameter changed to size_t.

	* varproc.c (vwalk_tbl): Added missing prototype.

	* vprintf.c (mvarargs.h): Nuked.
	(HAVE_STDARG_H, stdarg.h): Added code to test fore HAVE_STDARG_H and
	if defined, include stdarg.h.
	(PI_oprintf): Parameter decls redone and ifdef'd for ANSI C.

	* wdisp.c (wr_tbl): Added missing prototype.
	(wr_op): Removed non-prototype declaration.
	(wr_trm): Removed outer declaration of local variable i which was
	being shadowed by an inner declaration.  Also added another inner
	declaration for the other use of i.

	* wintcode.c (code_alloc): Changed type of size parameter from long
	to size_t.  Added cast in call to code_alloc.  I'm to lazy right
	now to propogate the size_t changes all the way back as far as
	they should go.
	(w_assert_builtin, w_assert_foreign): Added missing prototype for
	"builtin" argument.
	(w_assert_built2): Added missing prototype for "installer" argument.
	(ic_install_no):  Removed non-prototype declaration.
	(cbsffa): Changed cast (from unsigned to signed) in initialization of
	ret to clear up a conversion warning.

	* winter.c (deref):  Added prototyped declaration.

	* Port/disassem.c (decode_instr): Added prototype declaration.  Converted
	prototyped _definition_ to traditional C so that it may be compiled
	with traditional compilers.

	* Port/icode1.c (ic_backpatch, addtosp): Added prototype decls.
	(ic_allocate1): Changed call to addtosp so that the
	correct number of parameters is passed.

	* Port/icode2.c (wm_nciadc): Removed non-prototype declaration.
	(icIndexPatch): Removed this code via "#if 0" and added FIXME
	comment stating that it should be deleted for real if it's no
	longer being used.
	(ic_install_tree_overhead):  Changed typecast in call to ic_put_align.

	* Port/wam.c (run_wam): Added prototype to cast in implementation
	of W_FOREIGN_JUMP.

	* main.c (whereami): Removed ifdef which checked for BSDUNIX and
	replaced it with check for HAVE_GETWD.

	* wntbl.h (NTBL_EXECENTRYSIZE): Took out check of SysVR4 (in arch_m88k
	section) and check instead for HAVE_MMAP since this is what the
	differing sizes will depend upon.

	* configure.in (dlopen): Check for existence of this function.

Tue May 24 17:42:11 1994  Kevin A. Buettner

	* loadfile.c (obp_close): Deleted non-prototyped declaration of
	sym_order().
	(f_load): Changed cast in call to fread.
	(load_file): Changed name of local var stat to status to avoid
	shadowing.
	(load_file): Changed name of local var errcount to errorcount to
	avoid shadowing.

	* configure.in (readlink): Added to list of functions to check missing
	extern declarations for.

	* mapsym.c (alloc): Changed type of first parameter to size_t.

	* configure.in (MinorOSStr): Cause this symbol to be defined.

	* missing.h: Upcased the names after the MISSING_EXTERN_

	* defs.h (heap_overflow): Prototype.

	* main.c (isopt): Changed type of len from int to size_t.

	* winter.h, mem.c (allocate_prolog_heap_and_stack):  Changed type
	of size parameter from long to unsigned long.

	* alloc.h, alloc.c (prs_area_init): Changed type of parameter from
	long to unsigned long.

	* main.c (copyright): Prototype.

	* main.c (unistd.h): Include when HAVE_UNISTD_H is defined.

Mon May 23 10:04:12 1994  Kevin A. Buettner

	* cinterf.c (c_call): Prototypes for references to function pointers.

	* expand.c (expand_pred, expand_fact, expand_rule, expand_query,
	expand_expand, cvt_walk_term, cvt_walk_list, cvt_walk_sym,
	cvt_walk_int, cvt_walk_var, cvt_walk_uia, cvt_walk_dbl, cvt_walk_tbl):
	Prototypes; declared static.
	(cvt_walk_ill): Removed;  this was defined, but not referenced.
	(expand_expand): Removed non-prototype declaration of bld_vlst.

	* foreign.c (fixTag, tagFix): Prototypes; declared static.
	(PI_getsymname): Removed non-prototype reference to strcpy.
	(PI_allocuia): Added cast to third arg of call to w_uia_alloc().

	* pimain.c (PI_app_printf): Made yet another stab at accomodating
	both ansi varargs and traditional varargs.

	* fileio.c (fio_nxln):  Removed unprototyped declaration of fputs().
	(GEN_TABS): Declare the function being defined with a prototype.

	* fsdos.c fsmac.c fsunix.c (findSymbol): Call getstring instead.

	* futility.h futility.c:  Deleted these files.

	* mh-generic (futility.h, futiltity.c): Removed.

	* fsunix.c (re_comp, re_exec, regex, regcmp): Changed the way
	these are ifdef'd.  We now test for HAVE_REGCMP instead of for
	specific operating systems.

	* configure.in (regcmp, regex, re_comp, re_exec): See if these
	are missing an extern declaration.  Also check for presense of
	regcmp.  Also check for presence of re_comp and regcmp in system
	libraries.

	* fsmac.c, fsunix.c (futility.h): Removed.

	* fsunix.c (getDirEntries, getFileStatus, read_link, make_symlink,
	pcdmp_fs, prmdir, pgetcwd, pchdir, canonical_pathname,
	canonicalize_pathname, pgetpid): Declared / defined static. Declared
	with prototypes.
	(built.h): Included.
	(memmove, memcpy, realloc): Added (size_t) casts to clean
	up warnings in calls to these functions.

	* defs.h, fsunix.c: Modified/removed all ifdefs referring to specific
	variants of unix (such as SysVR4, SysV, NeXT, etc).

	* fsunix.c (canonical_pathname): There were two occurences of a variable
	named "len" which shadowed an outer occurence.  The names of these
	were changed to avoid shadowing.  These declarations could have been
	removed entirely, but I thought that the code was clearer with them
	in place.

	* gc.c (mark_args, mark_from, rev, rev_update, init_marks, mark):
	Prototypes.
	(mark, rev, rev_update): Added casts for certain parameters in calls
	to these functions which resulted in warnings after adding the
	prototypes (above).

	* index.c (initialize_nodeallocator, alloc_node): Prototypes.
	(ic_install_try, ic_install_retry, ic_install_trust, walk_tree):
	Removed non-prototype declarations.

Fri May 20 11:39:42 1994  Kevin A. Buettner

	* alspi.h (PARAMS): Moved definition to earlier in file.
	(PSTRUCT): Protoized the func field.
	(PI_printf, PI_aprintf, PI_app_printf):  Made these valid prototypes.

	* lexan.h (lxi_but): Protoized nextbuf and err_rec fields.

	* defs.h: Fixed some prototypes.
	
	* built.c, built.h: Moved pbi_ externs to from built.c to built.h.

	* arith.c (srandom): Changed #ifdef mechanism used to determine
	which set of functions to use for random numbers.
	(pbi_time): Define this if HAVE_TIME is defined instead
	of the absence of DOS.
	(als_cputime, als_realtime, als_random, aint, rint, exp10, do_is):
	Prototypes.

	* winter.h (w_assert_builtin, w_assert_foreign): Fixed prototypes.

	* bdb.c (doassert): Added prototype.
	(cvt_term_to_rule):  Removed extern declaration.
	(resolve_ref): Removed non-prototype declaration.
	(pbi_execcommand): doassert() was being called with too few arguments;
	call with proper number of arguments.

	* parser.h (cvt_term_to_rule): Prototype declaration.

	* bgv.c (gv_alloc): Removed non-prototype declaration.

	* bos.c (pbi_getenv): Removed non-prototype declaration of getenv().
	(tempnam, tmpnam): Removed non-prototype declarations.

	* winter.h, winter.c (w_uia_alloc): Changed type of third argument
	to size_t.

	* bsio.c (sio_sprintf): Typecast added for strlen() in call to
	w_unify.
	(get_stream_buffer, incr_fdrefcnt, decr_fdrefcnt, compute_flags,
	accept_connection, stream_is_ready, shift_buffer, write_buf,
	stream_end, skip_layout, octal, hexadecimal, decimal, escaped_char,
	quoted_atom, quoted_string, char_constant, next_token0, format_type):
	Added prototypes for these static functions.
	(bind, connect, htons, memmove, read, write): Added casts to calls of
	these functions to prevent "conversion" warnings.
	(delete_stream_name): Prototype.  Defined static instead of extern.

	* bsystem.c (abortmessage): Prototype.

	* built.c (struct blt_struct): Prototype for the blt field of this
	structure.
	(wm_catch22, wm_colon, wm_cut, wm_jump, wm_ocall, wm_dbg_call,
	wm_throw, wm_arg, wm_atom, wm_atomic, wm_compare, wm_float, wm_functor,
	wm_identical, wm_integer, wm_mangle, wm_nonidentical, wm_nonvar,
	wm_number, wm_var, wm_call, wm_eq, wm_noneq):  Prototypes.
	(struct blt2_struct): Prototypes for the following fields: installer,
	p1, and p2.

	* cinterf.h (sym_insert_2long, sym_insert_dbl): Prototypes.
	(CI_makefar, CI_get_integer, CI_get_double): Added extern declarations.

	* cinterf.c (lookup_c_sym): Added prototype for this static function.
	(PI_getdouble, PI_getuianame, PI_getstruct,PI_getargn, PI_gethead,
	PI_gettail, PI_unify): Added casts for various arguments in calls to
	these functions where necessary.
	(c_structinfo, c_typeinfo, c_constinfo, c_rconstinfo, c_call,
	c_makeuia, c_convertCstrPstr):  Added prototypes.  These are also
	now statically declared.

	* compile.c (init_model):  Removed declaration of i which shadowed
	a previous declaration.
	(reassign_homes): Renamed the local variable nargs so that it doesn't
	shadow the global declaration.
	

Thu May 19 16:53:59 1994  Kevin A. Buettner

	* sig.c (HAVE_ITIMER): Changed to HAVE_SETITIMER.
	* fsdos.c, fsunix.c, main.c (SymLink): Changed to HAVE_SYMLINK.
	* defs.h (PACKAGE, HAVE_WAIT3, HAVE_WAITPID, HAVE_SETSID, HAVE_REXEC,
	HAVE_SELECT, HAVE_MMAP): Removed.  Also cleaned up explicit
	references to specific machines.
	* defs.h: Removed references to mconfig.h.  We now include config.h
	instead.  We may want to think of a better name for this.

Wed May 18 14:54:08 1994  Kevin A. Buettner

	* defs.h (SOCKET, HAVE_STDLIB_H, HAVE_STRING_H, HAVE_UNISTD_H,
	HAVES_TIMES, HAVE_TEMPNAM, HAVE_ITIMER, SymLink): Removed.  These
	will now come in through config.h.

	* bsio.h, bsio.c, built.c (SOCKET):  Changed to HAVE_SOCKET.
Wed Apr 20 12:07:19 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.66B.
	* SPARC/Sun/mconfig.h (HAVE_DLOPEN): Defined.
	(DynamicForeign): #undef removed.
	* SPARC/Sun/Makefile.mach (ALSGLUE): Defined.
	* SPARC/Sun/Makefile.spec (CLIBS, SUFFIXES): Added -ldl to CLIBS.
	Added .so to SUFFIXES.  Also added rule for making .so files.
	* Port/IRIX5.1/mconfig.h (HAVE_DLOPEN): Defined.
	(DynamicForeign): #undef removed.
	* Port/IRIX5.1/Makefile.mach (ALSGLUE): Defined.
	* Port/IRIX5.1/Makefile.spec (CLIBS, SUFFIXES): Added -ldl to CLIBS.
	Added .so to SUFFIXES.  Also added rule for making .so files.

Tue Apr 19 10:36:37 1994  Kevin A. Buettner

	* Generic/alsglue.c: New file.
	* Generic/lforeign.c (HAVE_DLOPEN):  Defined loadforeign for operating
	systems having this feature.
	* Generic/Makefile (alsglue.c):  Added to the OTHERFILES list.
	* SPARC/Solaris/Makefile.spec (CLIBS, SUFFIXES): Added -ldl to CLIBS.
	Added .so to SUFFIXES.  Also added rule for making .so files.
	* SPARC/Solaris/Makefile.mach (ALSGLUE): Defined.
	* Templates/Makefile.tail (AIMAGE): Added ALSGLUE as a dependency
	and also a part of the link line.
	* SPARC/Solaris/mconfig.h (HAVE_DLOPEN): Defined.
	* M88k/Mot-SVR4/mconfig.h (HAVE_DLOPEN): Defined.
	* M88k/Mot-SVR4/Makefile.mach (ALSGLUE): Defined.
	* M88k/Mot-SVR4/Makefile.spec (CLIBS, SUFFIXES): Added -ldl to CLIBS.
	Added .so to SUFFIXES.  Also added rule for making .so files.

Tue Apr 12 14:44:36 1994  Kevin A. Buettner

	* Port/IRIX5.1/{Makefile.mach, Makefile.spec, mconfig.h}: New files
	added and committed to CVS.
	* Generic/sig.h: Added and committed to CVS.
	* Generic/missing.h (htons, rexec): Prototypes.
	* Generic/missing.h: Added and committed to CVS.
	* Template/Makefile.gen (icode.h): Don't assume that . is on the
	path.

Tue Apr 12 11:54:35 1994  Kevin A. Buettner

	* Changes committed to CVS.
	* Cinterf/c2pro/cparse (getStmtLoop): Use writeq instead of write
	* Cinterf/pro2c (comply_with_ANSI/3, classifyThisType/2): Handle
	unions.

Tue Apr 12 10:36:22 1994  Kevin A. Buettner

	* Changes committed to CVS.
	* Generic/version.h (SysVersionNum):  Now 1.65B.

Mon Apr 11 13:00:03 1994  Kevin A. Buettner

	* Builtins/xconsult.pro (builddisjuncts): Added clause for handling
	left-nested if-then-else.  (They were not getting expanded correctly.)

Fri Apr  8 16:23:22 1994  Kevin A. Buettner

	* Generic/missing.h (gethostname): Prototype.
	* SPARC/{icode1.c, icode2.c, icmath.c, machinst.h, cmp.c}:
	-Wall changes.

Thu Apr  7 12:11:32 1994  Kevin A. Buettner

	* sig.h (missing.h): Included.
	* mem.c (SIGSTKSIZE): Define the size of the signal stack (if any).
	* mem.c (allocate_prolog_heap_and_stack): Declare si to be of type
	struct sigstack instead of equivalent structure which we define
	ourselves.
	* missing.h (bzero, re_comp, re_exec, getwd, open, sigvec, sigstack,
	getpagesize): Prototypes.
	* SPARC/Sun/mconfig.h (MISSING_EXTERN_bzero, MISSING_EXTERN_re_comp,
	MISSING_EXTERN_re_exec, MISSING_EXTERN_getwd, MISSING_EXTERN_open,
	MISSING_EXTERN_sigvec, MISSING_EXTERN_sigstack,
	MISSING_EXTERN_getpagesize): Defined.

	* main.c (copyright): New function for getting -Wall off our backs
	* arith.c (gamma): Declared parameter to be double instead of 
	implicitly integer. (-Wall found this honest to goodness bug).
	* M68k/*.h M68k/*.c: More -Wall stuff.

Wed Apr  6 11:01:00 1994  Kevin A. Buettner

	* missing.h: New file.
	* */*.h, */*.c: More -Wall stuff everywhere.

Fri Apr  1 13:28:08 1994  Kevin A. Buettner

	* sig.c (HAVE_ITIMER):  Renamed from HAS_ITIMER to HAVE_ITIMER
	* defs.h (HAVE_ITIMER): Added to the set of features that we assume
	that a system will have.
	* defs.h, foreign.c, lforeign.c, bio.c, main.c, fsunix.c, mem.c,
	wintcode.c:
	More -Wall stuff.

Mon Mar 28 16:58:04 1994  Kevin A. Buettner

	* Generic/{*.h, *.c}: Many, many changes related to getting alspro
	to pass -Wall.
	* M88k/{*.h, *.c}: Ditto.

Fri Mar 18 12:54:43 1994  Kevin A. Buettner

	* wintcode.h (NTBL_SIZE): Changed to 16384 (from 8192) at suggestion
	of Ken Bowen.

Mon Mar 14 11:51:42 1994  Kevin A. Buettner

	-Wall session:
	* Generic/alloc.c (prs_area_init, alc_rst, is_double):
	Return types declared.
	* Generic/alloc.h (prs_area_init, alc_rst, is_double): Declared.
	* Generic/alloc.c (allocat): Declared static.
	* Generic/alloc.c (mk_double, is_double): declaration of i moved.
	* Generic/alspi.h (___dummy___): ifdef'd out.  Will totally nuke
	if there is no problem.
	* Generic/defs.h (als_exit): Declared.
	* Generic/main.c (als_exit): Return type declared.
	* Generic/arith.c (pbi_time): Return type added to defn.
	* Generic/winter.c (deref): Declared static.
	* Generic/winter.c (w_get, w_install, w_install_argn,
	w_install_unbound_argn, w_get_argn, w_mk_term, w_get_functor,
	w_get_arity, w_mk_list, w_mk_unbound, w_get_An, w_get_uianame,
	w_mk_uia, w_mk_uia_in_place, w_uia_alloc, w_uia_clip, w_uia_peek,
	w_uia_poke, w_uia_peeks, w_uia_pokes, w_mk_double, w_get_double,
	w_unify, w_rungoal): Added return type.
	* Generic/winter.h (w_get, w_install, w_install_argn,
	w_install_unbound_argn, w_get_argn, w_mk_term, w_get_functor,
	w_get_arity, w_mk_list, w_mk_unbound, w_get_An, w_get_uianame,
	w_mk_uia, w_mk_uia_in_place, w_uia_alloc, w_uia_clip, w_uia_peek,
	w_uia_poke, w_uia_peeks, w_uia_pokes, w_mk_double, w_get_double,
	w_unify, w_rungoal, make_number): Declared.
	* built.h (get_number): Declared.
	* arith.c (make_number, pbi_is, NUMCOMP): Added return type.
	* bcinter.c: Return types declared for all pbi_ functions.
	* bcinter.c: (pbi_c_set, pbi_c_examine): Removed unused variables.
	* bdb.c: Return types declared for all pbi_ functions.
	* butil.c: Missing return types added for all functions in this file.
	* built.h: Declared all non-static functions in butil.c.
	* butil.c (hcvars): Deleted (was not used).
	* wintcode.c: Fixed missing return types on all functions.
	* wintcode.h: Non-static functions in wintcode.c declared.
	* defs.h: Misc prototypes.
	* icom.h: Prototypes for icode, etal.
	* M88k/icode1.c: Return types.
	* compile.h: Prototype for compile_clause.

Fri Mar 11 11:12:09 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.64B.

Wed Mar  9 15:01:35 1994  Kevin A. Buettner

	* Builtins/sio.pro (reset_user/2): Fixed typos.
	* Builtins/sio.pro (open_window_stream/4): Fixed typo.

Mon Feb 28 10:20:10 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Temporarily 2.02 for new release.

Fri Feb 25 14:44:21 1994  Kevin A. Buettner

	* Builtins/sio_rt.pro (tp_eval_if/2): Call #if goal in module user
	instead of from sio (this is where tp_eval_if lives).
	* Builtins/sio_rt.pro (tp_skip_to_endif/3): Fixed typo.

Thu Feb 24 10:34:19 1994  Kevin A. Buettner

	* Cinterf/c2pro/cmacro (imported/1): Declared dynamic.
	* Cinterf/c2pro/cout (silent/0, debug/0, skip/2, exclude_files/5):
	Declared dynamic.  Removed abolish of skip/2 -- no longer needed now
	that its dynamic.
	* Cinterf/c2pro/cparse (debug/0): Now dynamic.
	* Cinterf/pro2c/interf (fmax/1, smax/1, cmax/1, '$user_translator'/1,
	'$user_dup_detect'/1, prof_file_open/1, doswin/0): Now dynamic.
	* Cinterf/pro2c/interf (emit_compact_inits/1): Don't emit code
	telling the user that the interface is loaded when the verbose flag
	is set.  (There no longer is a verbose flag at this level).
	* Cinterf/pro2c/intfout (write_interf_init): Ditto. (Why do we
	have two of these?)

Mon Feb 21 19:41:54 1994  Kevin A. Buettner

	* Builtins/comp_d10.pro (dynamic/1): Nuked.  This actually does
	something now.

Fri Feb 11 11:25:49 1994  Kevin A. Buettner

	* Generic/bsio.c (next_token0): Removed redundant check for buffer
	split.  Added additional buffer split checks for strings.

Thu Feb 10 14:27:00 1994  Kevin A. Buettner

	* Generic/bdb.c (pbi_dynamic): Accept UIAs as well as symbols for
	the predicate.
	* Generic/bsio.c (quoted_string): Rewritten to fix problem with
	strings being broken too early in an escape sequence.

Tue Feb  8 10:41:02 1994  Kevin A. Buettner
	
	* Generic/fsunix.c (stat_with_timeout): New function.
	* Generic/fsunix.c (canonical_pathname): Replaced stat with STAT.
	Also, if stat returns an error while attempting to find the root,
	just continue on since it is only a problem if we are unable to
	stat an element of the path back to the root.  There may well be
	lots of things that we can't stat.

Mon Feb  7 11:05:19 1994  Kevin A. Buettner

	* Generic/main.c (PI_prolog_init): Fixed error in allocating the
	heap and stack size when set via ALS_OPTIONS.  We were allocating
	four times as much as we were supposed to.
	* M88k/Mot-SVR4/mconfig.h (DynamicForeign): Undef'd.  We don't
	yet support dynamic foreign loading on SVR4.

Fri Feb  4 16:59:46 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.63B.
	* NEWS: Added comment about Solaris.
	* alspro.1 (ALS_OPTIONS): Fixed typos.

Fri Feb  4 14:08:30 1994  Kevin A. Buettner

	* Generic/sig.c (signal_handler): Reorganized and added support for
	Solaris (which is just SysVR4 and arch_sparc).
	* Templates/Makefile.gen: Removed -q switch from calls to $(PROLOG).
	* SPARC/domath.sprc (dbl_round): Call rint instead of anint.
	* Generic/arith.c (rint, aint): Define these for everybody but SunOS.
	* Generic/arith.c (exp10): New function.
	* SPARC/Solaris/{Makefile.mach, Makefile.spec, atr_out.pro, fixasm,
	mconfig.h}: New files.

Tue Feb  1 16:16:03 1994  Kevin A. Buettner

	* bin/alspro.working (IMAGENAME): Run the uname -m through sed to
	strip off any suffixes for sun systems.
	* Generic/pckgmake.c (mark_package_proc,unmark_package_proc): Fixed
	typos from Jan 26.
	* createmake: Installed Raman's changes for relativizing the whole
	mess.
	* Templates/Makefile.gen: Ditto.
	* Generic/lforeign.c (SysV): Changed to SysVR3.

Thu Jan 27 10:59:52 1994  Kevin A. Buettner
	
	* Generic/foreign.c (PI_rungoal_with_update): New function.

Wed Jan 26 18:58:35 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.62B.

Wed Jan 26 17:55:18 1994  Kevin A. Buettner

	* Generic/wintcode.h (dbprot_t, w_dbprotect):  New declarations.
	* Generic/wintcode.c (w_dbprotect): New function.
	* Generic/wintcode.c (makerunable, makewritable): Now static.
	* Generic/{bdb,bdbg,bio,foreign,module,pckgmake,wintcode,winter}.c
	(w_dbprotect): Changed all calls to makewritable and makerunable to
	call w_dbprotect instead.
	* Generic/winter.h (w_unify):  Removed out of date comment.
	* Generic/{bdbg,bio,winter}.c ("wintcode.h"): Include this file in
	order to get the new declarations of dbprot_t and w_dbprotect.

Tue Jan 25 17:14:39 1994  Kevin A. Buettner

	* Generic/mem.c (ss_restore_state): Map /dev/zero to make up for
	difference between needed size and size of block mapped from file.

Mon Jan 24 10:57:32 1994  Kevin A. Buettner

	* Builtins/Library/misc_io.pro (conv_case/3):  Don't use tilde
	anymore for character codes.

Fri Jan 21 11:10:51 1994  Kevin A. Buettner

	* */*/config.h:  Removed these where an mconfig.h/aconfig.h pair
	has been written and tested.  The mconfig.h/aconfig.h pairs replace
	the config.h files.
	* M88k/{Mot,Mot-SVR4}/tt.c:  Removed.  I think that this was an old
	test of Raman's which he used to try to get the signal handlers to
	work on SVR4.

Fri Jan 21 11:00:00 1994  Kevin A. Buettner

	* Changes committed to CVS; Tagged as RELEASE_2_01.

Thu Jan 20 16:13:45 1994  Kevin A. Buettner

	* alspro.1:  Updated this file.

Tue Jan 18 15:11:53 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Temporarily 2.01 for new release.
	* Generic/bsio.c (quoted_atom):  Set the escapefound flag (a local
	var) when a backslash is found at the end of a line in a quoted atom.
	* Generic/bsio.c (quoted_string): Added code to handle continuation
	lines.
	* Builtins/sio_rt.pro (rt_qsymbol/5, pp_rt_qsymbol/5, rt_string/5,
	pp_rt_string/5):  Skip over the lineinfo tokens (if any).

Tue Jan 18  8:57:09 1994  Kevin A. Buettner

	* Builtins/sio.pro (stream_property0/2):  Added clause for snr_action.
	* Builtins/blt_msg.pro (decode_error/4):  New error message added for
	stream_not_ready.  Changed error message for past_end_of_stream.
	* Generic/wintcode.c (w_addclause):  Declare the procedure to be
	dynamic if adding a clause with either asserta or assertz and the
	procedure has no clauses.
	* Builtins/blt_io.pro (searchdir/1): Declared dynamic.

Mon Jan 17 15:27:06 1994  Kevin A. Buettner

	* Changes committed to CVS.
	* bin/fix-rdiff: New file.

Mon Jan 17 11:05:50 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.61B.
	* {I386,M68k,M88k,Port,SPARC,VAX}/icode2.c (ic_install_fail):
	New procedure.
	* Generic/wintcode.h (NMSK_DYNAMIC): New proc entry table flag.
	* Generic/wintcode.c (w_dynamic): New function.
	* Generic/wintcode.c (w_erase): Call ic_install_fail instead of
	ic_install_resolve_ref for dynamic procedures.
	* Generic/bdb.c (pbi_dynamic): New function.
	* Generic/built.c (pbi_dynamic): Added to builtin initialization
	structure.
	* Builtins/builtins.pro (dynamic/1): New procedure.
	* Builtins/blt_io.pro (consulted/2): Declared dynamic.
	* Builtins/Library/iolayer.pro (windows:current_ws/1):  Declared
	dynamic.
	* Builtins/Library/iolayer.pro (menu/3):  Removed hack which tested
	for existence of current_ws/1 prior to calling it in order to avoid
	undefined_predicate error.
	* Builtins/blt_io.pro (file_clause_group/2): Declared dynamic. Removed
	old hack for avoiding undefined_predicate error.
	* Builtins/blt_term.pro (recorda/3): Fixed typo.
	* Builtins/debugtty.pro (noshow/3, leashed/1, spying_on/2): Declared
	dynamic.
	* Builtins/Library/macro.pro (macro_defn/6): Declared dynamic.
	* Builtins/Library/objects.pro (object_counter/1,subClassOf/2,
	classModule/2,slot_constraint/4,slot_default/3,extension_installed/1,
	object_loaded_file/1, gui_loaded_file/1,slots_profile_for/2):
	Declared dynamic.
	* Builtins/Library/objs_run.pro (notify_null_send_flag/0):
	Declared dynamic.



Fri Jan 14 11:08:22 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.60B.

	* Generic/bsio.c (sio_next_tokens): Turn off any comment indicators
	when end of preprocessing directive is found.

	* Generic/module.c (call_resolve_reference):  Force an interrupt to
	be generated when the reference is not defined.

Thu Jan 13 16:37:39 1994  Kevin A. Buettner

	* Builtins/blt_sys.pro (ss_parse_command_line/3, start_shell/1):
	Support for -P switch added.
	* Builtins/builtins.pro (command_line/1): Exported.

Mon Jan 10 08:09:35 1994  Kevin A. Buettner

	* Builtins/blt_sys.pro (force_libload_all/2):  Call load/4 instead of
	$load/2.

Fri Jan  7 17:21:18 1994  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.59B.

	* Changes committed to CVS.

Fri Jan  7 10:55:05 1994  Kevin A. Buettner

	* Builtins/sio_rt.pro (rt_qsymbol/5,pp_rt_qsymbol/5):  Permit functor/3
	to terminate a long quoted symbol (long_qsymbol/3) as well as symbol/3.

	* Generic/bsio.c (next_token0):  After scanning a number, check for
	a possible split at one plus the position after scanning the number
	in order to force things like the dot in decimal numbers to be rescanned
	if at the end of a buffer.

	* M88k/unify.88k (_uUIA12topa): Branch to _str_fail instead of _fail
	in order to restore the value of tmp3.

	* Builtins/blt_sys.pro (start_shell/1): Run the shell call in the
	user module.
	* Builtins/builtins.pro ('$start'/0): Put builtins: before
	prolog_shell.

	* Templates: New directory.
	* Makefile.{gen,head,tail}: Moved these to Templates.
	* Templates/Makefile.gen (TMPLDIR): New variable representing the
	Templates directory.  Also changed all references to Makefile.gen,
	Makefile.head, and Makefile.tail to use this directory instead of
	MERGE.
	* createmake: Installed Ken's version.  Here is what Ken had to say
	about it: if PRODIR is defined (= new version of the old MERGE ), it
	uses that;  if not, then it does the CMPATH trick as before.  As an
	extra, I set it up so that you can pass just two args (ARCH and MACH),
	and it goes ahead and fills in PRODIR if at all possible.  It still
	lives at top level in the dir, but there is a link to it in the
	PRODIR/bin directory -- so I can be anywhere, and type createmake
	with no path prefix, & it gets everything ok using the PRODIR var.

	* M88k/Mot/Makefile.spec (CLIBS): Put -lc at the front of this list
	of libraries.  I think that there is some version of wait which is
	getting loaded first from some one of the other libraries which is
	bogus.  Putting -lc in front gets the good versions of wait and
	waitpid.

	* M88k/sca_reals.88k: Changed labels @L1 and @L2 as they were
	interfering with the local labels generated by the assembly language
	translator.  In both cases, we use the 1f as the label in the
	instruction.

Wed Jan  5 12:27:08 1994  Kevin A. Buettner

	* M88k/assembly.88k: (push_c_regs, pop_c_regs): New macros.
	* M88k/interface.88k (push_c_regs, pop_c_regs): Changed from
	subroutines to macros.
	* M88k/interface.88k (wm_fail_builtin): Deleted code which
	had been ifdef'd out.
	* M88k/wint88.h (wm_CSP_idx): Eliminated.
	* M88k/interface.88k (wm_CSP_idx): Eliminated -- this used to be
	accessed in wm_fail_builtin.

	* M88k/{Mot,Mot-SVR4}/atr_label.pro: New file.
	* M88k/atr_out.pro (atr_label):  Consult this file.  Also use 
	local_label_prefix/1 (defined in atr_label.pro) for printing the
	prefix for local labels.
	* M88k/{Mot,Mot-SVR4}/Makefile.mach: (MPROFILES): Put atr_label on
	this list.

Thu Dec 30 14:53:20 1993  Kevin A. Buettner

	* NEWS: Documented additions to version 1.58B.

	* Changes committed to CVS.

Thu Dec 23 10:22:48 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.58B.

	* Generic/sig.c (deathwatch, burychild): New functions.
	* Generic/bsio.c (sio_rexec): Added new code for local execution
	without authentication.
	* Generic/bsio.c (unistd.h): Include this file.
	* Generic/bsio.c (STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO): Define
	these if not already defined. sio_file_open modified to use these
	instead of hardcoded constants.

	* Generic/defs.h (HAVE_SETSID, HAVE_WAITPID, HAVE_WAIT3): New
	feature definitions.
	* Generic/built.c (sio_rexec): No longer needs to have HAVE_REXEC
	defined.
	* Generic/bsio.c (sio_rexec): UNIX must be defined in order for things
	like fork to work.
	* Builtins/sio.pro (rexec_get_option/2): Changed interface to use
	username(User) instead of user(User).
	* Builtins/sio.pro (rexec_open): Fixed typo which was preventing
	the buffering information from being set properly.

Tue Dec 21 17:20:07 1993  Kevin A. Buettner

	* Generic/defs.h (HAVE_REXEC): New feature to test for.
	* Generic/bsio.c (sio_rexec): New function.
	* Generic/built.c (sio_rexec): Added to the builtin initialization list.
	* Builtins/sio.pro (rexec/2): New procedure and other supporting
	procedures.
	* Generic/bsio.c (sio_close): Always close down the writable half of a
	writable socket stream.

Tue Dec 21 11:04:39 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.57B.

	* Generic/bsio.c (quoted_string):  Strings which exceeded the number
	of characters in the buffer were not being handled right.  Added
	code to handle strings which are broken up.
	* Builtins/sio_rt.pro (rt_primary/6, pp_rt_primary/6): Added code for
	handling long strings.
	* Builtins/sio_rt.pro (rt_string/5, pp_rt_string/5): New procedures
	for handling long strings.
	* Builtins/blt_sys.pro (exec_file_command/2): No longer use strings;
	use atoms instead.  Changed all callers.

Mon Dec 20 12:26:19 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.56B.
	* NEWS: Documented new stuff for 1.56B.

	* Builtins/sio.pro (gl_more/4): Return stream_not_ready(PartialLine)
	to indicate that the stream was not ready and the portion of the
	line which could be read.

	* Builtins/sio.pro (get_failure/3, get_failure_read_of/5):  
	Do not pass last argument to existence_error in a list.

	* Builtins/sio_rt.pro (rt_readclause, pp_rt_readclause): Get
	value of eof_action and call rt_readclause_eof/3.  This is a new
	procedure which will either force an existence error or cause
	the term end_of_file to be returned depending on the value of
	eof_action.

	* Generic/bsio.c (sio_next_tokens): Instantiate first argument of
	TK_EOF to the stream instead of TK_EOF.
	* Builtins/sio.pro (get_failure_read):  Incorporate functionality
	from gt_failure_read and implement the eof_action option.
	* Builtins/sio.pro (gt_failure, gt_failure_read): Eliminated.  All
	callers of gt_failure now call get_failure instead.
	* Generic/bsio.c (sio_get_number): Fail with SIOE_PARTNUM if we don't
	have enough input and are just before end of file.

Sat Dec 18 23:19:47 1993  Kevin A. Buettner (kev@pinnacle.als.com)

	* tsuite/mathserv2.pro (flush_input/1): Added this call after read
	since datagram streams now set end-of-file after reading one datagram.

	* Builtins/sio.pro (gt_failure/2): Eliminated.
	* Builtins/sio_rt.pro (tp_get_token_list/2): Call tp_check_readiness
	at the end of the clause to decide on how to proceed.
	* Builtins/sio_rt.pro (tp_check_readiness/4, tp_stream_not_ready/2):
	New procedures.
	* Builtins/sio.pro (gt_failure/2): Call gt_failure_read/2 to read a
	new buffer.
	* Builtins/sio.pro (gt_failure_read/2, gt_failure_read/3): New
	procedures.

	* Generic/bsio.h (SIOF_SNR): Nuked this flag.
	* Generic/bsio.c (SIOF_SNR, TK_SNR): Removed code added Friday which
	dealt with these values in sio_readbuffer, sio_next_tokens, and
	next_token0.
	* Generic/{bsio,built}.c (sio_reset_snr): Nuked.

Fri Dec 17 17:04:29 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* Generic/bsio.h (SIOF_SNR): New flag.
	* Generic/tokin.h (TK_SNR): New token.
	* Generic/{built,bsio}.c (sio_reset_snr): New function.
	* Generic/bsio.c (SIOF_SNR,TK_SNR): Added handling of these values in
	sio_readbuffer, sio_next_tokens, and next_token0.
	* Builtins/sio.pro: Added support for nonblocking streams.

	* Generic/bsio.c (stream_is_ready): New function. sio_poll rewritten
	to use stream_is_ready.  write_buf and sio_readbuffer modified to
	call this function for nonblocking streams.

	* Generic/bsio.h (SIOE_NOTREADY):  New error code (this has the
	same value as the old SIOE_WAITDATA).
	* Generic/bsio.h (SIOF_DONTBLOCK): New flag.
	* Generic/bsio.h (SIO_BUFFERING_TO_FLAGS, SIO_MODE_TO_FLAGS): Deleted.
	* Generic/bsio.c (compute_flags): New function.  Replaced all callers
	of SIO_BUFFERING_TO_FLAGS or SIO_MODE_TO_FLAGS with a call to this
	function.

	* Generic/{bsio,built}.c (siof_open): Renamed to be sio_file_open.
	* Builtins/sio.pro (siof_open): Renamed. Now sio_file_open.
	* Generic/bsio.h (SIO_TYPE_ATOM, SIO_TYPE_STRING, SIO_TYPE_WINDOW):
	Coalesced into SIO_TYPE_PROLOG_MANAGED.
	* Generic/bsio.{h,c} (sio_generic_open): Removed all code dealing with
	strings, atoms, and windows.  Now have a single generic open call
	for dealing with these entities.
	* Builtins/sio.pro (sio_generic_open): Call this instead of
	sio_atom_open, sio_string_open, or sio_window_open.
	* M88k/aconfig.h (WINS): Deleted.

	* Generic/sio_rt.pro (rt_primary/6, pp_rt_primary/6): Fixed typo
	which prevented the long quoted symbol code from working properly.

Thu Dec 16 13:41:42 1993  Kevin A. Buettner

	* Generic/bsio.h: (SIO_HBFSIZE, SIOE_READU, SIOE_SHIFT, SIOE_WRITEL,
	SIOE_BADSHIFT, SIOE_WAITDATA, SIO_TPOS): Removed.
	* Generic/bsio.c (sio_mkstream): Nuke SIO_HBFSIZE.  Also permit odd
	buffer sizes.   Also force buffer size to be at least 8.
	* Generic/bsio.c (sio_buf_params): Revised code dealing with
	computation of bufstart.
	* Generic/bsio.c (sio_reset_eof):  Simply reset the end of file
	indicators.  Do not set the buffer positions.
	* Generic/bsio.c (sio_ereset, sio_econtext): Nuked (no longer used
	by prolog code).
	* Generic/bsio.c (SIO_TPOS): Removed all references to this macro.
	* Generic/bsio.h (SIOE_INVALIDTYPE): New error code.

	* Generic/bsio.c  Revised all code dealing with our buffering
	scheme.  We no longer have a concept of a "half" buffer.
	* Builtins/sio.pro: Ditto.

Thu Dec 16 11:05:02 1993  Kevin A. Buettner

	* Changes committed to CVS

Wed Dec 15 15:07:01 1993  Kevin A. Buettner

	* Generic/bsio.c (quoted_atom): Added new variable bufend which is
	set to the end of the buffer.  Use this variable to determine whether
	or not a single quote is the final quote character.  If it occurs
	in the position before the end of the buffer, it could be the case
	that reading the next buffer will result in a quote as the first
	character in which case we convert the pair of single quotes into
	just one single quote.

	* Generic/bsio.c (sio_readupper): Removed #ifdef notdef for dirty
	check.

Tue Dec 14 09:44:06 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.55B.
	* NEWS: Documented new stuff.

	* Generic/bsio.c (sio_readbuffer): if'd out code dealing with
	SIOE_WAITDATA as this error condition is conflicting with the
	end-of-file indication.
	* Generic/bsio.c (sio_socket_open, sio_readbuffer,sio_is_server_socket,
	sio_close, write_buf): Completed support for datagram sockets.

	* tsuite/mathserv{1,2}.pro: New files illustrating client/server
	programming.

Mon Dec 13 09:44:06 1993  Kevin A. Buettner

	* Generic/bsio.c (sio_poll): New function.
	* Generic/built.c (sio_poll): New function added to builtins
	initialization structure.
	* Generic/bsio.c (accept_connection): Call incr_fdrefcnt for newly
	created file descriptor.
	* Generic/bsio.c (sio_close): Use shutdown to close stream sockets.
	* M88k/Mot/mconfig.h (MAXHOSTNAMELEN): Define this to be something
	reasonable.
	* Generic/bsio.c (incr_fdrefcnts): Added typecast before call to
	malloc.
	* Generic/bsio.c (sio_socket_open): Added typecast to second arg
	of getsockname.
	* Generic/bsio.c (sio_close): Use close rather than shutdown
	for SysVR3.  shutdown seems to hang on svr3.  close doesn't
	hang, but it also doesn't send the end of file indication to
	socket endpoints on other machines.  svr3 has its problems.
	I tried using setsockopt with SO_LINGER.  This seems to have
	no effect when used in conjunction with shutdown.  I did not
	try all of the combinations of SO_LINGER with close.
	Note (added 12-15-93): The problem here may well have been with
	the SIOE_WAITDATA stuff and not with close.

Sun Dec 12 13:41:53 1993  Kevin A. Buettner (kev@pinnacle.als.com)

	* Generic/version.h (SysVersionNum):  Now 1.54B.

	* NEWS: Documented socket interface.
	* tsuite/socketpair.pro: New file.
	* Builtins/sio.pro (is_server_socket/1, accept_socket_connection):
	New predicates.
	* Generic/bsio.c (sio_is_server_socket, sio_accept_socket_connection):
	New functions.
	* Builtins/sio.pro (socket_params/6): Rewritten yet another time.

Sat Dec 11 12:04:00 1993  Kevin A. Buettner (kev@pinnacle.als.com)

	* Builtins/sio.pro (socket_params/6): Don't permit [] to be a unix
	domain socket.
	* Generic/fatal.{c,h} (FE_IN_PCON, FE_FDREFCNTS):  Removed FE_IN_PCON
	as we no longer perform the command line consult from C. Replaced it
	* Generic/fatal.c (FE_ICODEBUFOVER): Removed reference in error
	message to no longer existing command line switch.
	with FE_FDREFCNTS which indicates an error in allocating fdrefcnts.
	* Generic/bsio.c (incr_fdrefcnt, decr_fdrefcnt):  New static functions.
	Calls to these added in places where opening, closing, or obtaining
	new references to a file descriptor are performed.
	* Generic/bsio.c (sio_close): Removed unlinking of unix domain socket
	names from this function.
	* Generic/bsio.c (delete_stream_name): New function for unlink a unix
	domain socket name.
	* Generic/bsio.c (accept_connection): New function for accepting
	connections.  Changed code containing calls to accept to call
	this function instead.

Fri Dec 10 23:22:19 1993  Kevin A. Buettner (kev@pinnacle.als.com)

	* Builtins/sio.pro (open_socket_stream/4): Rewritten along with
	associated procedures.  Socket specification is now somewhat
	different.  Limited support for cloning added.
	* Generic/built.c (sio_socket_open):  Reduced the number of
	parameters from 11 to 9.

Fri Dec 10 17:43:12 1993  Kevin A. Buettner

	* Changes committed to CVS.

Fri Dec 10 14:40:08 1993  Kevin A. Buettner
	
	* Generic/{bsio.c, bsio.c} (sio_offsetted_copy):  Removed.  This was
	replaced by '$uia_poke'/5.
	* Generic/bsio.c (sio_socket_open): Rewrote the unix portion of
	this code (again).
	* Generic/bsio.c (sys/param.h): Include this file in order to find
	MAXHOSTNAMELEN.

Thu Dec  9 10:39:14 1993  Kevin A. Buettner

	* Generic/bsio.c (socket code): Rewritten somewhat.
	* Generic/bsio.c (SIO_SOCKET_DESCRIP, SIO_CONN_SOCKET): Changed these
	to SIO_FD.
	* Generic/bsio.h (SIOF_NEEDACCEPT): New flag.
	* Generic/bsio.h (SIO_TYPE_SOCKET_STREAM, SIO_TYPE_SOCKET_DGRAM):
	These two replace SIO_TYPE_SOCKET. 
	* Generic/bsio.h (SIO_SOCKET_ADDRESS, SIO_SOCKET_ADDRESS_LEN):  
	New define for accessing the stream's address (for datagrams). 
	All other socket fields (SIO_SOCKET_DESCRIP, SIO_SOCKET_WAIT,
	SIO_SOCKET_CONNECTS, SIO_CONN_SOCKET, SIO_SOCKET_DOMAIN,
	SIO_SOCKET_TYPE, SIO_SOCKET_MYNAME, and SIO_SOCKET_TARGET) are gone.
	This was mostly a giant kludge to begin with.

	* Generic/bsio.c (ALS_PORT_STREAM, ALS_PORT_DGRAM):  Removed all traces
	of these.  These parameters are passed in through the interface.

Fri Dec  3 17:14:55 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* Builtins/sio.pro (get_socket_name/5):  Second clause: Set the
	socket name equal to the target in order to rationalize naming scheme
	for the AF_UNIX address family.
	* Builtins/sio.pro (open_socket_stream/8):  Fixed call to
	permission_error/4.  Message which is ultimately printed by blt_msg.pro
	is now more accurate.
	* Builtins/blt_sys.pro (ss_init_searchdir/0):  Fixed typo which
	prevented ss_init_searchdir/1 from being called.

Wed Dec  1 15:31:29 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.53B.

	* Builtins/sio.pro (write_lower/1, write_buffer/1):  New procedures
	for writing out the buffer contents and restarting interrupted
	system calls.
	* Builtins/sio.pro (read_upper/1, read_buffer/1):  New procedures
	which call sio_readupper and sio_readbuffer.  These procedures
	will restart interrupted system calls.
	* Generic/blt_brk.pro (break_handler/2): No longer flush the input
	stream at the outset.  This is now done in the menu code.  Also
	updated the copyright notice and removed comment about still needing
	to revise the library routines to use the io_streams option.
	* Generic/blt_lib.pro (output_prolog_list/5): Was /4.
	* Generic/Library/listutl3.pro (output_prolog_list/5): Was /4. New
	argument (the first) is now the stream to output to.
	* Generic/Library/simplio.pro (themenu/4): Implemented the io_streams
	option -- this option was passed in from blt_brk.pro but was being
	ignored.
	* Generic/bsio.c (sio_close): Don't close stdin, stdout, or stderr.
	* Builtins/sio.pro (get_failure/3):  Now call get_failure_read/2 
	(which is new) when we get SIOE_READ as an error code.  
	get_failure_read/2 and get_failure_read/3 implement the functionality
	of about half of the old clauses in get_failure/3.  In addition,
	SIOE_INTERRUPTED is checked for and the appropriate action taken when
	we get this error code.
	* Generic/bsio.c (SIOE_INTERRUPTED): Set SIO_ERRCODE(buf) to this value
	when EINTR is returned as the value of errno.  This is only done,
	however, on system calls which might potentially set errno to EINTR.
	* Generic/bsio.h (SIOE_INTERRUPTED): New error code.
	* Builtins/sio_rt.pro (rt_preop_ok/4): rt_preop_ok/4 used to be
	rt_preop_ok/1.  The problem is that we needed to skip over the
	line/3 tokens.  This new version does so.  This fixes the bug
	which erroneously reported syntax errors on prefix operators being
	used as symbols followed by one or more newlines. Example:
		-
		.
	used to report a syntax error.

	* utilities/*-mics.c:  Added code to these files which will make sure
	that the modes (protections) on the output image file is the same
	as that on the input image file.
	* utilities/mach-mics.c:  Added commentary about this file.

Tue Nov 30 17:44:05 1993  Kevin A. Buettner

	* Generic/mem.c (ss_saved_state_present):  New function.
	* Generic/mem.c (als_mem_init): Call ss_saved_state_present to
	determine whether or not the running image already contains the
	saved state.
	* utilities/mach-mics.c: New file which merges mach images with
	code states.
	* M68k/NeXT/Makefile.mach (MICSSRC):  Defined to be mach-mics.c

	* Generic/Makefile (HFILES):  Added alsmem.h to this list.
	* Generic/alsmem.h:  New file containing the am_header struct 
	from mem.c.

	* Builtins/Library/iolayer.pro (menu/4): Test to see if
	windows:current_ws/1 exists before calling it in order to avoid
	an undefined predicate error.
	* Builtins/blt_brk.pro (breakhandler):  Added new menu items and
	new code for entering a prolog shell and for failing.
	* Builtins/blt_db.pro (prolog_flag_check/2): The undefined_predicate
	flag may now take on break as its value.
	* Builtins/blt_evt.pro (undefined_predicate/2): New clause for
	putting the programmer in a break handler menu when a procedure
	is undefined.

Mon Nov 29 17:20:10 1993  Kevin A. Buettner

	* Builtins/debugtty.pro ($int, $procinfo, $exported_proc): Quoted
	these as they contain dollar signs.
	* Generic/mem.c (protect_bottom_stack_page):  Defined a dummy procedure
	for platforms which do not have page protection facilities.
	* Generic/bos.c (pbi_protect_bottom_stack_page):  Do not depend on
	HAVE_MMAP.
	* Generic/mem.c:  New code for platforms which define MACH_SUBSTRATE.
	* M68k/NeXT/mconfig.h (MACH_SUBSTRATE): Defined.

Mon Nov 29 10:11:34 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.52B.

	* Generic/cinterf.h (verbose): Deleted.
	* Builtins/blt_io.pro (loadforeign/3):  PathName --> Pathname.

	* Builtins/blt_io.pro (load2/3):  Only strip off .pro or .obp
	extensions.  Consider all other extensions the same as if the
	filename had no extension.
	* Builtins/blt_db.pro (init_prolog_flags/0):  New predicate.
	* Builtins/blt_db.pro (set_prolog_flag/2, current_prolog_flag/2):
	New predicates.  set_prolog_flag/2 was previously a hash table
	predicate.  We now make a hash table with '_PROLOG_flag' in order
	to not confuse the two.  set_prolog_flag/2 needs some error checking
	performed on it.
	* Builtins/blt_evt.pro (get_prolog_flag/2):  Call renamed to
	get_PROLOG_flag/2.

	* Generic/defs.h (strcspn, strspn): Fixed typo in function declaration.
	* Generic/lforeign.c (TraverseSectionsImage): Added cast for first
	argument in memset call.
	* Generic/mem.c (alloc_big_block):  Added explicit type declarations
	for this function's paramaters.
	* Generic/defs.h (PARAMS):  Added macro for dealing with ANSI C
	features in the same manner as the GNU sources.
	* M68k/NeXT/mconfig.h (HAVE_STRING_H):  Undef'd this.
	* Generic/bsio.c (sendto): Changed cast on fifth argument in calls
	to sendto to (struct sockaddr *).
	* Generic/lforeign.c (load_object):  Added cast to (char *) on
	assignment to loadaddr in order to avoid compiler warning.

Wed Nov 24 16:56:21 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* Builtins/filepath.pro (disk_separator/1):  Add definitions for this
	predicate (which will fail) for unix and vms in order to avoid calling
	an undefined procedure.
	* Builtins/blt_io.pro (consultmessage/1):  Define and use a global
	variable to keep track of the consult-message status in order to
	avoid using the database and calling an undefined procedure.
	* Builtins/xconsult.pro (gvar/3, win_file/1):  Commented out code
	which referenced these undefined predicates as neither one was really
	being used.
	* Builtins/blt_io.pro (file_clause_group/2): Defined an initial clause
	for this dynamic procedure.  We may want to implement this with a
	hash table.

	* Generic/module.c (resolve_reference):  Cause an undefined procedure
	interrupt to be generated when the procedure is undefined.
	* Generic/alssig.h (ALSSIG_UNDEFINED_PRED):  New define for undefined
	procedures.
	* Builtins/blt_evt.pro (undefined_predicate):  New signal name and
	procedures for dealing with this condition.
	* Builtins/blt_db.pro (_prolog_flag): Call make_hash_table to build
	access predicates to implement set_prolog_flag/2, et al.

	* Builtins/sio_wt.pro (wd_infix/10):  Split apart handling of ->/2 and
	;/2 so that the semicolon is as before, but arrow will appear at the
	ends of the lines.  The "then" part will be indented an additional
	level.
	* Builtins/blt_io.pro (consult and company): Rewritten to accept atoms
	as filenames instead of character code lists.
	* Builtins/{blt_io,blt_msg}.pro (obp_no_rem, obp_rem):  Renamed these to
	obp_not_removed and obp_removed.
	* Generic/main.c: Don't assert the searchdir from here any more.  Also
	removed extraneous global variables obviated by code removed yesterday.

	* Builtins/filepath.pro (path_separator/1): Set up along with
	file_separator/1 and company.
	* Builtins/filepath.pro (file_separator/1,subdir_file_ind/1,
	disk_separator/1):  When setting these up, don't use 
	assert_at_load_time/1).  Use addclause/2 instead.  Use compiletime
	before the whole mess and call sys_env to get the OS.
	* Builtins/builtins.pro (isAbsolutePathName/1): Moved from
	builtins.pro to filepath.pro.  Also redefined to use atoms instead of
	code lists.
	* Builtins/builtins.pro (pathSeparator/1, directorySeparator/1):
	Eliminated from this file.  filepath.pro has predicates with similar
	functionality.

Tue Nov 23 16:56:21 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.51B.

	* Builtins/Library/simplio.pro: Quoted terms with '$' in them.
	* Builtins/blt_sys.pro (cd/0): Use getenv/2 instead of $getenv/2.

	* Builtins/blt_sys.pro (si_load_dot_alspro):  Load .alspro here.
	* Generic/main.c (PI_prolog_init):  No longer load .alspro here.
	* Generic/main.c (PI_prolog_init):  Reorganized this function.  Command
	line processing is no longer done here.  We do however look at the
	environment variable ALS_OPTIONS and search for various options
	affecting the prolog environment.
	* Generic/defs.h (HAVE_STRING_H):  Defined.  We also test for this
	feature in this file and define compatible replacements if either
	aconfig.h or mconfig.h undefs HAVE_STRING_H.
	* Generic/main.c (strdup,strspn,strcspn,strtok): Replacements for
	when HAVE_STRING_H is not defined.
	* Generic/defs.h (getenv):  Declare here when HAVE_STDLIB_H is not
	defined.
	* Generic/main.c (getenv):  Removed declaration from main.c.
	* Builtins/blt_sys.pro (start_shell/1): New predicate for processing
	the command line prior to starting the prolog shell.

Mon Nov 22 11:57:49 1993  Kevin A. Buettner

	* Builtins/filepath.pro:  Almost totally rewritten to use the
	constant processing primitives found in the draft standard.

	* Generic/version.h (SysVersionNum):  Now 1.50B.

	* Builtins/debugtty.pro (dbg_spyon/0, dbg_spyoff/0):  Disable spypoints
	when entering the debugger so that we don't get stuck in a loop.
	Reenable them when we return to code which is being debugged.

	* Generic/mem.c (allocate_prolog_heap_and_stack):  #if'd out the
	lines which set up the signal handler for coredump_cleanup.  We
	may put these back in at a later time, but for now it messes up
	corefile debugging with gdb.

	* M88k/call.88k (_wm_call):  Prior to calling _call_resolve_reference,
	move the overflow check flag into r5 instead of T1.  T1 used to
	(prior to changes made on 10/26/93) be r5, but no longer is.  We are
	calling _call_resolve_reference with four arguments.  The fourth
	argument was not getting set up properly after our change.

	* M88k/cut.88k (notyet):  Deleted preprocessor lines referencing this
	feature.
	* M88k/call.88k (oldcode):  Deleted preprocessor lines and code in
	between which referenced this feature.

	* Builtins/blt_sys.pro (do_shell_query/5): Call dbg_spyon prior to
	entering the debugger.  Call dbg_spyoff whenever leaving a query.
	* Builtins/debugtty.pro (dbg_spyon/0): When calling dbg_spyon/0, we
	must do it after we've set everything else up.  Call dbg_spyoff in
	order to avoid entering the debugger while setting up the spy point.
	* Builtins/debugtty.pro (spy_pat/3): Enclose argument to printf
	in list so %t doesn't print out.
	* Builtins/debugtty.pro (fail_debug/0): set PrologInterrupt to
	debug_user in order to creep after failure.  This was done at
	Craig Thornley's request. 

Fri Nov 19  8:30:04 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.49B.

Wed Nov 17 11:37:00 1993  Kevin A. Buettner

	* Builtins/blt_lib.pro (avlx):  Deleted lines dealing with this
	library which no longer exists.

Tue Nov 16 14:36:41 1993  Kevin A. Buettner

	* Generic/pimain.c (main):  Pulled in window system initialization
	code.  Added prologdbi_init which is ifdef'd by PROLOGDBI.

	* Builtins/sio_rt.pro (rt_err/7): When rereading after an error,
	need to have the error mechanism instantiated or else the error
	mechanism will be failure (the first clause in rt_err/7).  In
	this case the error mechanism is dec10.

	* M88k/cut.88k (cutloop):  Fixed fencepost error in comparison of
	trail entry with HB value to see if the trail entry should be kept.

Mon Nov 15 10:18:41 1993  Kevin A. Buettner

	* Builtins/blt_sys.pro (print_banner/1):  Updated copyright notice.

	* Builtins/builtins.pro (catch/3):  Renamed primitive predicates for
	dealing with catch to catch0.  Removed module closure for this
	mechanism as it is of little use alone.  Added instantiation check
	to catch/4 which was formerly make_catch/4.

Sat Nov 13 15:02:58 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Temporarily 2.0 for the release.

	* Generic/bparser.c (C_list_to_string):  Characters are not only
	atoms of length one, but UIAs also.  Handle these.

	* Builtins/sio.pro (stream_property0/2):  Added maxdepth,
	depth_computation, and line_length.

	* Builtins/sio_wt.pro (output_string):  Compute InitialPosition by
	subtracting the initial indentation from the actual starting position
	on the line.  This will keep the line break position for the first
	line consistent with subsequent lines.

Sat Nov 13 14:08:25 1993  Scott A. Medeiros

	* Cinterf/pro2c/interf (PI_INIT):  Added semicolons
	after all occurrences of PI_INIT.

Sat Nov 13 13:45:17 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.48B.

	* Generic/bparser.c (string_to_C_list, C_list_to_string):  Change
	manner in which lim is set.  Instead of setting it to wm_TR-wm_normal,
	set it to wm_TR - (small offset).  We were getting too many spurious
	resource errors the other way.  The small offset will insure that
	there is just barely enough room to operate until the next inference
	where a real gc will happen.  This fix will probably eliminate the
	change to blt_sys.pro described below.

	* Builtins/blt_sys.pro (shell_exception/1): Call gc prior to printing
	out error so that we can clean up the heap in case if the error
	was a resource error.  We don't want another resource error to
	occur while attempting to print the error.  This actually occurred
	in Raman's ctrans program.

	* Builtins/Library/simplio.pro:  Changed calls to I/O preds so that
	input is read from user_input and output is written to user_output
	instead of the current input and output streams.

	* M88k/mangle.88k:  Increment gv_setcnt on every successful pass
	through mangle instead of just when the HB pointers are fixed. Reason:
	mangle could replace a pointer to structure with a constant
	thus freeing up space which the garbage collector might not see
	if gv_setcnt is not incremented.

Fri Nov 12 18:48:51 1993  Kevin A. Buettner

	* Builtins/builtins.pro (catcher/3): Set the catch variable to nil
	after we get it so that we don't waste space on large terms.  Worst
	case scenario (which actually happens) is that we run out of space
	and throw the goal which has an argument which is holding on to
	all of this space.

	* Builtins/sio_wt.pro (wd/9):  Make sure that ignore_ops is false
	before writing out a list with square bracket notation.  The
	draft standard says that ignore_ops(true) should write all
	compound terms out in functional form.

	* Builtins/blt_sys.pro (print_yes/1, print_no/1):  Write out
	yes and no all lowercase to match our documentation.

	* Cinterf/pro2c/interf (PI_SUCCEED, PI_FAIL):  Added semicolons
	after all occurrences of these.

	* Builtins/sio_wt.pro (winfo_write/2):  Changed so that the numbervars
	field is true to be compatible with the standard.

Fri Nov 12 18:45:29 1993  Scott A. Medeiros

	* Cinterf/c2pro/cout (skip/2):  Abolish it so it doesn't interfere
	with the program's version of skip/2.

Fri Nov 12 11:12:29 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* Generic/version.h (SysVersionNum):  Now 1.47B.

	* Builtins/blt_pckg.pro (process_image_option/1):  Assume that
	the start goal and initialization goals are accessible from user
	as opposed to builtins as it was previously written.

	* Generic/bmisc.c (pbi_frame_info):  When creating frame goal,
	handle variables differently than other types of terms as variables
	may potentially live on the stack and not on the heap.  Blindly
	installing the variable could lead to an unsafe condition.

	* Generic/butil.c (set_prolog_error):  When recreating the goal
	which caused the error recognize variables and handle them
	differently.

	* Generic/bparser.c (pbi_char_code):  Handle case where first
	argument is UIA.

Thu Nov 11 18:23:35 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.46B.

	* Generic/expand.c (cvt_term_to_rule):  Call expand_pred to make
	sure that the head of the clause is a symbol.

	* Builtins/blt_sys.pro (print_banner/0):  New procedure for printing
	the banner from prolog.

	* Generic/main.c (PI_toplevel):  Don't print the banner from here
	anymore.

	* Builtins/blt_pckg.pro (save_image/2):  New procedure for saving
	an image which takes options.

	* Generic/pckgload.c (pckg_run_init_goal):  Call $initialize instead
	of pckg_init.

	* Generic/main.c (PI_toplevel):  Call $start instead of prolog_shell.

	* Builtins/builtins.pro ($initialize/0, $start/0):  New predicates.
	$initialize is initially defined to call pckg_init.  $start is
	initially defined to call prolog_shell.

Thu Nov 11 15:08:17 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.45B.

	* Generic/main.{h,c} (sc_memctl_unit):  Removed definition and code
	which set this.

	* Generic/main.c (PI_prolog_init):  Removed -d command line
	switch.

	* Builtins/sio_d10.pro:  (get0/1, get0/2, put/1):  Define in
	terms of get_code and put_code.  Removed old definitions which
	overrode the C defined versions of the DEC-10 compatibility
	predicates.

	* Builtins/blt_io.pro:  Added call to nonvar_ok to the various consult
	predicates.

	* Builtins/sio_rt.pro (rt_err_info/5):  mangle ErrString into
	the structure to return.  We must do this because open/3
	will change the HB's when it does certain global variable operations.

	* Generic/bmisc.c (pbi_frameinfo):  Fixed typo for platforms where
	MTP_CONST is defined.

Wed Nov 10 15:29:32 1993  Kevin A. Buettner

	* Builtins/sio.pro (check_repositionability):  Fixed several
	bugs in this code.
	* Builtins/blt_msg.pro (decode_error/4):  Added messages concerning
	aliases which are already in use and opens on streams which
	can not be repositioned.
	* Builtins/sio.pro (get_char/2):  Fixed bug which occurred when
	using aliases.
	* Builtins/sio.pro (set_stream_position/2):  Implemented.
	* Builtins/sio.pro (stream_or_alias_ok/2):  Added check for
	open stream.
	* Builtins/sio.pro (get_failure/2):  Removed.  Changed all
	callers of get_failure/2 to call get_failure/3 after first
	calling input_stream_or_alias_ok/2 and sio_errcode/2.
	* Builtins/sio.pro (put_failure/3):  Removed.  All callers
	of put_failure/3 now call put_failure/4 after first calling
	output_stream_or_alias_ok/2 and sio_errcode/2.
	* Builtins/sio.pro (get_byte/1, get_byte/2, put_byte/1, put_byte/2):
	Defined these in terms of get_code and put_code.  Added FIXME about
	being moved to library.

Tue Nov  9 17:24:09 1993  Kevin A. Buettner

	* Builtins/pshl_oop.oop:  New file.
	* Builtins/fsunix.pro:  Merged in quoting of symbols with dollar
	signs.  Use 0' instead of tilde.  Nuke get_drive_status/2,
	get_num_logical_drives/1.
	* Builtins/fsdos386.pro:  Used file supplied by raman.
	* Builtins/filepath.pro (allSplits0/3):  Merged in a basis clause.
	Use atom_codes instead of name.  Add a cut to the (now) second
	clause.
	* Builtins/filepath.pro (name/2): Use atom_codes instead of name.
	* Builtins/{debugtty,debugwin}.pro: Merged some small changes in.
	* Builtins/blt_msg.pro (prolog_system_error/2): From merge; removed
	old, unused clause.  Also fixed variable naming problem.
	* Builtins/blt_lib.pro:  Added in new predicates defined by Ken.
	* Builtins/Library/{listutl2,listutl3,objects}.pro:  Merged in
	changes from Ken.

Tue Nov  9 14:06:44 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* Generic/version.h (SysVersionNum):  Now 1.44B.

	* Builtins/blt_is.pro (is_eval/2):  Force instantiation_error
	when attempting to evaluate a variable.

	* Port/SPARC/Makefile.mach (MICSSRC):  Defined.

	* Generic/bmisc.c (pbi_frame_info):  Reversed comparison on
	choice point stack / local stack walk to see if the frame under
	consideration is part of a choice point.  I had this comparison
	wrong.  Also check to make sure that choice pointer (b) is not
	zero.

	* Builtins/blt_io.pro (printf):  Changed all forms of printf
	to take an atom argument as well as a list argument for the
	format list.
	* Builtins/*.pro:  Messages using double quoted strings replaced
	with atoms.  This saves roughly 300 KBytes on the M88k.

	* Generic/wintcode.c (make_writable, make_runable):  Added #ifndef
	for Portable versions.  If Portable is defined, running the code
	does not involve the instruction units cache, only the data cache.
	So the code sections only need to be readable and writable, but
	not executable.

	* Builtins/sio.pro (get_failure/3):  New code for dealing with
	end of file for get_char/1 and get_char/2.
	* tsuite/numio.pro:  Changed order of arguments to open/4 to conform
	to draft standard.

Mon Nov  8 17:33:35 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.43B.

	* Builtins/sio_wt.pro (trigger_event):  Removed trigger_event
	in favor of new error checking mechanisms.

	* Builtins/xconsult.pro (execute_command_or_query/4):  Added
	error catching mechanism so that errors in directives or queries
	will not abort past the consult.
	* Builtins/xconsult.pro (print_error_message/2):  Deleted this
	dead code.
	* Builtins/builtins.pro:  Rearranged builtin loading order so
	that loading of blt_evt is fairly early. This is necessary so that
	the error checking code (which op requires) is loaded.
	* Builtins/sio_rt.pro (op/3):  Changed error checking code
	to use newer error mechanism.  Added support for lists of
	operators.

	* Builtins/sio_rt.pro (check_rt_options/6):  New predicate which
	replaces satisfy_options.  This predicate checks the validity of
	the options list before the read is done.  Only one scan of the
	options list is made for all options.  Structure of read_term/3
	changed somewhat as a consequence.
	* Builtins/sio_rt.pro (read_term/3, read/2): Call
	input_stream_or_alias_ok/2 to do error checking.
	* Builtins/sio_rt.pro (trigger_event):  Removed all calls to
	trigger_event in favor of newer facilities.
	* Generic/bparser.c (C_list_to_string):  Change returned culprit
	from individual culprit to that tail which caused the problem.
	* Builtins/sio_d10.pro (get/2): Implemented.
	* Builtins/blt_msg.pro (prolog_system_error/2):  Added clause
	for dealing with error terms from standard.  Several support
	procedures written as well.
	* Builtins/blt_evt.pro (system_error/1):  New predicate.
	* Builtins/sio.pro (trigger_event):  Finished replacing calls
	to trigger_event with appropriate call to instantiation_error,
	type_error, etc.
	* Builtins/blt_evt.pro (existence_error/3, permission_error/4):
	Extended so that goal can be passed when passing depth back to
	parent is inappropriate.

Fri Nov  5 19:32:14 1993  Kevin A. Buettner

	* Generic/bparser.c (C_list_to_string): unbias TR in order to
	avoid bogus heap overflow problem on m88k.
	* Builtins/sio_d10.pro (skip/2): Implemented.
	* Builtins/sio.pro (Stream_or_alias):  Use this variable name
	instead of Alias_or_stream, Alias_or_Stream, and Stream_or_Alias.
	* Builtins/sio.pro (get_maxdepth/2, set_maxdepth/2, get_line_length/2,
	set_line_length/2, get_depth_computation/2, set_depth_computation/2): 
	Rewritten to use newer error checking facilities.
	* Builtins/sio.pro (trigger_event):  Replaced all calls to 
	trigger_event with appropriate call to instantiation_error,
	type_error, domain_error, permission_error, etc.
	* Builtins/blt_evt.pro (instantiation_error/1, type_error/3,
	domain_error/3):  Extended so that goal can be passed when
	passing the depth back to parent is inappropriate.
	* Builtins/blt_evt.pro (calculation_error/1, database_error/1,
	evaluation_error/1, instantiation_error/1, io_control_error/1,
	io_end_of_file_error/1, io_formatting_error/1, operator_error/1,
	overflow_error/1, range_error/1, syntax_error/1, type_error/1,
	undefined_predicate_error/1, undefined_value_error/1,
	underflow_error/1, zero_divide_error/1, argument_error/1):
	Old module closure code for these commented out.

Thu Nov  4 12:56:30 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.42B.

	* Builtins/xconsult.pro (genssym):  Totally removed.

	* Builtins/blt_evt.pro (char_list_ok/1, var_or_number_ok/1,
	number_ok/1, code_list_ok/1) : New predicates.
	* Builtins/blt_atom.pro (number_chars/2,number_codes/2): 
	New predicate.

	* Builtins/debug{tty,win}.pro:  Removed directive which called
	abolish_list.
	* Builtins/blt_sys.pro:  Use the libhide mechanism to get the
	debugger loaded instead of old mechanisms.  Most of the old
	code deleted ($rload, abolish_list, etc).
	* Builtins/blt_lib.pro: Changed format of all calls to lib_load.
	The filename parameter is now a list of the path components based
	off of value obtained from sys_searchdir.  Therefore all of the
	filenames are now enclosed in a list with 'Library' as the first
	element.  This will permit us to demand load certain of the
	builtin files with the same mechanism.
	* Builtins/blt_sys.pro (lib_hide/3) : Rewritten to deal with
	path list as the second argument.
	* Builtins/blt_sys.pro (lib_load/2) : sys_searchdir value is now
	an atom.  Library filename is complete (does not need anything
	prepended to it).  Delete the library information from hash table
	after we're done with it.
	* Builtins/blt_sys.pro (force_libload_all/_):  Rewritten.
	* Builtins/builtins.pro (load_builtins/1):  sys_searchdir value is
	now an atom.
	* Generic/main.c (assert_sys_searchdir):  Assert a symbol instead of
	a list of character codes.

	* Generic/bmisc.c (pbi_frame_info):  Get mask value from call to 
	w_frame_info since a gc may invalidate arguments pushed onto
	the frame at the time of the call.
	* Generic/wintcode.c (w_frame_info):  Added third argument for
	returning argument mask value.
	* Generic/wintcode.c (clause_start_from_retaddr):  Added second
	argument for returning argument mask value.  Changed all callers.

Wed Nov  3 14:28:51 1993  Kevin A. Buettner

	* Builtins/blt_brk.pro (stack_trace):  New predicate which
	gives stack trace.  Modified menus to accept this new option.

	* Builtins/sio.pro (stream_property0/2):  end_of_stream_property
	only valid when the stream is an input stream.

	* Generic/version.h (SysVersionNum):  Now 1.41B.

	* Builtins/sio.pro (is_input_alias):  New predicate.  Used in
	get_byte/2, get_code/2, get_char/2, peek_code/2, get_token_list/2,
	skip_layout/1, get_number/3, get_line0/3.

	* Generic/loadfile.c (MAGIC): Format is now 1.21.

	* Builtins/sio.pro (is_output_alias):  New predicate.  put_byte/2,
	put_char/2, put_code/2, put_atom/2, put_number/2 now calls this
	instead of output_stream_or_alias_ok.

	* M88k/disassem.c (regnames):  Adjusted ordering to account for
	previous change in ordering of S,T1-T4.

Wed Nov  3 10:59:12 1993  Kevin A. Buettner

	* Changes committed to CVS.

Wed Nov  3  9:30:22 1993  Kevin A. Buettner

	* Builtins/sio.pro (get_char, get_code):  get_char --> get_code
	get_char defined as per draft standard.
	* Builtins/blt_sys.pro:  Changed all occurrence or get_char to
	get_code.
	* Builtins/sio.pro (put_char, put_code):  put_char --> put_code
	put_char defined as per draft standard.
	* Builtins/{blt_io,debugtty,sio_wt}.pro : Changed all occurrences
	of put_char to put_code.

Tue Nov  2 12:04:23 1993  Kevin A. Buettner

	* Builtins/sio.pro:  Totally revamped the alias mechanism and all
	code dealing with or using aliases.  We now use hash table mechanism
	to store aliases.
	* Builtins/sio.pro (next_stream_identifier/2, check_open_options/1,
	initialize_stream/4):  '$stream_identifier'/1 added as an open
	option.
	* Builtins/sio.pro (sio_pckg_init/0):  Rewritten so that calls
	to open/4 set the aliases and stream identifiers.
	* Builtins/sio.pro (get_stream/2,set_stream/2, etc): New access
	predicates created with call to make_hash_table/1.
	* Builtins/sio.pro (next_stream_identifier): Now located in the
	stream hash table instead of its own global variable.


Mon Nov  1 11:59:46 1993  Kevin A. Buettner

	* Builtins/blt_evt.pro (domain_error/3, existence_error/3,
	permission_error/4):  New predicates.
	* Builtins/sio.pro (stream_or_alias_ok/2, input_stream_or_alias_ok/2,
	output_stream_or_alias/2):  New predicates.
	* Builtins/sio.pro (set_input/1, set_output/1):  Use new predicates
	input_stream_or_alias_ok/2 and output_stream_or_alias_ok/2.
	* Builtins/sio.pro (read_write_modes/3):  Replaces qSTREAM_modes/3
	and window_modes/3.
	* Builtins/sio.pro (check_source_sink_and_mode/2, check_mode/2): 
	Was check_open_mode/4. Rewritten to use newer error stuff.
	* Builtins/sio.pro (check_list_options/2): Rewritten to use new
	error handling mechanism.
	* Builtins/sio.pro (check_open_options/1): Used to have four arguments;
	rewritten to use new error handling stuff.
	* Builtins/sio.pro (open/4): Revised to work with newer error stuff.
	Also, the order of arguments three and four are changed.  The
	stream options argument is now last.
	* Builtins/sio_rt.pro (tp_include/3): Changed catch on open so that
	it will fail not matter what the event.
	* Builtins/sio_d10.pro (see/1, tell/1):  Changed order of Stream
	and Options arguments to reflect the current draft standard.  Also
	wrapped a catch around the calls to open to cause failure if something
	goes wrong.
	* Builtins/sio.pro (sio_pckg_init): Changed order of arguments to
	all calls to open/4.
	* Builtins/sio.pro (check_open_stream/4):  Eliminated.
	* Builtins/sio.pro (open_file_stream/4,open_sysVq_stream/4,
	open_ssbq_stream/4, open_socket_stream/4, open_string_stream/4,
	open_atom_stream/4, open_window_stream/4):  Call permission_error
	instead of trigger_event in the error clauses.
	* Builtins/blt_evt.pro (nonvar_ok): New predicate.
	* Builtins/sio.pro (close/1, close/2):  close/1 fixed to conform
	to draft standard. close/2 is new.


Fri Oct 29 17:44:56 1993  Kevin A. Buettner

	* Changes committed to CVS. (SysVersionNum = 1.40B).

Fri Oct 29  9:47:55 1993  Kevin A. Buettner

	* M88k/icode2.c (silicon_filter) :  Removed all ifdefs refering
	to this feature (?).  This stuff was really old and hadn't been
	used in a long time.
	* M88k/icode1.c (OLD):  Removed ifdef referring to this define.
	It had been used in ic_callinfo at the time when we changed the
	format of the gc call info.

	* Generic/index.c (do_indexing):  Set emask value in the index block
	to correspond to the computed emask aggregate.  This value will
	be necessary to determine which stack frame arguments are valid
	when obtaining stack frame info.
	* Generic/bmisc.c (compile.h):  Include this file to get value
	of NAREGS.
	* Generic/bmisc.c (pbi_frame_info):  Added new code for those
	platforms where NAREGS > 0.  On such platforms, we can not
	assume that all stack arguments are valid since the argument
	might never have been placed on the stack.
	* Builtins/sio.pro (check_list_options/2):  Use dmember instead
	of member on last clause.
	* Builtins/sio.pro (get_perms_flag/3):  Moved cut after
	last call decode_ipc_perms as this call might be non-determinate.
	* Generic/bmisc.c (pbi_traildump):  Added SUCCEED at end of
	this function.

	* M88k/mangle.88k:  Rewrote the code for updating HB and the
	HB pointers in the choice point stack to correspond more closely
	to the SPARC and M68k versions.
	* SPARC/mangle.sprc (m_loopmid):  Changed bgu instruction to bcc.
	bgu is branch greater unsigned.  bcc is branch on carry clear which
	is equivalent to branch greater or equal unsigned.
	* M68k/mangle.68k:  Added comment documenting register usage
	prior to hairy HB pointer update loop.

	* Builtins/sio_rt.pro (rt_err_info):  Put the error string into
	a uia (via an atom stream) instead of a list.

	* Generic/version.h (SysVersionNum):  Now 1.40B.

Thu Oct 28  8:20:51 1993  Kevin A. Buettner

	* Builtins/blt_io.pro:  Moved a recent bit of revision history
	to this file (ChangeLog) -- see Wed Aug 25, 1993 entry.
	* Builtins/blt_io.pro: (atom_codes):  Use instead of atom_chars.
	* Builtins/blt_pckg.pro (atom_codes):  Ditto.
	* Builtins/blt_std.pro (atom_codes):  Ditto.
	* Builtins/sio_rt.pro (atom_codes):  Ditto.

	* Builtins/sio.pro (read_upper):  Revised comment regarding
	placement of new clauses.
	* Generic/bsio.c (sio_set_eof):  Fixed erroneous comment
	regarding sio_set_eof.  Also no longer reset the LPOS value.
	This should be done explicitly (if necessary) by the caller.
	* Builtins/sio.pro (read_upper, read_atom):  New clauses
	for dealing with atom streams.  Previous code in read_buffer
	dealing with atom_streams consolidated in to read_atom which
	handles atom streams for both read_upper and read_buffer.
	* Builtins/sio.pro (read_upper, read_string):  New clauses
	for dealing with string streams.  This was previously implemented,
	but quite buggy in that the read_upper code had never been
	written.

	* tsuite/atomread.pro:  New file for testing out reading of
	atom streams.
	* tsuite/stringread.pro:  New file for testing out reading of
	string streams.

	* Builtins/sio.pro (read_upper, read_window, read_buffer):
	New clauses for dealing with window streams.  Also added
	a FIXME comment to move_lines_to_buffer/7.

	* Builtins/blt_msg.pro (prolog_system_error/2):  Pass 
	[quoted(true), maxdepth(9)] as option list to two of the printfs.
	This will cause uncaught throw messages (which have goals in them)
	to be printed more neatly.

	* Generic/butil.c (set_prolog_error):  Attach module name (builtins)
	to goal and wrap the whole thing up in a list for the second
	argument of error/2.

	* Builtins/sio.pro (sio_pckg_init):  Changed the buffering on
	error_stream to line instead of byte.  This will not be a problem
	so long as all of our messages terminate with newline.  If
	this is undesirable, we can explicitly flush the stream.

	* Builtins/blt_msg.pro (error_code) :  Remove tab before
	'Execution aborted.' message.  This message being indented
	is not visually appealing when the line above gets formatted
	by our pretty printer.  Also put throw on its own line.

Wed Oct 27 11:46:36 1993  Kevin A. Buettner

	* Generic/parser.h (N_TOK_CHARS, char_to_tok_map, char_to_tok,
	tok_to_char, is_char_tok):  New stuff for dealing with character
	atoms.
	* Generic/symtab.c (char_to_tokmap):  Declared.
	* Generic/symtab.c (symtab_init):  Initialize char_to_tok_map here.
	* Generic/tokini.h (TK_CHAR_CODE,TK_ATOM_CHARS,TK_ATOM_CODES,
	TK_NUMBER_CHARS,TK_NUMBER_CODES):  New tokens.
	* Generic/bparser.c (pbi_char_code):  New function implementing
	prolog builtin char_code/2.
	* Generic/built.c (pbi_char_code):  Added to the builtin
	initialization array.

	* Generic/wntbl.h (NTBL_CODESIZE):  This constant changed for
	Portable system to 1+4*sizeof(long)/sizeof(Code).  Used to be
	48/sizeof(Code). Changed at Raman's suggestion.

	* Generic/bparser.c (string_to_C_list, C_list_to_string): New
	functions for implementing pbi_atom_chars and pbi_atom_codes.
	The C in these functions standarcs for 'char' or 'code'.  There
	are some supporting enumeration types in this file that go along
	with these functions.
	* Generic/bparser.c (pbi_atom_chars):  #if'd out Scott's version.
	Wrote new version for standard.
	* Generic/bparser.c (pbi_atom_codes):  Implemented for standard;
	similar to Scott's old version of atom_chars.
	* Generic/built.c (pbi_atom_codes):  Added to the initialization
	array.

Tue Oct 26 18:08:06 1993  Kevin A. Buettner

	* M88k/assembly.88k:  Renumbered register assignments for S, T1-T4
	* M88k/domath.88k (MBASE,M1,M2,M3,M4):  Remapped these defines.
	Also cleaned up some comments having explicit references to r5-r9.
	* M88k/icmath.c (MBASE): Defined to be S_REG instead of T1_REG.
	* M88k/machinst.h (T1_REG,T2_REG,T3_REG,T4_REG,S_REG): Renumbered
	these.
	* Generic/compile.h (TSTART, TEND):  TSTART now defined to be 6.
	TEND now defined to be 9.  Was formerly 5 and 8.

	* Builtins/blt_evt.pro (integer_ok/1, var_or_integer_ok/1): New
	predicates.

Tue Oct 26 18:00:00 1993  Kevin A. Buettner

	* Changes committed to cvs.

Tue Oct 26 10:35:34 1993  Kevin A. Buettner

	* Builtins/blt_atom.pro:  New file of atom / constant processing
	predicates.
	* Builtins/builtins.pro (blt_atom):  Load this file.
	* Builtins/blt_evt.pro (type_error/3, instantiation_error/1,
	atom_ok/1, var_or_atom_ok/1):  New predicates.  Also added comment
	indicating that we should phase out our previous error handling
	scheme based on an older draft of the standard.
	* Generic/bparser.c (pbi_sub_atom):  New function which implements
	'$sub_atom'/4.
	* Generic/built.c (pbi_sub_atom):  Added this function to the
	initialization array.

Mon Oct 25 11:12:18 1993  Kevin A. Buettner

	* Builtins/blt_evt.pro (PrologError):  New global variable created
	with make_gv/1.
	* Builtins/blt_evt.pro (prolog_error/3):  New global handler for
	catching prolog errors.
	* Generic/tokini.h (TK_ERROR, TK_INSTANTIATION):  New tokens.
	* Generic/butil.c (set_prolog_error):  New function which will
	set PrologError (a prolog global variable) to a term indicating
	the error that was encountered.

	* M68k/NeXT/mconfig.h (HAVE_TEMPNAM):  #undef this.

	* Generic/wintcode.c (clause_start_from_retaddr):  New function.
	* Generic/wintcode.c (mark_fromretaddr):  Call 
	clause_start_from_retaddr.
	* Generic/wintcode.c (w_frame_info):  New function (which also
	calls clause_start_from_retaddr).  Passed the address of a Prolog
	stack frame, it returns the next frame and the clause block
	associated with the returned frame.
	* Generic/bmisc.c (pbi_frame_info):  New function which implements
	frame_info/2.
	* Generic/built.c (pbi_frame_info):  Add this function to the
	initialization list.
	* Generic/bsystem.c (pbi_forcePrologError): Like pbi_ouch, but
	signals a prolog error.
	* Generic/built.c (pbi_forcePrologError): This function added
	to the initialization list.

Fri Oct 22 14:52:35 1993  Kevin A. Buettner

	* Generic/built.h (PERR_INSTANTIATION, PERR_TYPE, PERR_EXISTENCE,
	PERR_PERMISSION, PERR_REPRESENTATION, PERR_CALCULATION,
	PERR_RESOURCE, PERR_SYSTEM):  New macros for implementing
	error handling of C-defined Prolog builtins.

	* Generic/alssig.h (ALSSIG_ERROR):  New internal signal indicating
	that an error has occurred.

	* Generic/tokini.h (TK_ATOM, TK_BODY, TK_CALLABLE, TK_CHARACTER,
	TK_COMPOUND, TK_CONSTANT, TK_LIST, TK_NUMBER, TK_VARIABLE,
	TK_CHARACTER_CODE_LIST, TK_CHARACTER_LIST, TK_CLOSE_OPTION,
	TK_FLAG_VALUE, TK_IO_MODE, TK_NOT_LESS_THAN_ZERO, TK_OPERATOR_PRIORITY,
	TK_OPERATOR_SPECIFIER, TK_PROLOG_FLAG, TK_READ_OPTION, TK_SOURCE_SINK,
	TK_STREAM_OR_ALIAS, TK_STREAM_OPTION, TK_STREAM_POSITION,
	TK_WRITE_OPTION, TK_OPERATOR, TK_PAST_END_OF_STREAM, TK_PROCEDURE,
	TK_STATIC_PROCEDURE, TK_STREAM, TK_ACCESS_CLAUSE, TK_CREATE, TK_INPUT,
	TK_MODIFY, TK_OPEN, TK_OUTPUT, TK_REPOSITION, TK_CHARACTER_CODE,
	TK_EXCEEDED_MAX_ARITY, TK_FLAG, TK_OVERFLOW, TK_UNDERFLOW,
	TK_ZERO_DIVIDE, TK_UNDEFINED, TK_TYPE_ERROR, TK_DOMAIN_ERROR,
	TK_EXISTENCE_ERROR, TK_PERMISSION_ERROR, TK_REPRESENTATION_ERROR,
	TK_CALCULATION_ERROR, TK_RESOURCE_ERROR, TK_SYNTAX_ERROR,
	TK_SYSTEM_ERROR):  New tokens.

	* Builtins/blt_evt.pro (prolog_error):  New signal name to match
	ALSSIG_ERROR.

	* Generic/built.c (atom_length):  Added this builtin to the
	initialization list.

	* Generic/butil.c (get_gv_number):  New function which calls prolog
	to get global variable number associated with a particular name.

	* Builtins/builtins.pro (gv_number/2, gv_number/3): gv_number/2
	is a module closure defined in terms of gv_number/3.  gv_number/3
	gets the internal global variable number associated with a 
	particular global variable created with make_gv/1.

Thu Oct 21 18:13:43 1993  Kevin A. Buettner

	* Changes committed to CVS.

	* utilities/coff-mics.c (main): Removed debugging printf of symbol.
	* utilities/elf-mics.c (main): Removed debugging printf concerning
	als_section.

Thu Oct 21 10:58:14 1993  Kevin A. Buettner
	
	* Generic/tokini.h (TK_ATOM_LENGTH):  New token.
	* Generic/bparser.c (pbi_atom_length):  New function implementing
	atom_length/2 in the standard.
	* Generic/built.h (SUCCEED):  Define to return 1 instead of
	FOREIGN_SUCCEED.  FOREIGN_SUCCEED removed since not defined anywhere
	else.
	* Generic/built.h (FAIL):  Define to return 0 instead of FOREIGN_FAIL.
	FOREIGN_FAIL removed.

	* Builtins/sio.pro (stream_blocking):  Fixed typo which defined
	set_stream_blocking twice, but stream_blocking not at all.
	* Builtins/sio_rt.pro (attach_fullstop):  New stream option used
	for reading a term in which does not have a full stop.

	* Builtins/blt_io.pro (buf_read/3, old_bufread/2):  Changed to use
	attach_fullstop option with read_term.  New flag global variable
	'_eof_acceptable_as_fullstop' checked in rt_fullstop/1 and set
	in read_term/3 when attach_fullstop(true) is specified in the
	options list.  '_eof_acceptable_as_fullstop' reset after successful
	read.

	* Builtins/debugtty.pro (dbg_notrace/0):  Used to be notrace.
	All occurrences of notrace changed to dbg_notrace in this file.
	* Builtins/blt_sys.pro (dbg_notrace/0):  Used to be notrace.
	All occurrences of notrace changed to dbg_notrace in this file.
	* Builtins/blt_sys.pro (notrace/0):  New predicate; defined to shut
	off tracing (but spying is left on).
	* Builtins/blt_sys.pro (DebugInterrupt):  New prolog global
	variable.  Accessed via getDebugInterrupt/1 and setDebugInterrupt/1.
	* Builtins/blt_sys.pro ({get,set}_debugging_state/2):  Modified
	to also get the state of DebugInterrupt.
	* Builtins/blt_sys.pro (shell2/4):  Set PrologInterrupt to debug_off
	after doing a shell query to stop the debugger from running
	inadvertantly.
	* Builtins/blt_sys.pro (do_shell_query/5):  Set PrologInterrupt
	to the value of DebugInterrupt prior to calling do_shell_query2/1.

	* Generic/version.h (SysVersionNum):  Now 1.39B.

Wed Oct 20 11:45:28 1993  Kevin A. Buettner

	* Builtins/blt_term.pro:  Removed old commented out code which had
	been moved to the library file strings.pro.
	* Builtins/blt_term.pro ('$uia_poke'/4):  Define in terms of
	'$uia_poke'/5.  $uia_poke/4 used to be defined in bparser.c.

	* Generic/bparser.c (pbi_uia_poke):  Modified to take five arguments
	instead of four.  The new (last) argument is the offset into the
	symbol or uia passed in as the fourth argument.
	* Generic/built.c (pbi_uia_poke):  Now takes 5 args instead of 4.

	* Builtins/sio.pro: Removed references to offsetted_copy.
	* Builtins/sio.pro (open_atom_stream/4,read_buffer/2):  Added
	code to implement readable atom streams.

Tue Oct 19 16:50:23 1993  Kevin A. Buettner

	* Builtins/blt_sys.pro (shell2/4):  Restore the state of the
	debugger prior to running do_shell_query if the surrounding
	catch catches an exception.  This machinery is still not totally
	satisfactory in that if a spy point is activated and we step
	through to the end (or fail out), we are still in trace mode.
	But at least an abort or other exceptional condition does the
	right thing.

	* Builtins/sio.pro (check_open_mode/4):  Added a clause for
	atom strings.
	* Builtins/sio.pro (open_atom_stream/4): This was just
	open_string_stream renamed.  Changed to work for atoms
	instead.
	* Builtins/sio.pro (write_buffer/2): Two clauses added to
	deal with atom streams.
	* Builtins/sio.pro (close_stream/2): Two clauses added to
	deal with atom streams.

Mon Oct 18  9:36:05 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Now 1.38B.

	* M88k/domath.88k (pn_int):  Fixed typo in comment.

	* Builtins/debugtty.pro (debugging/0, list_spypoints/0): New
	procedures for getting the status of the debugger/spypoints.

	* Builtins/sio_rt.pro:  Removed superfluous comments regarding
	code which no longer exists.  Also removed some other commented
	out code.

	* Builtins/sio_rt.pro (rt_err/8):  In dec10 case, mangle the
	variable table to be [] before reattempting the read.  This
	fixes the problem observed in the prolog shell where a syntactically
	incorrect term would attempt to be read; a different term would
	be entered in place of the term with the problem, yet any variables
	scanned up the error in the first term would appear in the list
	of answer substitutions.

	* Builtins/debugtty.pro (trace/2):  Now call catch/3 in order to
	catch any kind of thrown condition.  Reset the PrologInterrupt
	variable when a throw is caught.  Beware of recoding this with
	just one procedure with the call to dogoal, etc as goals within
	the catch.  I tried this and we end up debugging the details of
	comma, semicolon, etc.

	* M88k/domath.88k (MBASE,M1,M2,M3,M4):  New preprocessor defines
	which will initially map to the following registers: MBASE --> T1,
	M1 --> T2, M2 --> T3, M3 --> T4, M4 --> S.  This mapping will allow
	us to have symbolic names internal to the math code for these
	temporary/floating point regs.  Note that M1 and M3 will be in even
	regs.  It will be essential that M1,M2 and M3,M4 be consecutive 
	registers and that M1 and M3 be even.  The mapping prior to my
	changes of 10-15-93 was (in effect): MBASE --> S, M1 --> T1, ...
	M4 --> T4.  In order to make these changes more quickly and without
	error, I am reverting to domath.88k as it existed prior to my
	changes of 10-15.

Fri Oct 15  9:13:06 1993  Kevin A. Buettner

	* utilities/aout-mics.c (main):  Align the saved state to file
	offsets which are page aligned for use with mmap.

	* wintcode.c:  Removed old (ifdef'd out) code for memory allocation.

	* wintcode.c:  Use mprotect code for all systems with mmap; not
	just m88k's running svr4.

	* utilities/elf-mics.c (main):  Call elf32_getshdr to get the
	section header when the als_data section is found.  This fixes
	the bug that prevented being able to run a saved image from an
	already saved image.

	* M88k/domath.88k:  Reformatted comments so that they don't 
	wrap over 80 characters.

	* Builtins/builtins.pro (assertz/2):  Call module closure so that
	it is defined in terms of $assertz3.  assertz/2 was not working.

	* Generic/lforeign.c (Load):  Moved code from MergeImage into this
	function.  MergeImage no longer exists.  Much of the reason that
	this code is so hard to understand is that the functions are
	so short and that code which logically belongs together is uselessly
	split off into a function which is only called from one place.  The
	code in this file can still stand considerable improvement.

	* Generic/fatal.{c,h} (FE_SS_FMALLOC):  New fatal error code
	for problems with ss_fmalloc_start and ss_fmalloc.

	* Generic/mem.c (ss_fmalloc_start, ss_fmalloc):  New functions
	for allocating memory for the dynamic foreign interface.

	* Generic/lforeign.c (TraverseSectionsImage):  Merged
	ReadSectionHeader into this function.  Rewritten to use
	ss_fmalloc instead of sbrk.
	* Generic/lforeign.c (sbrk):  Replaced all calls to sbrk with
	calls to either ss_fmalloc_start or ss_fmalloc.

	* M88k/domath.88k: T3 -> T2, T4 -> T3, tmp3 -> A3, tmp4 -> T1.
	This is so double operations start in even-numbered register
	pairs. (A3=r4, T1=r5, T2=r6, T3=r7, T4=r8).  T4 is no longer
	referenced and could be used for a temporary.

Thu Oct 14 16:09:13 1993  Kevin A. Buettner

	* utilities/elf-mics.c (main):  Force the data in the als_data
	segment to be page aligned in the file.  This will permit us
	to use mmap with the data in the file.

Thu Oct 14 15:35:50 1993  Kevin A. Buettner

	* Changes committed to cvs.

Thu Oct 14  8:19:37 1993  Kevin A. Buettner

	* Generic/main.c (PI_prolog_init):  Assert sys_searchdir only when
	not loading from a saved state.  This will permit libraries to be
	loaded even if the image is moved -- unless it is moved to a
	different system without these libraries.

	* Generic/bos.c (pbi_tmpnam):  New function.  This actually calls
	tmpname where available.
	* Generic/built.c (pbi_tmpnam):  Added to initialization array.

	* Generic/defs.h (HAVE_TEMPNAM): Define this to be the default since
	most systems have it.  Really lame platforms which don't have tempnam
	will have to undef HAVE_TEMPNAM in their mconfig.h files.

	* Generic/bos.c (pbi_protect_bottom_stack_page):  Test for HAVE_MMAP
	instead of specific operating systems.  Actually, we should probably
	check for some other feature which subsumes all OS's which have
	either mmap or other similar facilities.  I'll fix this when I
	add similar features for the NeXT.

	* Generic/bos.c (pbi_get_image_dir_and_name):  New builtin.
	* Generic/built.c (pbi_get_image_dir_and_name):  Added to the
	initialization array.

	* Builtins/blt_pckg.pro (save_image/1):  New predicate which
	saves the code state to a temporary file and then runs als-mics
	to create a new image.

	* M88k/Mot/Makefile.mach (MICSSRC):  New variable; defined to
	be coff-mics.c.

	* Generic/version.h (SysVersionNum):  Now 1.37B.

	* bin/cpfile:  Double quoted arguments to test so that case where
	cpfile is called with no args will work ok.

	* utilities/aout-mics.c:  New file.

	* SPARC/Sun/Makefile.mach (MICSSRC):  Defined to be aout-mics.c.

Wed Oct 13 11:21:01 1993  Kevin A. Buettner

	* Builtins/blt_io.pro (load3/4):  When loading an obp file,
	call load4_checkstatus with return status to determine reason
	the status of obp_load.  Also pass in the source pathname in
	order to remake the obp file if it is in a bad format.
	* Builtins/blt_io.pro (load/4):  Set the CCD back to its old
	value when load2/3 fails.  Propogate failure.

	* Makefile.gen (gcopy): Now copy MICSSRC file also.
	* M88k/Mot-SVR4/Makefile.mach (MICSSRC):  New variable; defined
	to be elf-mics.c.
	* M88k/Mot-SVR4/Makefile.spec (MICSLIBS): New variable; defined
	to be -lelf.
	* Makefile.head (MICSIMAGE): Defined to be als-mics
	* Makefile.tail (MICSIMAGE): Defined this target.

	* utilities/{coff,elf}-cics.c:  New files.  These files combine
	an image and code state into a new image.

Tue Oct 12 13:01:22 1993  Kevin A. Buettner

	* Changes committed to cvs.
	
Mon Oct 11 16:02:38 1993  Kevin A. Buettner

	* Generic/main.c (saved_state_image_offset):  New variable. This
	variable is the file offset in the image of the saved state if
	one exists.  If it doesn't exist, it will be zero.
	* Generic/main.c (PI_prolog_init):  Call als_mem_init with name
	of image path and saved_state_image_offset if this variable is
	non-zero.  Also als_mem_init is not called after whereami is
	called.  We need to call whereami first in order to get the image
	path.

	* Generic/bmisc.c (hashN): In WTP_DOUBLE case -- take address of
	dbl in order to access components as longs.  Also changed type
	of hashN to unsigned long instead of long.

Fri Oct  8 11:26:35 1993  Kevin A. Buettner

	* Builtins/builtins.pro (blt_pckg.pro):  Load this file by default
	no matter what the system.  Some saved state predicates are here.
	We may want to reorganize this so that the save_state/1 is in some
	other file.

	* Generic/mem.c (als_mem_init, ss_restore_state):  Added code
	to test for integrity match between image and saved state.

	* Generic/fatal.h (FE_SS_INTEGRITY, FE_SS_OPENERR): New fatal
	errors.
	* Generic/fatal.c (FE_SS_INTEGRITY, FE_SS_OPENERR): Ditto.

	* Generic/arith.c (SC_CLK_TCK):  See if this is defined instead
	of HAVE_UNISTD_H in case if the system has a lame unistd.h file.

	* M68k/Mot/mconfig.h:  Define memmove in terms of bcopy.  bcopy
	is undocumented, but at least it exists.  memcpy can not be
	used because it might not handle overlapping regions properly.

Fri Oct  8  8:20:49 1993  Kevin A. Buettner

	* Generic/built.c (builtin_init):  Added new static variable 
	builtins_initialized to function.  If this var is zero, then
	we actually perform initializations, otherwise do nothing. If
	initialization is actually performed, builtins_initialized is
	set to non-zero value.  Address of builtins_initialized is also
	registered with the saved state mechanism.

	* Generic/wintcode.c (interrupt_init): Deleted from this file.
	* Generic/built.c (time_cut_interrupt_init):  Renamed from
	time_cut_init.  This function now handles setting the interrupt
	entry point in addition to what it previously did when named
	time_cut_init.
	* Generic/main.c (PI_prolog_init):  Call to time_cut_init changed
	to time_cut_interrupt_init.

	* Generic/main.c (saved_state_loaded):  New var in PI_prolog_init
	set by return value of als_mem_init which indicates if a saved
	state was loaded or not.  This value used at various points to
	determine if a particular initialization (such as the loading
	of the builtins) should be performed or not.

	* Builtins/blt_pckg.pro (save_state/1):  New predicate which
	creates a saved (code) state.

	* Generic/version.h (SysVersionNum):  Now 1.36B.

	* Changes committed to cvs at 10:32:49.

Thu Oct  7 12:20:30 1993  Kevin A. Buettner

	* Generic/{fatal.h, fatal.c}: New fatal errors FE_CODESPACE_INIT,
	FE_MODULE_INIT, FE_SYMTAB_INIT, and FE_SS_MAXGLOBALS.

	* Generic/symtab.c (symtab_init): Dynamically allocate the initial
	token table instead of using statically allocated one.  Call
	ss_register_global for each global var in this module.  Also call
	ss_malloc instead of malloc in other code in this module.  Perform
	initializations only if toktable is zero (uninitialized).

	* Generic/mem.c (ss_save_state): New function for writing the
	state to a file.

Wed Oct  6  9:12:04 1993  Kevin A. Buettner

	* Generic/{fatal.h, fatal.c} (FE_ALS_MEM_INIT): New fatal error.

	* Generic/mem.c (als_mem_init, ss_malloc, ss_pmalloc,
	ss_register_global): New functions.
	* Generic/defs.h : Declared als_mem_init, ss_malloc, ss_pmalloc,
	ss_register_global.

	* Generic/main.c (PI_prolog_init): Call als_mem_init.

	* Generic/wintcode.c (code_alloc):  Rewritten to call ss_malloc
	and ss_pmalloc to allocate memory.  Dynamically allocated structure
	(struct codeblock *) now used to keep track of code blocks for
	makerunable and makewritable.
	* Generic/wintcode.c (w_initcode):  Call ss_register_global
	to register the necessary global variables in this file.  Added
	conditional to only do initializations if w_freeptr is zero.
	This indicates that no initializations have been done.  This
	will be important once save files are loaded.
	* Generic/wintcode.c (alloc_name_entry):  Moved statics entbase
	and entptr out of function and renamed to ane_entbase and ane_entptr.
	ss_register_global now called on these in w_initcode.

	* Generic/module.c (module_init):  Rewritten so that statically
	allocated tables are know allocated dynamically and initialized
	in module_init.  Added return types to functions in this module.


Tue Oct  5  9:27:21 1993  Kevin A. Buettner

	* Generic/wintcode.h:  Revised comment before ntbl_entry.
	* Generic/wintcode.c (w_initcode):  Dynamically allocate
	w_nametable and the header block.

	* Generic/defs.h (HAVE_MMAP):  Define this if we think OS has
	mmap (2) and NO_MMAP is not defined.  HAVE_MMAP may also be
	directly defined in OS specific mconfig.h.

Mon Oct  4 17:19:51 1993  Kevin A. Buettner

	* Generic/loadfile.c:  Cleaned up OS dependent includes at beginning
	of file.

Mon Oct  4 13:52:22 1993  Kevin A. Buettner

	* Port/icode2.c (ic_install_switch_on_term):  Merged in Raman's
	changes to make this file work with Generic version of indexer.

	* Generic/fsunix.c (pgetpid):  New function implementing getpid/1
	from Prolog.

	* Generic/{fsdos.c,fsmac.c} (pgetpid):  New function which just
	returns zero for lame OS's without processes.  Somebody else
	can do pgetpid for fsvms.c.

	* Generic/version.h (SysVersionNum):  Now 1.35B.

Mon Oct  4 11:10:09 1993  Kevin A. Buettner

	* M88k/icode2.c (ic_install_switch_on_term):  Removed very old
	version which was ifdef'd out.
	* Generic/chpt.h (TBENTSIZE,TBOVERHEAD):  Added these for the
	Portable system.  Also minor reorganization to the file.  All
	defines for a particular system are now grouped together.
	* Port/icode2.c (ic_install_try,ic_install_retry,ic_install_trust,
	ic_install_tree_overhead):  New functions for use with generic
	version of indexer.

Mon Oct  4  9:59:08 1993  Kevin A. Buettner

	* Generic/index.c:  New file.  This is Raman's cleanup of one of the
	more Generic system specific versions of index.c.  Raman's version
	had to be changed to use the new include files.
	* Generic/chpt.h (_CHPT_H_INCLUDED_):  Added ifndef to prevent
	multiple inclusions.
	* Generic/defs.h (_DEFS_H_INCLUDED_):  ditto.
	* Generic/winter.h (_WINTER_H_INCLUDED_):  ditto.
	* Generic/alssig.h (_ALSSIG_H_INCLUDED_):  ditto.
	* Generic/fatal.h (_FATAL_H_INCLUDED_):  ditto.

	* Generic/Makefile (LIBCFILES): Reorganized this list and added
	index to it.
	* {I386,M68k,M88k,Port,SPARC,VAX}/Makefile.arch (ACFILES):
	Removed index from this list.

Fri Oct  1 15:30:44 1993  Kevin A. Buettner

	* Generic/bparser.c (get_number):  Added function type.
	* Generic/arith.c (als_random):  Use drandom if platform provides way
	to get random numbers in the range [0,1).  do_is changed to
	call als_random.
	* Generic/arith.c (pbi_srandom):  New function implementing predicate
	for setting the seed.
	* Generic/built.c (pbi_srandom):  Added to initialization array.

Thu Sep 30 15:55:35 1993  Kevin A. Buettner

	* Port/wam.c (W_THROW,W_CATCH22):  Merged in Raman's changes to
	these instrs.
	* Port/{wamops0.h,wam.c} (W_ABORT):  This instr removed.

	* Port/HPUX/Makefile.spec (CFLAGS):  Defined to be
	-O -fno-delayed-branch until gcc gets fixed.

Thu Sep 30  9:39:00 1993  Kevin A. Buettner

	* Generic/defs.h (HAVE_UNISTD_H,HAVE_TIMES):  Defined these to
	indicate that /usr/include/unistd.h exists by default and the
	system supports the times function.
	* Generic/arith.c (clock_ticks_per_second):  New variable; it
	is initialized in init_time and used in als_cputime.  als_cputime
	also modified to check for HAVE_TIMES feature of specific
	machines / operating systems.

	* M68k/{Mac,Atari}/mconfig.h (HAVE_UNISTD_H,HAVE_TIMES,HAVE_STDLIB_H):
	undef'd these.

	* Generic/arith.c: Include unistd.h if HAVE_UNISTD_H is defined.

	* {Port,M68k}/NeXT/mconfig.h (HAVE_UNISTD_H): undef this.


Tue Sep 28 10:39:49 1993  Kevin A. Buettner

	* Port/wam.c (wam_init):  Declared this function to return void.
	* Port/wam.c (run_wam):  Added parens in an if statement performing
	assignment to make it clear that the assignment is what is wanted.
	* Generic/bsio.c (skip_layout): Moved register to beginning of
	declaration of p and lim.
	* Generic/parser.c (push_rator):  Declared the parameters of this
	function.

Mon Sep 27  8:45:38 1993  Kevin A. Buettner

	* SPARC/functor.sprc (wm_mangle):  Permit third arg to mangle to
	be a variable.  If third arg is variable and lives on local
	stack, bind to new heap var and trail if necessary.

	* Port/HPUX: New directory.  New files in this directory are
	mconfig.h, Makefile.spec, and Makefile.mach.

	* Generic/gc.c (gc): Return 1 at end of this function in order
	to succeed when this is called as a builtin.

	* Changes committed to CVS.

Fri Sep 24 11:10:48 1993  Kevin A. Buettner

	* Generic/wamops0.h (W_U_VAR_SP_m1_p2):  New instr.
	* Port/wam.c (W_U_VAR_SP_m1_p2):  Implement new instr.
	* Port/icode1.c (ic_u_var):  Implement new instr.

	* Changes committed to CVS.

Thu Sep 23 14:11:11 1993  Kevin A. Buettner

	* Generic/wamops0.h (W_G_STRUCT_SP, W_G_STRUCT_E):  New virtual
	machine instructions.  Removed more generic W_G_STRUCTURE.
	* Port/wam.c (W_G_STRUCT_SP, W_G_STRUCT_E):  Implemented these.
	* Port/icode1.c (ic_g_structure):  Emit new instrs instead of
	more general W_G_STRUCTURE.
	* Port/disassem.c (printf): Define to be PI_printf.

Thu Sep 23  9:57:27 1993  Kevin A. Buettner

	* Port/wam.c (W_G_LIST_*): Rewritten to be more efficient.
	* Generic/winter.h (WM_SAFETY_REG_HOOK):  Added in to experiment
	with GNU's mechanism for putting a global variable in a register.
	* Generic/winter.c (WM_SAFETY_REG_HOOK):  If defined, do not declare
	wm_safety as normal.

Wed Sep 22 17:00:00 1993  Kevin A. Buettner
	
	* Generic/wamops0.h:  Many new instructions.
	* Port/wam.c:  Optimizations and implementation of new instrs.
	* Port/icode{1,2}.c:  Code generator changes to use new instrs.

Tue Sep 21 14:07:35 1993  Kevin A. Buettner

	* Generic/fsunix.c (S_ISLNK, S_ISSOCK): Only define these if
	corresponding S_IFLNK and S_IFSOCK are defined.
	* Port/SPARC/Makefile.mach (MHFILES): Changed config to mconfig on
	this list.
	* Port/SPARC/mconfig.h: New file.

Tue Sep 21  9:13:17 1993  Kevin A. Buettner

	* Generic/bsio.c: Added (char *) cast in calls to free.
	* Port/wam.c (run_wam):  Added instruction profiling machinery.  New
	functions init_iprofile and dump_iprofile also defined.
	* Generic/compile.h:  All defines of HREG removed as they were unused.
	* Port/icode1.c  (sp_disp): New static variable to keep track of
	displacement from where stack pointer really is to where the compiler
	thinks it is.  A lot of code was changed to use this variable.  This
	addition avoids emitting W_ADDTO_SP as much a possible.

Mon Sep 20 16:32:21 1993  Kevin A. Buettner

	* Generic/parser.h (struct tkentry):  Changed type of tkname field
	from char to uchar.  Changed all callers of TOKNAME to match. 
	* Generic/types.h (uchar): typedef'd this to be unsigned char.
	* Generic/defs.h:  Added include of stdlib.h (for those machines
	which have it).  Otherwise, malloc, realloc, etc are declared.
	* Generic/*.c:  Removed declarations of malloc from files which
	contained them.

Mon Sep 20 13:12:43 1993  Kevin A. Buettner

	* M68k/*.c:  Include defs.h now instead of config.h.
	* M68k/aconfig.h: New file.
	* M68k/Makefile.arch (AHFILES): Added aconfig to this list.
	* M68k/{Amiga,Atari,Mac,Mot,NeXT,Sun}/mconfig.h: New file
	* M68k/{Amiga,Atari,Mac,Mot,NeXT,Sun}/Makefile.mach (MHFILES): 
	Replaced config with mconfig on this list.
	* M88k/assembly.88k (aconfig.h):  Include instead of config.h.
	* M68k/assembly.68k: Include aconfig.h and mconfig.h instead of
	config.h.
	* Generic/types.h (ALS_TYPES_INCLUDED):  Added to avoid multiple
	inclusions of types.h.

Mon Sep 20 10:58:12 1993  Kevin A. Buettner

	* SPARC/*.c: Include defs.h now instead of config.h.
	* SPARC/aconfig.h: New file.
	* SPARC/Sun/mconfig.h: New file.
	* SPARC/Makefile.arch (AHFILES): Replaced config with aconfig on this
	list.
	* SPARC/Sun/Makefile.mach (MHFILES): Added config to this list.
	* Generic/fsunix.c (getDirEntries): Perform free(regexComp) before
	failure.
	* Generic/version.h (SysVersionNum):  Now 1.34B.

Mon Sep 20 10:24:03 1993  Kevin A. Buettner

	* Port/*.c: Include defs.h now instead of config.h.
	* Generic/bsio.c:  Call memmove instead of bcopy.
	* Generic/fsunix.c:  Removed SunOS ifdef defining memmove to be bcopy.
	* Generic/defs.h:  Added SunOS ifdef defining memmove to be bcopy.
	* Port/NeXT/mconfig.h: New file.
	* Port/NeXT/Makefile.mach (MHFILES): replaced config with mconfig on
	this list.

Fri Sep 17 12:00:00 1993  Kevin A. Buettner

	* Generic/defs.h:  New file.  This file will largely replace config.h.
	* Generic/*.{h,c}: als_m88k, als_m68k, etc. changed to arch_88k,
	arch_m68k, etc.  Also BIG_STRUCT --> BigStruct, AUTOINDEXING --> 
	AutoIndexing.
	* M88k/aconfig.h: New file.
	* M88k/{Aviion,Mot,Mot-SVR4}/mconfig.h: New files.
	* M88k/Makefile.arch (AHFILES): Added aconfig.h to this list.
	* M88k/{Aviion,Mot,Mot-SVR4}/Makefile.mach (MHFILES): Added mconfig to
	this list.
	* Port/aconfig.h: New file.
	* Port/Makefile.arch (AHFILES): Added aconfig.h to this list.
	* Port/Mot/mconfig.h: New file.
	* Port/Mot/Makefile.mach (MHFILES): Added mconfig.h to this list.
	* Generic/{fsdos,fsmac}.c: comment reformatting.

Fri Sep 17 11:50:00 1993  Kevin A. Buettner
	
	* Changes committed.

Fri Sep 17 09:36:23 1993  Kevin A. Buettner

	* Generic/wintcode.h (NTBL_SIZE):  Revised comment.
	* Generic/wintcode.c (w_getnamestring):  Rewritten to be bomb-proof
	and more informative, but also slower.  This should not be a problem
	since this routine is only used in disassembly which is used primarily
	for debugging the compiler or code generator.
	* Generic/gc.c: Made certain functions static.
	* Port/gc.c: Removed.
	* Makefile.spec (ACFILES):  Removed gc from this list.

Wed Sep 15 13:09:09 1993  Kevin A. Buettner

	* Port/icode2.c (ic_install_decr_icount):  New function.
	* Port/wam.c (W_DECR_ICOUNT):  New case in switch
	* Generic/wamops0.h: W_DECR_ICOUNT:  New abstract machine opcode.
	* Port/{Atari,Mot,SPARC,Sun,VAX}/config.h:  Defined AUTOINDEXING.
	* createmake:  Slight modification to an if statement that some
	shells were bombing on.

Wed Sep 15 09:59:00 1993  Kevin A. Buettner

	* Port/printwam.h: removed; incorporated into disassem.c since this
	was the only file which used it.
	* Generic/wamops0.h:  New file created out of printwam.h.  This is
	the now the central repository for abstract machine opcodes.
	* Generic/wamops.h: Removed #defines; include wamops0.h to set up
	new enumerated type to replace the #defines.
	* Port/icode2.c (ic_install_libbreak):  Install jump to exec_entry
	instead of overflow.
	* Generic/Makefile (HFILES):  added wamops.h to this list
	* Generic/main.c (MSWins):  Includes depending on MSWins removed.
	* Generic/fsunix.c (regex):  Declare extern with proper type to get
	rid of compiler warnings.
	* Port/disassem.c:  Changes to deal with wamops0.h instead of
	printwam.h.

Tue Sep 14 16:51:00 1993  Kevin A. Buettner

	* tests/nrev.pro (nrev/2):  We had two seperate procedures named
	nrev/2.  One of them defined the two clause benchmark that we
	all know and love; the other defined the procedure which runs the
	test.  Latter one renamed to nrev0.
	* Generic/bmisc.c (M_FIRSTUIAWORD):  Added cast to (char *) before
	all occurrences.
	* Generic/fsunix.c (SysV):  Test for this feature instead of 
	MOTO_BCS, SCO_UNIX, DELTA68k, etc.
	* Generic/fsunix.c (regcmp):  Declare extern with proper type to get
	rid of compiler warnings.
	* Generic/lforeign.c (load_object):  Remove ATF file immediately.
	Customer (Craig Thornley) does not want this feature.  This will
	mean that it is not possible to load two foreign files independently
	which depend on one another.  Any library routines that the two
	loads have in common will also not be shared.

Mon Sep 13 16:50:00 1993  Kevin A. Buettner

	* Generic/lforeign.c (GetSectionStart):  New function.
	* Generic/lforeign.c (CreateEnvironment):  Call GetSectionStart
	instead of FindSymbolValue to get values for start of .text and
	.data sections.
	* Generic/lforeign.c (ReadSectionHead): Added test to make sure
	that section should be mapped to memory.  We were picking up the
	.comment section otherwise.

Fri Sep 10 16:08:37 1993  Kevin A. Buettner

	* {M68k,SPARC,Port,I386,VAX}/mtypes.h (ESCAPE_ARITY):  Defined to be
	256.  M88k version is 1023.

Thu Sep  9 14:30:00 1993  Kevin A. Buettner

	* M88k/mangle.88k (dereference of A3):  Added code to permit mangling
	structures to variables at request of Alan Newman.  If it works here,
	we need to change other implementations.  Probably should change global
	variable behavior as well.

	* Generic/version.h (SysVersionNum):  Bumped to 1.33B.

Tue Sep  7 17:17:20 1993  Kevin A. Buettner

	* Generic/fsunix.c (canonicalize_pathname):  PI_allocuia was allocating
	one too many characters.  This would lead to situations on the M88k
	where two otherwise identical uias would not unify.  The unifier
	has a fence length check.  If the two fences are not equal, then
	the uias are not equal.  We might want to change this.

Tue Sep  7 09:00:00 1993  Kevin A. Buettner

	* Generic/version.h (SysVersionNum):  Bumped to 1.32B for all versions.
	Removed platform specific version information.

Fri Sep  3 16:26:00 1993  Kevin A. Buettner

	* Builtins/blt_std.pro ($getenv/2):  New procedure for backwards
	compatibilty.
	* Generic/built.c (pbi_getenv):  "$getenv" --> "getenv"
	* Generic/bos.c (pbi_system):  Allow first argument to be a prolog
	string (list of small integers).

Fri Sep  3 11:23:00 1993  Kevin A. Buettner

	* ChangeLog:  New file.  Based upon format used in GNU software.

	* bmeta.c, gc.c, winter.c (ESCAPE_ARITY):  Use this macro in place
	of the constant 255 in places where we are checking for a big
	structure.

	* M88k/{arg,compare,domath,functor,ident,unify,mangle}.88k :
	Incorporated Scott Medeiros' big structure handling code.

Wed Sep  1 16:00:00 1993  Kevin A. Buettner

	* M88k/mangle.88k (_msafe):  Increment gv_setcnt.

Wed Aug 25 16:00:00 1993  Kevin A. Buettner

	* Builtins/blt_io.pro (atom_chars):  Use instead of name.
 	* Builtins/blt_io.pro (canonicalize_pathname) Use instead of
	chdir / getcwd.


