Microsoft Win32 x86 ALS Prolog Build Instructions
=================================================
Author: Chuck Houpt Date: 25-June-1996

These instructions assume that the ALS Prolog source directory exists, and all of
its generated files are up to date (for example: generated makefiles, headers,
etc).  The ALS Prolog source directory is refered to as $SRCDIR, %SRCDIR% or
{blddir} in this document.

Build Materials:
----------------

- Macintosh (68k or PowerPC) with at least 15 MB of available memory
and at least 150 MB of available disk space.

- x86 Windows95 or WindowsNT machine with at least X MB of memory and
at least Y MB of available disk space.

- Unix system.

- Metrowerk's Code Warrior Gold 8 with the following options and
modifications:
    - Install with at least this option: Metrowerks x86 C/C++ Compiler
      and the Other Metrowerks Tools folder (for the Metrowerks Standard Library).
    - ALS modifications to the Metrowerks Standard Library.
    - ALS modifications to the Metrowerks C Runtime Library.
    - 
- Software Security Inc.'s UniKey Library
	- Put a "UniKey Library" folder with ssicm32n.lib and ssi_cw32.h in
	  the Win32/x86 Support folder.

Build Instructions:
-------------------

A note of access paths:

The Metrowerks projects will need to have their access paths adjusted if 
the name of the ALS Prolog source directory has changed.

To change the access paths for a project, select "Preferences..." from
the Edit menu to open the preferences dialog.  In the preferences dialog,
click on the access paths icon, and to see the current paths.

Only the User paths that reference the ALS Prolog source tree will need
adjusting.  To change a path, click-select it and press the "Change"
button.  Use the standard file dialog box to navigate to the correct
directory.

A note on DOS batch files:

All the DOS batch files assume that the environment variable %ALSP_SRC%
is set to the ALS Prolog source directory. Execute the following command
before running any of the batch files:

set ALSP_SRC=x:\yyyyy\zzzz

Build Steps:
------------

1. From Unix, run the shell script bd_mswin32 to create the build
directory ($BLDDIR):

	$SRCDIR/bin/bd_mswin32 $SRCDIR $BLDDIR
	
2. On the Mac, decode and extract the project files using Stuffit
Expander.  The following projects need expanding:

	{blddir}bld-port:alspro_lib.prj.sit.hqx
	{blddir}bld-port:alspro_b.prj.sit.hqx
	{blddir}bld-port:alspro_dll.prj.sit.hqx
	{blddir}bld-port:testdll.x86.prj.sit.hqx

	{blddir}bld-port:demo_alspro_lib.prj.sit.hqx
	{blddir}bld-port:demo_alspro_b.prj.sit.hqx
	{blddir}bld-port:demo_alspro_dll.prj.sit.hqx
	{blddir}bld-port:demo_testdll.x86.prj.sit.hqx
	
	{blddir}bld-wins:mswin32:mswin32intf_lib.prj.sit.hqx
	{blddir}bld-wins:mswin32:alspro_mswin320.prj.sit.hqx
	{blddir}bld-wins:mswin32:demo_alspro_mswin320.prj.sit.hqx

3. On the Mac, build the portable libriaries and executables using the
{srcdir}bin:Build_Port_MSWin32 AppleScript. Open the script with the
Script Editor and adjust the BUILDPATH to point to the build directory and
run the script.

Each project may need to have its access paths adjusted, see the note above.

4. From MS-DOS, set the ALSP_SRC environment variable.

5. From MS-DOS, change the directory to %BLDDIR%\bld-port, and run the
batch file package.bat.

6. From MS-DOS, change the directory to %BLDDIR%\bld-wins\mswin32, and
run the batch file make_interf.bat.

7. On the Mac, build the the Win32 Interface library and executable using
the {srcdir}bin:Build_Wins_MSWin32 AppleScript.  Open the script with the
Script Editor and adjust the BUILDPATH to point to the build directory and
run the script.

Each project may need to have its access paths adjusted, see the note above.

8.0 From MS-DOS, in the directory %BLDDIR%\bld-wins\mswin32, run the
batch file winpack.bat.

Testing
-------

- To test the portable version, from MS-DOS, change the directory to
%BLDDIR%\bld-port and run the batch file "testrun.bat".

Note testrun requires that the ALSP_SRC environment variable is properly
set.

- To test the demo version, run demo_alspro_b and demo_alspro, both with
  and without the hardware key - the demo should not run without the
  hardware key.  Also test by removing the hardware key while in the
  prolog shell, and execute a query - this should cause the program to
  halt when it cannot detect the hardware key.

- To test the DLL, run testdll.exe. Successfully running testdll.exe is enough to
  test the DLL. Repeat this test for demo_testdll.exe, testing both with and
  without the hardware key.

Files generated:
----------------

Alspro libararies:

{blddir}bld-port:alspro.lib
{blddir}bld-port:alspro.dll
{blddir}bld-port:alspro.dll.lib

{blddir}bld-port:demo_alspro.lib
{blddir}bld-port:demo_alspro.dll
{blddir}bld-port:demo_alspro.dll.lib

Console application:

{blddir}bld-port:alspro_b.exe
{blddir}bld-port:alspro.exe

{blddir}bld-port:demo_alspro_b.exe
{blddir}bld-port:demo_alspro.exe

Win32 Interface Libraries:

{blddir}bld-wins:mswin32:mswin32intf.lib
{blddir}bld-wins:mswin32:alspro_mswin320.exe
{blddir}bld-wins:mswin32:alspro_mswin32.exe

{blddir}bld-wins:mswin32:demo_alspro_mswin320.exe
{blddir}bld-wins:mswin32:demo_alspro_mswin32.exe

{blddir}bld-wins:mswin32:kernal32.pro
{blddir}bld-wins:mswin32:user32.pro
{blddir}bld-wins:mswin32:gdi32.pro
{blddir}bld-wins:mswin32:shell32.pro
{blddir}bld-wins:mswin32:winspool32.pro
{blddir}bld-wins:mswin32:comdlg32.pro



Programming Sentinel UniKey Hardware Keys
-----------------------------------------

Both simple and 30-Day demo keys need programming. To program the keys, use the
prog_ssikey program.

The prog_ssikey program is stored in the archive {srcdir}bin:SSI Key
Programmer.sit.hqx.  Unpack the archive and run prog_ssikey.exe.  This will
display usage information.
