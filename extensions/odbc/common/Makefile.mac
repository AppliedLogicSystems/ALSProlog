srcdir = dakota:alsp_src:PROLOG = alspro_bCINTDIR = {srcdir}cinterf:C2PRODIR = {CINTDIR}c2pro:P2INTDIR = {CINTDIR}pro2intf:ODBCDIR = ::src:C2PFS = {C2PRODIR}c2p.pro {C2PRODIR}c2pro {C2PRODIR}cexp {C2PRODIR}cfiles ¶		{C2PRODIR}cmacro {C2PRODIR}cout {C2PRODIR}cparse {C2PRODIR}ctokenall Ä phase1 # phase2phase1 Ä odbc.pro odbc0.c odbc1.c odbc2.cphase2 Ä odbc_intf.68k.lib odbc_intf.ppc.lib odbc_alspro_bc2prolcl.pro Ä {C2PFS}	catenate {C2PFS} > c2prolcl.proodbc.src Ä {ODBCDIR}odbc.spc c2prolcl.pro	Set ALS_OPTIONS heap_size:8000	Export ALS_OPTIONS	{PROLOG} -b c2prolcl.pro -g c2pro ¶		-p -os MacOS -filter all -srcpath {ODBCDIR} odbc ¶			{TRFLAGS} {XINCLUDES} {XDEFINES} {X_CFLAGS}	Unset ALS_OPTIONSP2IFS = {P2INTDIR}p2i.pro {P2INTDIR}pro2intf {P2INTDIR}intfout {P2INTDIR}mytransp2intlcl.pro Ä {P2IFS}	catenate {P2IFS} > p2intlcl.proodbc.pro Ä odbc2.codbc2.c Ä odbc1.codbc1.c Ä odbc0.codbc0.c Ä odbc.src p2intlcl.pro	{PROLOG} -b p2intlcl.pro ¶	-g pro2intf -p odbc -fpre odbc -Ddebug -t odbc_trans