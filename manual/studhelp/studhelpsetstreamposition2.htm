<HTML>
<HEAD>
<TITLE>set_stream_position/2</TITLE>
</HEAD><BODY>
<A NAME="00e87a04"></A>set_stream_position/2
<P></P>
<A NAME="00e87a00"></A><A NAME="02bcd84c"></A>set_stream_position/2–  seek to a new position in a stream
<P></P>
<A NAME="02bcd84d"></A><B>FORMS
<P></P>
<A NAME="02bcd852"></A></B>set_stream_position(Stream_or_Alias,Position) <A NAME="02bcd84e"></A><A NAME="02bcd84e"></A>   <A NAME="02bcd84f"></A>   <A NAME="02bcd850"></A>   <A NAME="02bcd851"></A>
<P></P>
<A NAME="02bcd87e"></A><B>DESCRIPTION
<P></P>
<A NAME="02bcd875"></A></B>set_stream_position/2 is used to change the stream position for a stream which is repositionable.
<P></P>
<A NAME="02bcd876"></A>Stream_or_Alias is the stream for which to change the stream position.
<P></P>
<A NAME="02bcd877"></A>Position is a term which represents the new position to set. It takes one of the
following forms:
<P></P>
<A NAME="02bcd878"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7> An absolute integer which represents the address of a character in the stream.
 The beginning of the stream or the first character in the stream has position
0.  The second character in the stream has position 1 and so on.
<P></P>
<A NAME="02bcd87a"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The atom <A NAME="02bcd879"></A>beginning_of_stream.
<P></P>
<A NAME="02bcd87b"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The term beginning_of_stream(N) where N is an integer greater than zero.  The position represented by this term is
the beginning of the stream plus N bytes.
<P></P>
<A NAME="02bcd87d"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The atom <A NAME="02bcd87c"></A>end_of_stream.
<P></P>
<A NAME="02bcd8a9"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The term end_of_stream(N) where N is an integer less than or equal to zero.  This allows positions (earlier
than the end of  stream) to be specified relative to the end of the stream.  The 
position represented by this term is the end-of-stream position  plus N bytes.
<P></P>
<A NAME="02bcd8a1"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The atom <A NAME="02bcd8a0"></A>current_position.
<P></P>
<A NAME="02bcd8a2"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7>The term current_position(N) where N is an integer.  This allows positions to be specified relative to the current
position in the file.
<P></P>
<A NAME="02bcd8a3"></A><B>EXAMPLES
<P></P>
<A NAME="02bcd8a4"></A></B>Suppose that the file &quot;test&quot; is comprised of the characters &quot;abcdefgh\n&quot;.
<P></P>
<A NAME="02bcd8a5"></A>Open and read the first character from the file test.
<P></P>
<A NAME="02bcd8a6"></A>
<P></P>
<A NAME="02bcd8a7"></A>?- open(test,read,_,[alias(test_alias)]), get_char(test_alias,C).
<P></P>
<A NAME="02bcd8a8"></A>
<P></P>
<A NAME="02bcd8d4"></A>C = a
<P></P>
<A NAME="02bcd8cb"></A>
<P></P>
<A NAME="02bcd8cc"></A>Seek to two characters before end of file and get the character at this
position.
<P></P>
<A NAME="02bcd8cd"></A>
<P></P>
<A NAME="02bcd8ce"></A>?- set_stream_position(test_alias,end_of_stream(-2)),
<P></P>
<A NAME="02bcd8cf"></A>?-_  get_char(test_alias,C).
<P></P>
<A NAME="02bcd8d0"></A>
<P></P>
<A NAME="02bcd8d1"></A>C = h
<P></P>
<A NAME="02bcd8d2"></A>
<P></P>
<A NAME="02bcd8d3"></A>Seek to current position minus two and get the character at this position.
<P></P>
<A NAME="02bcd8ff"></A>
<P></P>
<A NAME="02bcd8f6"></A>?- set_stream_position(test_alias,current_position(-2)),
<P></P>
<A NAME="02bcd8f7"></A>?-_  get_char(test_alias,C).
<P></P>
<A NAME="02bcd8f8"></A>
<P></P>
<A NAME="02bcd8f9"></A>C = g
<P></P>
<A NAME="02bcd8fa"></A>
<P></P>
<A NAME="02bcd8fb"></A>Seek to fourth character in file and get it.  Recall that the first character
has address 0.
<P></P>
<A NAME="02bcd8fc"></A>
<P></P>
<A NAME="02bcd8fd"></A>?- set_stream_position(test_alias,3), get_char(test_alias,C).
<P></P>
<A NAME="02bcd8fe"></A>
<P></P>
<A NAME="02bcd92a"></A>C = d 
<P></P>
<A NAME="02bcd921"></A>
<P></P>
<A NAME="02bcd922"></A>Get this same character again by backing up one.
<P></P>
<A NAME="02bcd923"></A>
<P></P>
<A NAME="02bcd924"></A>?- set_stream_position(test_alias,current_position(-1)),
<P></P>
<A NAME="02bcd925"></A>?-_  get_char(test_alias,C).
<P></P>
<A NAME="02bcd926"></A>
<P></P>
<A NAME="02bcd927"></A>C = d
<P></P>
<A NAME="02bcd928"></A>
<P></P>
<A NAME="02bcd929"></A>Get the next character in the stream.
<P></P>
<A NAME="02bce08e"></A>
<P></P>
<A NAME="02bce085"></A>?- get_char(test_alias,C).
<P></P>
<A NAME="02bce086"></A>
<P></P>
<A NAME="02bce087"></A>C = e
<P></P>
<A NAME="02bce088"></A>
<P></P>
<A NAME="02bce089"></A>Get the current stream position.
<P></P>
<A NAME="02bce08a"></A>
<P></P>
<A NAME="02bce08b"></A>?- stream_property(test_alias,position(P)).
<P></P>
<A NAME="02bce08c"></A>
<P></P>
<A NAME="02bce08d"></A>P = 5
<P></P>
<A NAME="02bcdf0b"></A>
<P></P>
<A NAME="02bcdf02"></A>Get the current stream position, seek to the beginning of the stream and get
that character, then seek back to the old position and get the character at that
position.
<P></P>
<A NAME="02bcdf03"></A>
<P></P>
<A NAME="02bcdf04"></A>?- stream_property(test_alias, position(P)),
<P></P>
<A NAME="02bcdf05"></A>?-_  set_stream_position(test_alias, beginning_of_stream),
<P></P>
<A NAME="02bcdf06"></A>?-_  get_char(test_alias, C1),
<P></P>
<A NAME="02bcdf07"></A>?-_  set_stream_position(test_alias, P),
<P></P>
<A NAME="02bcdf08"></A>?-_  get_char(test_alias, C2).
<P></P>
<A NAME="02bcdf09"></A>P = 5
<P></P>
<A NAME="02bcdf0a"></A>C1 = a
<P></P>
<A NAME="02bcdf36"></A>C2 = f
<P></P>
<A NAME="02bcdf2d"></A><B>ERRORS
<P></P>
<A NAME="02bcdf2e"></A></B>Stream_or_Alias is a variable
<P></P>
<A NAME="02bcdf2f"></A>––––&gt;  instantiation_error.
<P></P>
<A NAME="02bcdf30"></A>Position is a variable
<P></P>
<A NAME="02bcdf31"></A>––––&gt;  instantiation_error.
<P></P>
<A NAME="02bcdf32"></A>Stream_or_Alias is neither a variable nor a stream descriptor nor an alias
<P></P>
<A NAME="02bcdf33"></A>––––&gt;<B>  </B>domain_error(stream_position,Position).
<P></P>
<A NAME="02bcdf34"></A>Position is neither a variable nor a stream position
<P></P>
<A NAME="02bcdf35"></A>––––&gt;  domain_error(stream_position,Position).
<P></P>
<A NAME="02bcdf61"></A>Stream_or_Alias is not associated with an open stream
<P></P>
<A NAME="02bcdf58"></A>––––&gt;  existence_error(stream,Stream_or_Alias).
<P></P>
<A NAME="02bcdf59"></A>Stream_or_Alias has stream property reposition(false)
<P></P>
<A NAME="02bcdf5a"></A>––––&gt;  permission_error(reposition,stream,Stream_or_Alias).
<P></P>
<A NAME="02bcdf5b"></A><B>NOTES
<P></P>
<A NAME="02bcdf5c"></A></B>As the example above demonstrates, set_stream_position/2 may be used when used in conjunction with stream_property/2.  Typically a program will get the current position using stream_property/2 and later set the stream position using this saved position.
<P></P>
<A NAME="02bcdf5d"></A><B>SEE ALSO
<P></P>
<A NAME="02bcdf5e"></A></B>open/4, get_char/2, stream_property/2,<I>User Guide (Prolog I/O).
<P></P>
</I></BODY>
</HTML>