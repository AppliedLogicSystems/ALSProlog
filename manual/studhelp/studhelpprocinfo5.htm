<HTML>
<HEAD>
<TITLE>'$procinfo'/5</TITLE>
</HEAD><BODY>
<A NAME="4227e51c"></A><B>’$procinfo’/5
<P></P>
<A NAME="4227e395"></A><A NAME="43fd6c60"></A></B>’$procinfo’/5 –  retrieves information about the given procedure
<P></P>
<A NAME="422913fa"></A><A NAME="422913ce"></A>’$nextproc’/3 –  retrieves the next procedure in the name table
<P></P>
<A NAME="422913f2"></A>’<A NAME="422913f1"></A>$exported_proc’/3 –  checks whether the given procedure is exported
<P></P>
<A NAME="422913f3"></A><A NAME="422913f4"></A>’$resolve_module’/4 –  finds the module which exports the given procedure 
<P></P>
<A NAME="43fd6c64"></A><B>FORMS
<P></P>
<A NAME="43fd6c65"></A></B>’$procinfo’(NTblIndex,Module,Pred,Arity,DBRef) 
<P></P>
<A NAME="43fd6c66"></A>’$nextproc’(PreNTblIndex,Flag,NTblIndex) 
<P></P>
<A NAME="43fd6c67"></A>’$exported_proc’(Module,Pred,Arity) 
<P></P>
<A NAME="43fd73c5"></A>’$resolve_module’(Module,Pred,Arity,ImportedFrom) <A NAME="43fd73cc"></A><A NAME="43fd73cc"></A> <A NAME="43fd73c3"></A><A NAME="43fd73c3"></A> <A NAME="43fd73c4"></A><A NAME="43fd73c4"></A> <A NAME="43fd73c6"></A> <A NAME="43fd73c7"></A><A NAME="43fd73c7"></A> <A NAME="43fd73c8"></A> 
<P></P>
<A NAME="43fd73c9"></A><B>DESCRIPTION  
<P></P>
<A NAME="43fd73ca"></A></B>Given a name table index (NTBlIndex), ’$procinfo’/5 returns the module name, the predicate name, the arity, and the database
reference associated with that name table entry. If the given name table entry is a
Prolog-defined procedure (as opposed to a C- or assembler-defined procedure),
the returned database reference is the database reference of the procedure’s
first clause.  If the procedure associated with NTblIndex is not a Prolog-defined procedure, 0 will be returned as the database
reference.  If NTblIndex is an uninstantiated variable, and Module, Pred and Arity are bound values, the name table entry of Pred/Arity in module Module is accessed. 
<P></P>
<A NAME="43fd73cb"></A>’$nextproc’/3 returns the name table index NTblIndex of the next name table entry following the input name table entry PreNTblIndex.  If PreNTblIndex is -1, the first name table entry index is returned. The argument Flag determines the type of the next name table entry to be chosen, as follows.
<P></P>
 
<P></P>
 
<P></P>
<TABLE><TR VALIGN=TOP><TD><A NAME="43fd7245"></A>Flag=0
<BR></TD><TD><A NAME="43fd7247"></A>The index of the name table entry of the next Prolog-defined procedure is
returned.
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="43fd7274"></A>Flag=1
<BR></TD><TD><A NAME="43fd726c"></A>The index of the name table entry of the next Prolog- or C-defined procedure
is returned.
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="43fd726e"></A>Flag=2
<BR></TD><TD><A NAME="43fd7270"></A>The index of the next name table entry, regardless of its type, is returned.
<BR></TD></TR></TABLE> 
<P></P>
<A NAME="43fd7273"></A>Table 10.  <A NAME="43fd7272"></A>Argument Flags.
<P></P>
<A NAME="42291424"></A>
<P></P>
<A NAME="43fd7296"></A>For ’$exported_proc’/3, if the procedure whose module name Module, predicate name Pred, and Arity are given is exported, ’$exported_proc’/3 succeeds; otherwise it fails.
<P></P>
<A NAME="43fd7297"></A>For ’$resolve_module’/4, if the given procedure is not defined in the given module Module, ImportedFrom is unified with the name of the module from which the given module Module imports the procedure Pred/Arity. 
<P></P>
<A NAME="43fd7298"></A><B>EXAMPLES  
<P></P>
<A NAME="43fd7299"></A></B>?-[nrev]. 
<P></P>
<A NAME="43fd729a"></A>Consulting nrev ... 
<P></P>
<A NAME="43fd729b"></A>nrev consulted 
<P></P>
<A NAME="43fd729c"></A>yes. 
<P></P>
<A NAME="43fd729d"></A>
<P></P>
<A NAME="43fd729e"></A>?- ’$exported_proc’(user,nrev,2). 
<P></P>
<A NAME="43fd72ca"></A>no. 
<P></P>
<A NAME="43fd72c1"></A>
<P></P>
<A NAME="43fd72c2"></A>?- [user]. 
<P></P>
<A NAME="43fd72c3"></A>Consulting user ... 
<P></P>
<A NAME="43fd72c4"></A>  export nrev/2. 
<P></P>
<A NAME="43fd72c5"></A>  user consulted 
<P></P>
<A NAME="43fd72c6"></A>yes. 
<P></P>
<A NAME="43fd72c7"></A>
<P></P>
<A NAME="43fd72c8"></A>?- ’$exported_proc’(user,nrev,2). 
<P></P>
<A NAME="43fd72c9"></A>yes. 
<P></P>
<A NAME="43fd72f5"></A>
<P></P>
<A NAME="43fd72ec"></A>?- ’$resolve_module’(user,append,3,ImportedFrom). 
<P></P>
<A NAME="43fd72ed"></A>ImportedFrom = user 
<P></P>
<A NAME="44012572"></A>yes. 
<P></P>
</BODY>
</HTML>