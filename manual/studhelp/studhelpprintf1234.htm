<HTML>
<HEAD>
<TITLE>printf/[1,2,3,4]</TITLE>
</HEAD><BODY>
<A NAME="00e8abe6"></A><B>printf/[1,2,3,4]
<P></P>
<A NAME="02bb9b5b"></A><A NAME="00e8ac0d"></A></B>printf/1 –  print out a string to the current output
<P></P>
<A NAME="02bb9b5c"></A>printf/2 –  print out a string with arguments
<P></P>
<A NAME="02bb9b5d"></A>printf/3 –  print out a string with a format and arguments
<P></P>
<A NAME="00e88e27"></A>printf_opt/3 –  print out string with format, arguments, options
<P></P>
<A NAME="02bba2c2"></A>printf/4 –  print out string with format, arguments, options
<P></P>
<A NAME="02bba2b9"></A><B>FORMS
<P></P>
<A NAME="02bba2ba"></A></B>printf(Format) 
<P></P>
<A NAME="02bba2bb"></A>printf(Format,ArgList) 
<P></P>
<A NAME="02bba2bc"></A>printf(Steam_or_Alias,Format,ArgList)
<P></P>
<A NAME="00e88fa9"></A>printf_opt(Format,ArgList,Options)
<P></P>
<A NAME="02bba2be"></A>printf(Stream_or_Alias,Format,ArgList,WriteOptions) <A NAME="02bba2bd"></A><A NAME="02bba2bd"></A> <A NAME="02bba2bf"></A><A NAME="02bba2bf"></A> <A NAME="02bba2c0"></A><A NAME="02bba2c0"></A> <A NAME="02bba2c1"></A> <A NAME="02bba13f"></A><A NAME="02bba13f"></A> <A NAME="02bba136"></A> <A NAME="02bba137"></A><A NAME="02bba137"></A> 
<P></P>
<A NAME="02bba138"></A><B>DESCRIPTION  
<P></P>
<A NAME="02bba139"></A></B>printf/2 takes a format string and a list of arguments to include in the format
string.  printf/1 is the same as printf/2 except no argument list is given. The following is a list of the special
formatting possible within the format string:
<P></P>
<A NAME="02bba13a"></A>\n – prints a newline (same as nl/0)
<P></P>
<A NAME="02bba13b"></A>\t – prints a tab character
<P></P>
<A NAME="02bba13c"></A>\\ – prints a backslash
<P></P>
<A NAME="02bba13d"></A>\% – prints a percent sign
<P></P>
<A NAME="02bba13e"></A>%c – prints the corresponding Prolog character (atom) in the argument list
<P></P>
<A NAME="02bba16a"></A>%d – prints the corresponding decimal number in the argument list
<P></P>
<A NAME="02bba161"></A>%s – prints the corresponding Prolog string in the argument list
<P></P>
<A NAME="02bba162"></A>%t – prints the corresponding Prolog term in the argument list (same as write/1)
<P></P>
<A NAME="02bba163"></A>All other characters are printed as they appear in the format string. 
<P></P>
<A NAME="02bba164"></A>Using printf is generally much easier than using the equivalent write/1, put/1, and nl/0 predicates because the whole message you want to print out can be done by one
call to printf. 
<P></P>
<A NAME="02bba165"></A><B>EXAMPLES  
<P></P>
<A NAME="02bba166"></A></B>?- printf(&quot;hello world\n&quot;). 
<P></P>
<A NAME="02bba167"></A>hello world 
<P></P>
<A NAME="02bba168"></A>
<P></P>
<A NAME="02bba169"></A>yes. 
<P></P>
<A NAME="02bba195"></A>?- printf(&quot;Letters: %c%c%c\n&quot;,[a,b,c]). 
<P></P>
<A NAME="02bba18c"></A>Letters: abc 
<P></P>
<A NAME="02bba18d"></A>
<P></P>
<A NAME="02bba18e"></A>yes. 
<P></P>
<A NAME="02bba18f"></A>
<P></P>
<A NAME="02bba190"></A>?- printf(&quot;Contents: %t, Amount: %d\n&quot;, 
<P></P>
<A NAME="02bba191"></A>        [pocket(keys,wallet,watch), 3]). 
<P></P>
<A NAME="02bba192"></A>Contents: pocket(keys,wallet,watch), Amount: 3 
<P></P>
<A NAME="02bba193"></A>yes. 
<P></P>
<A NAME="02bba194"></A><B>SEE ALSO  
<P></P>
<A NAME="02bba1c0"></A></B>nl/0, put/1, write/0, User Guide (Prolog I/O), [Unix/C Reference Manuals: printf(3S)]. 
<P></P>
</BODY>
</HTML>