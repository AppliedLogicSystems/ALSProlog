<HTML>
<HEAD>
<TITLE>send/2</TITLE>
</HEAD><BODY>
<A NAME="073c2c4e"></A><B>send/2
<P></P>
<A NAME="0341f336"></A><A NAME="0342fe4c"></A></B>s<A NAME="03420129"></A>end/2 - send a message to an object
<P></P>
<A NAME="0341f337"></A><B>FORMS
<P></P>
<A NAME="0341f3ba"></A></B>send(Object, Message) 
<P></P>
<A NAME="0341f38f"></A><B>DESCRIPTION
<P></P>
<A NAME="0341f3b8"></A></B>A message is sent to an object with a call of the form
<P></P>
<A NAME="0341f3bb"></A>send(Object, Message) 
<P></P>
<A NAME="0341f3b2"></A>where Object is the target object (or an atom naming the object), and Message is an arbitrary Prolog term.  The Message may include uninstantiated variables which might be instantiated by the
object’s method for dealing with Message.  Such calls to send/2 can occur both in ordinary Prolog code, and in the code defining methods of
classes.   For convience, the call
<P></P>
<A NAME="0341f3b4"></A>s<A NAME="03420156"></A>end_self(Object, Message) 
<P></P>
<A NAME="0341f3b5"></A>is provided as syntactic sugar for 
<P></P>
<A NAME="0341f3b6"></A>send(Object, Message) 
<P></P>
<A NAME="0341f3b7"></A>No attempt to verify that a send_self message is being sent from an object to itself.
<P></P>
<A NAME="0341dcb4"></A><B>EXAMPLES
<P></P>
<A NAME="0341f996"></A></B>send(Object, push(2))
<P></P>
<A NAME="0341f99a"></A>send(Object, pop(X))
<P></P>
<A NAME="0341f997"></A>
<P></P>
</BODY>
</HTML>