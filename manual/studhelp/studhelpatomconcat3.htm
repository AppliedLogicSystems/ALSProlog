<HTML>
<HEAD>
<TITLE>atom_concat/3</TITLE>
</HEAD><BODY>
<A NAME="82df4f4c"></A>atom_concat/3
<P></P>
<A NAME="a2477a68"></A><A NAME="82df4f48"></A>atom_concat/3 –  append two atoms together to form a third
<P></P>
<A NAME="a2477a69"></A><B>FORMS
<P></P>
<A NAME="a2477a6b"></A></B>atom_concat(Atom1,Atom2,Atom12)  <A NAME="a2477a6a"></A><A NAME="a2477a6a"></A> 
<P></P>
<A NAME="a24781d0"></A><B>DESCRIPTION
<P></P>
<A NAME="a24781c7"></A></B>If Atom1 and Atom2 are bound to atoms, calling atom_concat/3 will unify Atom12 with the atom formed by concatenating the characters of Atom2 to the end of Atom1.
<P></P>
<A NAME="a24781c8"></A>If either or both of Atom1 or Atom2 are unbound, then Atom12 must be bound to an atom.  atom_concat/3 will unify Atom1 and/or Atom2 to atoms such that concatenating Atom2 to Atom1 will form Atom12.
<P></P>
<A NAME="a24781c9"></A>atom_concat/3 is non-determinate when only Atom12 is instantiated. Upon backtracking Atom1 and Atom2 will take on all possible instantiations such that Atom2 concatenated to Atom1 will form Atom12.
<P></P>
<A NAME="a24781ca"></A><B>EXAMPLES  
<P></P>
<A NAME="a24781cb"></A></B>?- atom_concat(cater,pillar,A).
<P></P>
<A NAME="a24781cc"></A>
<P></P>
<A NAME="a24781cd"></A>A = caterpillar
<P></P>
<A NAME="a24781ce"></A>
<P></P>
<A NAME="a24781cf"></A>yes.
<P></P>
<A NAME="a247804d"></A>?- atom_concat(cater,A,caterpillar).
<P></P>
<A NAME="a2478044"></A>
<P></P>
<A NAME="a2478045"></A>A = pillar
<P></P>
<A NAME="a2478046"></A>
<P></P>
<A NAME="a2478047"></A>yes.
<P></P>
<A NAME="a2478048"></A>?- atom_concat(A,B,abc).
<P></P>
<A NAME="a2478049"></A>
<P></P>
<A NAME="a247804a"></A>A = ''
<P></P>
<A NAME="a247804b"></A>B = abc;
<P></P>
<A NAME="a247804c"></A>
<P></P>
<A NAME="a2478078"></A>A = a
<P></P>
<A NAME="a247806f"></A>B = bc;
<P></P>
<A NAME="a2478070"></A>
<P></P>
<A NAME="a2478071"></A>A = ab
<P></P>
<A NAME="a2478072"></A>B = c;
<P></P>
<A NAME="a2478073"></A>
<P></P>
<A NAME="a2478074"></A>A = abc
<P></P>
<A NAME="a2478075"></A>B = '';
<P></P>
<A NAME="a2478076"></A>no.
<P></P>
<A NAME="a2478077"></A>
<P></P>
<A NAME="a24780a3"></A>?- atom_concat(1,2,A).
<P></P>
<A NAME="a247809a"></A>error(type_error(atom,1),[builtins:atom_concat(1,2,_3282)])
<P></P>
<A NAME="a247809b"></A>
<P></P>
<A NAME="a247809c"></A>Error: Argument of type atom expected instead of 1.
<P></P>
<A NAME="a247809d"></A>- Goal:          builtins:atom_concat(1,2,_A)
<P></P>
<A NAME="a247809e"></A>- Throw pattern: error(type_error(atom,1),
<P></P>
<A NAME="a247809f"></A>                     [builtins:atom_concat(1,2,_A)])
<P></P>
<A NAME="a24780a0"></A><B>ERRORS
<P></P>
<A NAME="a24780a1"></A></B>Atom1 and Atom12 are variables
<P></P>
<A NAME="a24780a2"></A>––––&gt; instantiation_error.
<P></P>
<A NAME="a24780ce"></A>Atom2 and Atom12 are variables
<P></P>
<A NAME="a24780c5"></A>––––&gt; instantiation_error.
<P></P>
<A NAME="a24780c6"></A>Atom1 is neither a variable nor an atom
<P></P>
<A NAME="a24780c7"></A>––––&gt; type_error(atom,Atom1)
<P></P>
<A NAME="a24780c8"></A>Atom2 is neither a variable nor an atom
<P></P>
<A NAME="a24780c9"></A>––––&gt; type_error(atom,Atom2)
<P></P>
<A NAME="a24780ca"></A>Atom12 is neither a variable nor an atom
<P></P>
<A NAME="a24780cb"></A>––––&gt; type_error(atom,Atom12)
<P></P>
<A NAME="a24780cc"></A><B>SEE ALSO  
<P></P>
<A NAME="84bad92a"></A></B>atom_length/2, sub_atom/4, atom_chars/2, atom_codes/2. 
<P></P>
</BODY>
</HTML>