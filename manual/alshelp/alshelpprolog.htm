<HTML>
<HEAD>
<TITLE>prolog</TITLE>
</HEAD><BODY>
<A NAME="1f798e37"></A><B>prolog
<P></P>
<A NAME="a43b5472"></A><A NAME="d8e11d87"></A></B>pr<A NAME="d8e11d88"></A>olog  - call a prolog term from Tcl
<P></P>
<A NAME="a43b5473"></A><B>FORMS
<P></P>
<A NAME="a43b5474"></A></B> prolog <I>option ?arg arg... ?
<P></P>
<A NAME="a43b5475"></A></I><B>DESCRIPTION
<P></P>
<A NAME="a43b5476"></A></B>The prolog command provides methods for executing a prolog query in ALS Prolog from
within an executing Tcl script.  Option indicates how the query is expressed.  The valid values for Option are:
<P></P>
<A NAME="a43b5477"></A><A NAME="d8dd6349"></A><B>prolog call</B> <I>module predicate ?-type arg ...?
<P></P>
<A NAME="a43b5478"></A></I>Directly calls a predicate in a module with type-converted arguments.  The
command returns 1 if the query succeeds, or 0 if it fails. The arguments can take
the following forms:
<P></P>
<A NAME="a43b54a4"></A>-number arg Passes arg as an integer or floating point number.
<P></P>
<A NAME="a43b549c"></A>-atom arg Passes arg as an atom.
<P></P>
<A NAME="a43b549e"></A>-list arg Passes arg as a list.
<P></P>
<A NAME="a43b54a0"></A>-var varName Passes an unbound Prolog varaible. When the Prolog variable is bound, the Tcl
variable with the name varName is set to the binding.
<P></P>
<A NAME="d8dd634a"></A><A NAME="a43b54a2"></A><B>prolog read_call </B><I>termString ?varName ...?
<P></P>
<A NAME="a43b54a3"></A></I>The string termString is first read as a prolog term and then called.  The command returns 1 if the
query succeeds, or 0 if it fails. The optional variables named by the varName arguments are set when a Prolog variable in the query string is bound.  The
prolog variables are matched to varNames in left-to-right depth first order.
<P></P>
<A NAME="a43b5c08"></A><B>EXAMPLES
<P></P>
<A NAME="a43b5bff"></A></B>  prolog call builtins append -atom a -atom b -var x
<P></P>
<A NAME="a43b5c00"></A>Returns 1, and the Tcl variable x is set to {a b}.
<P></P>
<A NAME="d8e114f2"></A>
<P></P>
<A NAME="a43b5c01"></A>  prolog read_call “append(a, b, X)” x
<P></P>
<A NAME="a43b5c02"></A>Returns 1, and the Tcl variable x is set to {a b}.
<P></P>
<A NAME="d8e1159e"></A>
<P></P>
<A NAME="a43a2517"></A>
<P></P>
</BODY>
</HTML>