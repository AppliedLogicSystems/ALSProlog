<HTML>
<HEAD>
<TITLE>als_system/1</TITLE>
</HEAD><BODY>
<A NAME="54285fa1"></A><B>als_system/1
<P></P>
<A NAME="4226c3db"></A><A NAME="23bf29ee"></A></B>als_system/1 –  Provides system environmental information.
<P></P>
<A NAME="42280153"></A><A NAME="23bf29ef"></A><A NAME="4405e9e9"></A>sys_env/3 –  Provides brief system environmental information.
<P></P>
<A NAME="23bf29f0"></A><B>FORMS
<P></P>
<A NAME="23bf29f1"></A></B>als_system(INFO_LIST) 
<P></P>
<A NAME="23bf314e"></A>sys_env(OS,OS_Variation,Processor) <A NAME="23bf29f2"></A><A NAME="23bf29f2"></A> <A NAME="23bf3157"></A> 
<P></P>
<A NAME="23bf314f"></A><B>DESCRIPTION  
<P></P>
<A NAME="23bf3150"></A></B>Portable programs which interact with the operating system must take account
of the variations in the system environment. als_system/1 provides a method of achieving this goal. When the ALS Prolog system
initializes itself, the underlying C substrate asserts a single fact
<P></P>
<A NAME="23bf3151"></A>    als_system(INFO_LIST) 
<P></P>
<A NAME="23bf3152"></A>in the module builtins in the Prolog database.  The argument of this fact is a list of equations of
the form
<P></P>
<A NAME="23bf3153"></A>    property = value 
<P></P>
<A NAME="23bf3154"></A>Each property appears at most once. The properties and their possible values
are listed in the table below.
<P></P>
 
<P></P>
<A NAME="4401090b"></A><B>Table 1: 
<P></P>
 
<P></P>
</B><TABLE><TR VALIGN=TOP><TD><B><A NAME="23bf2fd4"></A></B>Property Tag
<BR></TD><TD><A NAME="23bf2fcc"></A>Value Examples
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf2fce"></A>os
<BR></TD><TD><A NAME="23bf2fd0"></A>unix,dos,macos,mswins32,vms
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf2fd2"></A>os_variation
<BR></TD><TD><A NAME="23bf2fff"></A>(unix):’solaris2.4’,
<BR><A NAME="23bf2ff6"></A>’sunos4.1.3’, hpux9.05,.. (mswin32):mswin95, mswinNT, mswin32s
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf2ff8"></A>processor
<BR></TD><TD><A NAME="23bf2ffa"></A>port_thread,port_byte, i386,m68k,m88k,sparc,powerpc
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf2ffc"></A>manufacturer
<BR></TD><TD><A NAME="23bf2ffe"></A>generic,sun,motorola,dec,
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf3021"></A>prologVersion
<BR></TD><TD><A NAME="23bf3023"></A>’nnn-mm’
<BR></TD></TR><TR VALIGN=TOP><TD><A NAME="23bf3025"></A>wins
<BR></TD><TD><A NAME="23bf3027"></A>nowins,motif,macos,...
<BR></TD></TR></TABLE> 
<P></P>
<A NAME="23bf3028"></A>For most purposes, knowing the operating system (OS), and possibly the Processor, is what matters.  Consequently, another small fact, 
<P></P>
<A NAME="23bf3029"></A>   
<P></P>
 <A NAME="23bf3055"></A>sys_env(OS,OS_Variation,Processor) 
<P></P>
<A NAME="23bf304c"></A>is asserted during initialization, recording the values of the os, the os_variation, and the processor properties from the als_system list description. 
<P></P>
<A NAME="23bf304d"></A><B>EXAMPLES  
<P></P>
<A NAME="23bf304e"></A></B>On a Sun SPARC running Solaris 2.4, TTY portable version:
<P></P>
<A NAME="23bf304f"></A>     
<P></P>
<A NAME="23bf3050"></A>?- als_system(X). 
<P></P>
<A NAME="23bf3051"></A>
<P></P>
<A NAME="23bf3052"></A>X = [os = unix,os_variation = ‘solaris2.4’,
<P></P>
<A NAME="23bf3053"></A>processor = port_thread,manufacturer = generic,prologVersion = ‘1-76’,wins = nowins]
<P></P>
</BODY>
</HTML>