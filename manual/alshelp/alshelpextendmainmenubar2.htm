<HTML>
<HEAD>
<TITLE>extend_main_menubar/2</TITLE>
</HEAD><BODY>
<A NAME="b0cd7ccb"></A><B>extend_main_menubar/2
<P></P>
<A NAME="b0cc1426"></A></B>extend_main_menubar/2 - add entries to the main menubar
<P></P>
<A NAME="b0cc22c0"></A>menu_entries_list/[2,3] - obtain menu entries
<P></P>
<A NAME="b0cc28d2"></A>path_to_menu_entry/[2,3,4] - obtain path to a menu entry
<P></P>
<A NAME="b0cc381b"></A>add_to_main_menu_entry/2 - add an item to a menu entry
<P></P>
<A NAME="b0cc3841"></A>extend_cascade/3 - extend a menu cascade
<P></P>
<A NAME="b0cc1455"></A><B>FORMS
<P></P>
<A NAME="b0cc1bb3"></A></B>extend_main_menubar(Label, MenuEntriesList)
<P></P>
<A NAME="b0cc2295"></A>menu_entries_list(MenuPath, EntriesList)
<P></P>
<A NAME="b0cc2298"></A>menu_entries_list(Interp, MenuPath, EntriesList)
<P></P>
<A NAME="b0cc2a26"></A>path_to_main_menu_entry(Index, SubMenuPath)
<P></P>
<A NAME="b0cc2a2b"></A>path_to_menu_entry(MenuPath, Index, SubMenuPath)
<P></P>
<A NAME="b0cc28a9"></A>path_to_menu_entry(Interp,MenuPath,Index,
<P></P>
<A NAME="b0cc28cf"></A>                      SubMenuPath)
<P></P>
<A NAME="b0cc37ed"></A>add_to_main_menu_entry(Index, Entry)
<P></P>
<A NAME="b0cc37f1"></A>extend_cascade(Entry, MenuPath, Interp)
<P></P>
<A NAME="b0cc381d"></A>The predicate
<P></P>
<A NAME="b0cc37eb"></A>extend_cascade(Entry, MenuPath, Interp)
<P></P>
<A NAME="b0cc1a2e"></A><B>DESCRIPTION
<P></P>
<A NAME="b0c5f3a5"></A></B>The general call 
<P></P>
  <A NAME="b0c5f481"></A>extend_main_menubar(Label, MenuEntriesList)
<P></P>
<A NAME="b0cc1a5e"></A>adds entries to the main menubar in the ALS Prolog development environment.  
<P></P>
<A NAME="b0c5f483"></A>Label should be the label which will appear on the menu bar, and MenuEntriesList is a Prolog list containing <I>menu entry descriptors, </I> which are either an Atom alone, or an expression of the form
<P></P>
  <A NAME="b0cc1b37"></A>Atom + Expr
<P></P>
<A NAME="b0cc1b38"></A>where Atom is a prolog atom which will serve as the new menu entry, and Expr is a <I>menu entry action expression,</I> which can be one of the following:
<P></P>
<A NAME="b0cc1b5b"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7> tcl(TclExpr)
<P></P>
<A NAME="b0cc1b5c"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7> cascade(SubLabel, SubList)
<P></P>
<A NAME="b0cc1b5d"></A><IMG SRC="Bullet.gif" ALT="Bullet.gif" BORDER=0 WIDTH=3 HEIGHT=7> PrologCall
<P></P>
<A NAME="b0cc1b5e"></A>Here, TclExpr can be any Tcl/Tk expression for evaulation, and PrologCall is any ground Prolog goal.  The entry
<P></P>
<A NAME="b0cc1b5f"></A>cascade(SubLabel, SubList)
<P></P>
<A NAME="b0cc1b60"></A>allows one to create menu entries which are themselves cascades.    In this
case, SubLabel must be an atom which will serve as the entry’s label, and  SubList is (recursively) a list of menu entry descriptors.
<P></P>
<A NAME="b0cc29cd"></A>If MenuPath is a Tk path to a menu (top level or subsidiary),  then the call
<P></P>
 <A NAME="b0cc29ce"></A>menu_entries_list(MenuPath, EntriesList)
<P></P>
<A NAME="b0cc29cf"></A>will succeed if EntriesList is the list of labels for the entries on that menu, in order.   As usual,
<P></P>
<A NAME="b0cc2a01"></A>menu_entries_list(MenuPath, EntriesList)
<P></P>
 <A NAME="b0cc29f8"></A>:-
<P></P>
 <A NAME="b0cc29f9"></A>menu_entries_list(tcli, MenuPath, EntriesList).
<P></P>
<A NAME="b0cc3032"></A><I>Paths to menu entries</I> are lists of integers representing the path from the root of the menu tree to
a particular entry.  When one indexes menu entries, the indicies are integers
beginning at 0. If MenuPath is a Tk path to a menu (top level or subsidiary), and if Index is an integer &gt;= 0, and if  the Index’th entry of MenuPath is a cascade,  so that it has an associated menu, then SubMenuPath is a path to that associated menu.  
<P></P>
<A NAME="b0cc30e2"></A>As usual, 
<P></P>
<A NAME="b0cc3086"></A>  path_to_main_menu_entry(Index, SubMenuPath)
<P></P>
<A NAME="b0cc3087"></A>      :-
<P></P>
<A NAME="b0cc3088"></A>      path_to_menu_entry(shl_tcli, ‘.topals.mmenb’, 
<P></P>
     <A NAME="b0cc3089"></A> Index, SubMenuPath).
<P></P>
<A NAME="b0cc308a"></A>
<P></P>
<A NAME="b0cc308b"></A>  path_to_menu_entry(MenuPath, Index, SubMenuPath)
<P></P>
<A NAME="b0cc308c"></A>      :-
<P></P>
<A NAME="b0cc308d"></A>      path_to_menu_entry(tcli, MenuPath,
<P></P>
     <A NAME="b0cc3107"></A> Index, SubMenuPath).
<P></P>
<A NAME="b0cc3719"></A>Finally, one can add new entries at the ends (bottoms) of existing menu
cascades, as follows:
<P></P>
<A NAME="b0cc371a"></A>add_to_main_menu_entry(Index, Entry)
<P></P>
<A NAME="b0cc3746"></A>    :-
<P></P>
<A NAME="b0cc373d"></A>    path_to_main_menu_entry(Index, MenuPath),
<P></P>
<A NAME="b0cc373e"></A>    extend_cascade(Entry, MenuPath, shl_tcli).
<P></P>
<A NAME="b0cc373f"></A>extend_cascade(Entry, MenuPath, Interp)
<P></P>
<A NAME="b0cc376d"></A>The predicate
<P></P>
<A NAME="b0cc376e"></A>extend_cascade(Entry, MenuPath, Interp)
<P></P>
<A NAME="b0cc376f"></A>adds  Entry to the end of menu MenuPath under interpreter Interp.
<P></P>
<A NAME="b0cc1ab4"></A><B>EXAMPLES
<P></P>
<A NAME="b0cc1ab5"></A></B>After executing the call
<P></P>
<A NAME="b0c5f4a7"></A>?- <A NAME="b0c609d2"></A>extend_main_menubar(‘Test Extend’,
<P></P>
<A NAME="b0c5f4a9"></A>            [‘Test Entry #1’, ‘Test Entry #2’]).
<P></P>
<A NAME="b0c5f4aa"></A>the main listener window would look like this when clicking on the newly added
menubar entry:
<P></P>
<IMG SRC="x_menu-1.gif" ALT="x_menu-1.gif" BORDER=0 WIDTH=355 HEIGHT=222>
<P></P>
<A NAME="b0c5fc62"></A>Suppose we define
<P></P>
<A NAME="b0c5fc68"></A>test_write
<P></P>
<A NAME="b0c5fc65"></A>    :-
<P></P>
<A NAME="b0c5fc66"></A>    printf(user_output, ‘This is a test ...\n’, []),
<P></P>
<A NAME="b0c5fc67"></A>    flush_input(user_input).
<P></P>
<A NAME="b0cc21e9"></A>and replace the call considered above by:
<P></P>
<A NAME="b0cc21ea"></A>?- extend_main_menubar(‘Test Extend’,
<P></P>
<A NAME="b0cc21eb"></A>            [‘Test Entry #1’ + tcl(‘bell’),
<P></P>
<A NAME="b0cc21ec"></A>              ‘Test Entry #2’ + test_write
<P></P>
<A NAME="b0cc21ed"></A>            ]).
<P></P>
<A NAME="b0c5f501"></A>Then the appearance of the main menu and the new pulldown will be the same, 
but chooseing Test Entry #1 will cause the bell to ring, and choosing Test Entry
#2 will cause 
<P></P>
<A NAME="b0c5fc61"></A>This is a test ...
<P></P>
<A NAME="b0c5fae2"></A>to be written on the listener console.
<P></P>
<A NAME="b0cc297b"></A>Note that the following is the case:
<P></P>
<A NAME="b0c6184b"></A>?- menu_entries_list(shl_tcli, 
<P></P>
   <A NAME="b0c61844"></A>‘.topals.mmenb’, EntriesList).
<P></P>
<A NAME="b0c61843"></A>EntriesList = [File, Edit, Prolog, Tools, Help].
<P></P>
<A NAME="b0cc300a"></A>And,
<P></P>
<A NAME="b0c618ef"></A>?- path_to_main_menu_entry(4, SubMenuPath).
<P></P>
<A NAME="b0c618f4"></A>SubMenuPath = .topals.mmenb.help
<P></P>
<A NAME="b0cc379a"></A>Finally, 
<P></P>
<A NAME="b0cc379b"></A>?- add_to_main_menu_entry(3, 
<P></P>
<A NAME="b0cc37f2"></A>                       ‘My Entry’ + test_write).
<P></P>
<A NAME="b0cc37be"></A>will add an entry at the end of the Tools cascade.  
<P></P>
<A NAME="b0cc300b"></A>
<P></P>
</BODY>
</HTML>