<HTML>
<HEAD>
<TITLE>tell/1</TITLE>
</HEAD><BODY>
<A NAME="077049e4"></A><B>tell/1
<P></P>
<A NAME="02bdeac1"></A><A NAME="00e87fb1"></A></B>tell/1 –  sets the standard output stream
<P></P>
<A NAME="02bdeac2"></A><A NAME="00e4ce88"></A>telling/1 –  returns the name of the standard output stream
<P></P>
<A NAME="02bdeac3"></A><A NAME="00e4ce89"></A>told/0 –  closes the standard output stream
<P></P>
<A NAME="02bdeac4"></A><B>FORMS
<P></P>
<A NAME="02bdeac5"></A></B>tell(File) 
<P></P>
<A NAME="02bdeac6"></A>telling(File) 
<P></P>
<A NAME="02bdeac7"></A>told 
<P></P>
<A NAME="02bdeac8"></A><B>DESCRIPTION  
<P></P>
<A NAME="02bdeaf4"></A></B>tell/1 sets the current output stream to the file named File. If File is already open for output, the existing file descriptor will be used.
Otherwise, a new file descriptor will be allocated, and output operations will start
at the beginning of the file, overwriting the previous contents. 
<P></P>
<A NAME="02bdeaeb"></A>telling/1 unifies File with the name of the current output stream. If no stream has been explicitly
opened by tell, then File will be unified with the atom user. 
<P></P>
<A NAME="02bdeaec"></A>told/0 closes the current output stream and deallocates its file descriptor. The
current output stream is then set to user. user is the name of the default output stream which is normally connected to the
console. user is always present, and told/0 can never close it. 
<P></P>
<A NAME="02bdeaed"></A><B>EXAMPLES  
<P></P>
<A NAME="02bdeaee"></A></B>The following program will preserve the current output stream, open a file and
write one term to it, and then restore the previous output stream.
<P></P>
<A NAME="02bdeaef"></A>
<P></P>
<A NAME="02bdeaf0"></A>firstTerm(File,Term) :- 
<P></P>
  <A NAME="02bdeaf1"></A>telling(CurrentOutput), 
<P></P>
  <A NAME="02bdeaf2"></A>tell(File), 
<P></P>
  <A NAME="02bdeaf3"></A>write(Term), 
<P></P>
  <A NAME="02bdeb1f"></A>told, 
<P></P>
  <A NAME="02bdeb16"></A>tell(CurrentOutput). 
<P></P>
<A NAME="02bdeb17"></A><B>SEE ALSO  
<P></P>
<A NAME="02bdeb18"></A></B>see/1, seeing/1, seen/0, User Guide (Prolog I/O),[Bowen 91, 7.8], [Clocksin 81, 5.4], [Bratko 86,
6.1]. <A NAME="02bdeb19"></A> <A NAME="02bdeb1a"></A> <A NAME="02bdeb1b"></A> <A NAME="02bdeb1c"></A> <A NAME="02bdeb1d"></A><A NAME="02bdeb1d"></A> <A NAME="02bdeb1e"></A> <A NAME="02bdeb4a"></A> <A NAME="02bdeb41"></A>
<P></P>
</BODY>
</HTML>