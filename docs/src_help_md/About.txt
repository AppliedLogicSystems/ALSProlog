 in this folder:
====================

About.txt     - this file
checklist.txt - temp: used to manage the cleanup process
doctools.pro  - contains two tools for working with the *.md ref files.
	They both have reasonable commandline access:
	* Process stylized libary and builtins *.pro files to create *.md files:

	alspro doctools.pro -g file_doc -b -p [-lib/-blt] <list of files> [-ow]

	* Create a skeletal new *.md page to be completed manually:

	alspro doctools.pro -g do_np -b -p <seed np file>.np
	
	Details are contained in comments in doctools.pro.

missingOrBadDoc.txt    - Notes about problems
nnp.np        		- bare empty framework for a *.np seed file for a new *.md file; 
			  can be created by doctools.pro: mknnp/0.
lib_blt_xamps/		- scripts and sample files for file_doc
bltlib_run_samples.sh	- runs all scripts in lib_blt_xamps/
xamps_np/		- scripts and sample files for do_np
run_np_samples.sh	- runs all scripts in xamps_np/
cleanup_runs.sh		- deletes sample generated ~ref/*.md files and samples copied to 
			  alsp_src/[builtins/library]

---------------
How to add a new alshelp *.md page:
1.  If nnp.np has been corrupted or deleted, run doctools.pro: mknnp/0 to write a new copy;
2.  Rename the empty nnp.np, and use an editor to insert all the necessary info 
	(cf.xamps_np/np_for_curl.np);
3.  If <xx>.np is the renamed and fleshed out nnp.np, run 
	alspro doctools.pro -g do_np -b -p <xx>.np

    Or start alspro doctools.pro, and then run	new_page(<xx>.np)
    At this point, the partially skeletal *.md for <xx>.np has been created.
4.  Change to ../ and execute make all followed by make run.
---------------
How to create doc for stylized builtins or library pages:
1.  See alsp_src/library/lib_skeleton.txt for a description of the stylization;
    See alsp_src/library/listutl[1-4].pro for examples of stylized files (examples missing)
    See alsp_src/library/miscatom.pro for an example of a stylized file with examples
2.  To create doc for a stylized library file, execute:
	alspro doctools.pro -g file_doc -b -p -lib <file>.pro [-ow]
    To create doc for a stylized builtins file, execute:
	alspro doctools.pro -g file_doc -b -p -blt <file>.pro [-ow]
    If the -ow switch is present, the existing ~ref/<file>.md doc file will be overwritten;
    If -ow is not present, the existing ~ref/<file>.md doc file will not be overwritten;
    This is true for both library (-lib) and builtins(-blt) files.
    Multiple files of the same type (-lib or -blt) can be processed at once, using:
	alspro doctools.pro -g file_doc -b -p [-lib/-blt] <list of files> [-ow]
---------------
How to create doc for stylized builtins or library pages:
1.  See alsp_src/library/lib_skeleton.txt for a description of the stylization;
    See alsp_src/library/listutl[1-4].pro for examples of stylized files (examples missing)
    See alsp_src/library/miscatom.pro for an example of a stylized file with examples
2.  To create doc for a stylized library file, execute:
	alspro doctools.pro -g file_doc -b -p -lib <file>.pro [-ow]
    To create doc for a stylized builtins file, execute:
	alspro doctools.pro -g file_doc -b -p -blt <file>.pro [-ow]
    If the -ow switch is present, the existing ~ref/<file>.md doc file will be overwritten;
    If -ow is not present, the existing ~ref/<file>.md doc file will not be overwritten;
    This is true for both library (-lib) and builtins(-blt) files.
    Multiple files of the same type (-lib or -blt) can be processed at once, using:
	alspro doctools.pro -g file_doc -b -p [-lib/-blt] <list of files> [-ow]
---------------
Getting tables of documented/undocumented builtins, and library files:
1.  Execute exprtd_blts.sh 
2.  The various tables are in ResultDir:
Undocumented builtins predicates which are exported:
	undocd_exported_by_pred.txt
	undocd_exported_by_bi_file.txt
Documented builtins predicates which are exported:
	docd_blts_by_pred.txt           
	docd_blts_by_bi_file.txt        
	docd_blts_by_md_file.txt        
Documented vs Undocumented vs Inactive Library files:
	Library_Files_Status.txt        
---------------
Workflow:
0. In terminal B, in the ALSProlog/docs dir, execute: make run
1. In terminal A, either edit a file in ALSProlog/docs/docs/ref, or
	generate a new *.md file in ALSProlog/docs/docs/ref using a command in doctools.pro.
2. In browser, examine edited or new page from the 'make run' of jekyll.
3. Cycle back to step 1
