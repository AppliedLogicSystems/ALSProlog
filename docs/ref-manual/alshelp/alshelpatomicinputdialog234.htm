<HTML>
<HEAD>
<TITLE>atomic_input_dialog/[2,3,4]</TITLE>
</HEAD><BODY>
<A NAME="b0cd7c9b"></A><B>atomic_input_dialog/[2,3,4]
<P></P>
<A NAME="d8e2c142"></A></B>atomic_input_dialog/[2,3,4] | - input atoms and numbers
<P></P>
<A NAME="b0cb08e7"></A><B>FORMS
<P></P>
<A NAME="b0cd3b1d"></A><A NAME="b0cd3b1c"></A><A NAME="d8e2c139"></A></B>atomic_input_dialog(Msg, Input)
<P></P>
<A NAME="b0cb0918"></A>atomic_input_dialog(Msg, Title, Input)
<P></P>
<A NAME="b0cc470e"></A>atomic_input_dialog(Interp, Msg, Title, Input)
<P></P>
<A NAME="b0cc4586"></A><B>DESCRIPTION
<P></P>
<A NAME="b0cc45b8"></A></B>These predicates present the user with popup dialogs requesting input of text
(as atoms) or numbers.  The shorter versions are defined by:
<P></P>
<A NAME="d8e2c13b"></A>atomic_input_dialog(Msg, Input)
<P></P>
<A NAME="b0c634fd"></A>    :-
<P></P>
<A NAME="b0c634fe"></A>    atomic_input_dialog(Msg, ‘Input’, Input).
<P></P>
<A NAME="b0c63500"></A>atomic_input_dialog(Msg, Title, Input)
<P></P>
<A NAME="b0c63501"></A>    :-
<P></P>
<A NAME="b0c63502"></A>    atomic_input_dialog(tcli, Msg, Title, Input).
<P></P>
<A NAME="b0cc4688"></A>For the general call
<P></P>
<A NAME="b0cc4689"></A>   atomic_input_dialog(Interp, Msg, Title, Input)
<P></P>
<A NAME="b0cc468a"></A>Interp, Msg, and Title should all be atoms, while Input should be an uninstantiated variable.
<P></P>
<A NAME="b0cc45db"></A><B>EXAMPLES
<P></P>
<A NAME="b0cc45da"></A></B>The call
<P></P>
<A NAME="b0c6352e"></A>?- atomic_input_dialog(‘Please input something:’,
<P></P>
<A NAME="b0cc46e1"></A>                        Input).
<P></P>
<A NAME="d8e2c13d"></A>will popup the following window:
<P></P>
<IMG SRC="images/atomic_input.gif" ALT="images/atomic_input.gif" BORDER=0 WIDTH=415 HEIGHT=157>
<P></P>
<A NAME="d8e2c13e"></A>If the user types
<P></P>
<A NAME="b0c63557"></A><I>Logic is wonderful 
<P></P>
<A NAME="b0c63558"></A></I>then the result would be
<P></P>
<A NAME="b0c63559"></A>Atom = Logic is wonderful 
<P></P>
</BODY>
</HTML>
