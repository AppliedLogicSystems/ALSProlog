<HTML>
<HEAD>
<TITLE>save_image/2</TITLE>
</HEAD><BODY>
<A NAME="4227ec5a"></A>save_image/2
<P></P>
<A NAME="43fe8610"></A><A NAME="4227ec56"></A>save_image/2 –  package an application
<P></P>
<A NAME="43fe8611"></A><B>FORMS
<P></P>
<A NAME="43fe8614"></A></B>save_image(NewImage,Options) <A NAME="43fe8612"></A><A NAME="43fe8612"></A> <A NAME="43fe8613"></A>
<P></P>
<A NAME="43fe8615"></A><A NAME="43fe8615"></A><B>DESCRIPTION
<P></P>
<A NAME="43fe8616"></A></B>save_image/2 is called to package up the Prolog's code areas, symbol table, and module
information into a single image.  Any Prolog library code which the image depends
on will not by default be packaged into the image.
<P></P>
<A NAME="43fe8d7b"></A>NewImage should be bound to an atom which represents the pathname to the new image to
be created.  Options is a list of options which control the disposition and startup
characteristics for the new image.  The forms which may be on an options list to save_image/2 are:
<P></P>
<A NAME="43fe8d72"></A>start_goal(SGoal) – SGoal is a goal which is accessible from the user module.  This goal is run in
place of the current starting goal (usually the Prolog shell) when the application
starts up.  If the start_goal(SGoal) form is not specified in the options list, then the current starting goal is
retained as the starting goal for the new image.
<P></P>
<A NAME="43fe8d73"></A>init_goals(IGoal) – IGoal is either a single goal or a conjunction of goals to be run prior to the
starting goal (see above).  IGoal will be executed after the initialization goals added by previous packages
including the ALS Prolog system itself.  This form provides a mechanism for
performing initializations which the present environment requires and would be
required should any packagesbe built upon the newly saved image.
<P></P>
<A NAME="43fe8d74"></A>libload(Bool) – Bool is either true or false.  If true, the Prolog library is loaded as part of the package.  This is necessary
since the Prolog library is demand loaded and may not be part of the development
environment when the image is saved.  If false, the Prolog library is not loaded as part of the package.  Once created,
however, the library may still be (demand) loaded by the new image, provided the
library files are still accessible to the new image.  In general, applications
which require the Prolog library and will leave the machine on which the
development environment exists should specify Bool as true.  Applications which may need the library but will be run on the same machine
as the development environment can specify Bool as false if it is necessary to keep the space requirements for the new image  as small
as possible.
<P></P>
<A NAME="43fe8d75"></A>select_lib(FilesList) – FilesList is a list library file names from the Prolog library. Each of the listed
library files is loaded as part of the package.  
<P></P>
<A NAME="43fe8d76"></A>The process of creating a new image consists of the following steps:
<P></P>
<A NAME="43fe8d77"></A><OL><LI> Process the options, changing the starting goal, extending the initialization
goals, or forcefully loading the Prolog library as specified by the options.
<P></P>
<A NAME="43fe8d78"></A><LI> Create a saved code state which is put into a temporary directory.  The
directory in which this saved code state is put may be influenced by changing the
TMPDIR variable.
<P></P>
<A NAME="43fe8d79"></A><LI> Merge the saved code state and the current Prolog image together into a new
image file.
<P></P>
<A NAME="43fe8d7a"></A></OL><B>EXAMPLES  
<P></P>
<A NAME="43fe8bf8"></A></B>?- save_image(hello, [start_goal(printf('Hello world\n',[]))]).
<P></P>
<A NAME="43fe8bef"></A>Executing /max4/kev/merge3/M88k/Mot-SVR4/obj/./alsdir/als-mics
/max4/kev/merge3/M88k/Mot-SVR4/obj/alspro /var/tmp/aptAAAa000un hello
<P></P>
<A NAME="43fe8bf0"></A>
<P></P>
<A NAME="43fe8bf1"></A>yes.
<P></P>
<A NAME="43fe8bf2"></A>?- halt.
<P></P>
<A NAME="43fe8bf3"></A>max:scratch$ hello
<P></P>
<A NAME="43fe8bf4"></A>Hello world
<P></P>
<A NAME="43fe8bf5"></A>max:scratch$ 
<P></P>
<A NAME="43fe8bf6"></A><B>NOTES
<P></P>
<A NAME="43fe8bf7"></A></B>The als-mics program is required to merge the code state with a working ALS
Prolog image.  If this program does not exist or is inaccessible, an image will
not be saved.  The place where als-mics is searched for can be obtained by
entering the following query:
<P></P>
<A NAME="43fe8c23"></A>
<P></P>
<A NAME="43fe8c1a"></A>?- builtins:sys_searchdir(Where).
<P></P>
<A NAME="43fe8c1b"></A>Where will be bound to the directory where save_image expects to find the als-mics program.
<P></P>
<A NAME="43fe8c1c"></A>Global variable values and database assertions dealing with environmental
issues should be initialized (or reinitialized) via a goal passed to init_goals.
<P></P>
<A NAME="43fe8c1d"></A>save_image/2 prints diagnostic messages when something goes wrong. This procedure will
eventually be updated to throw errors in a manner compatible with the standard.
<P></P>
</BODY>
</HTML>