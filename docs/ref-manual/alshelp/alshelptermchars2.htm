<HTML>
<HEAD>
<TITLE>term_chars/2</TITLE>
</HEAD><BODY>
<A NAME="193cde0a"></A>term_chars/2
<P></P>
<A NAME="84b8562d"></A><A NAME="82df6c30"></A>term_chars/2 –  convert between a term and the list of  characters which represent the term
<P></P>
<A NAME="84b8562e"></A><A NAME="82e06fad"></A>term_codes/2 –  convert between a term and the list of character codes which represent the
term
<P></P>
<A NAME="84b8565a"></A><B>FORMS
<P></P>
<A NAME="84b85651"></A></B>term_chars(Term,CharList)
<P></P>
<A NAME="84b85654"></A>term_codes(Term,CodeList) <A NAME="84b85652"></A><A NAME="84b85652"></A>   <A NAME="84b85653"></A><A NAME="84b85653"></A>   
<P></P>
<A NAME="84b85655"></A><B>DESCRIPTION
<P></P>
<A NAME="84b85656"></A></B>If CharList is bound to a list of characters then it is parsed according to the syntax
rules for terms.  Should the parse be successful, the resulting value is unified
with Term in a call to  term_chars/2.
<P></P>
<A NAME="84b85657"></A>If CodeList is bound to a list of character codes then it is is parsed according to the
syntax rules for terms.  Should the parse be successful, the resulting value is
unified with Term in a call to term_codes/2.
<P></P>
<A NAME="84b85658"></A>Otherwise CharList (or CodeList) will be bound to the list of characters (character codes) which would result
as output from write_canonical(Term)
<P></P>
<A NAME="84b85659"></A><B>EXAMPLES
<P></P>
<A NAME="84b85685"></A></B>?- term_chars(p(a,X), L).
<P></P>
<A NAME="84b8567c"></A>
<P></P>
<A NAME="84b8567d"></A>X = X
<P></P>
<A NAME="84b8567e"></A>L = [p,'(',a,',','_','A',')']
<P></P>
<A NAME="84b8567f"></A>
<P></P>
<A NAME="84b85680"></A>yes.
<P></P>
<A NAME="84b85681"></A>?- term_codes(A,&quot;X = /* a comment */ 3+4&quot;).
<P></P>
<A NAME="84b85682"></A>
<P></P>
<A NAME="84b85683"></A>A = (_A = 3+4)
<P></P>
<A NAME="84b85684"></A>
<P></P>
<A NAME="84b85de9"></A>yes.
<P></P>
<A NAME="84b85de0"></A>?- term_codes(A,&quot;foo bar&quot;).
<P></P>
<A NAME="84b85de1"></A>
<P></P>
<A NAME="84b85de2"></A>Error: Syntax error.
<P></P>
<A NAME="84b85de3"></A>- Goal:          builtins:term_codes(_A,&quot;foo bar&quot;)
<P></P>
<A NAME="84b85de4"></A>- Error Attribute: syntax('foo barend_of_file\n    ^',
<P></P>
<A NAME="84b85de5"></A>                     'Fullstop (period) expected',1,
<P></P>
<A NAME="84b85de6"></A>                     stream_descriptor('',closed,string,
<P></P>
<A NAME="84b85de7"></A>                         string(&quot;foo bar&quot;),[input|nooutput],false,3,
<P></P>
<A NAME="84b85de8"></A>                         [],0,0,0,true,1,wt_opts(78,40000,flat),[],
<P></P>
<A NAME="84b85c66"></A>                         true,text,eof_code,0,0))
<P></P>
<A NAME="84b85c5d"></A>- Throw pattern: error(syntax_error,
<P></P>
<A NAME="84b85c5e"></A>                     [builtins:term_codes(_A,*),
<P></P>
<A NAME="84b85c5f"></A>                         syntax('foo barend_of_file\n    ^',
<P></P>
<A NAME="84b85c60"></A>                             'Fullstop (period) expected',1,
<P></P>
<A NAME="84b85c61"></A>                             stream_descriptor('',closed,string,*,*,
<P></P>
<A NAME="84b85c62"></A>                             false,3,[],0,0,0,true,1,*,[],true,
<P></P>
<A NAME="84b85c63"></A>                             text,eof_code,0,0))])
<P></P>
<A NAME="84b85c64"></A><B>ERRORS
<P></P>
<A NAME="84b85c65"></A></B>CharList is bound to a list, but the list does not contain characters
<P></P>
<A NAME="84b85c91"></A>––––&gt;  domain_error(character_list,CharList)
<P></P>
<A NAME="84b85c88"></A>CodeList is bound to a list, but the list does not contain character codes
<P></P>
<A NAME="84b85c89"></A>––––&gt;  domain_error(character_code_list,CodeList)
<P></P>
<A NAME="84b85c8a"></A>CharList (or CodeList) is not parsable as a term
<P></P>
<A NAME="84b85c8b"></A>––––&gt;  syntax_error
<P></P>
<A NAME="84b85c8c"></A><B>SEE ALSO
<P></P>
<A NAME="84b85c8d"></A></B>read_term/3, write_canonical/2, number_chars, atom_chars,
<P></P>
<A NAME="84b85c8e"></A>User Guide (Prolog I/O).
<P></P>
</BODY>
</HTML>